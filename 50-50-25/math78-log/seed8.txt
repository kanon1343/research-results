2023-08-02 19:04:10 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-02 19:04:10 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-02 19:04:10 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-02 19:04:10 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 8 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-08-02 19:04:28 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-08-02 19:04:28 [main] [INFO]  KGenProgMain - GA started
2023-08-02 19:04:28 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-02 19:04:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 50, build-succeeded 12, build-failed 32, syntax-invalid 3, redundant 3
Fitness: max 1(1), min 0(11), ave 0.083
Test execution time: sum 1753 ms, max 246 ms, min 71 ms
----------------------------------------------------------------

2023-08-02 19:04:35 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-02 19:04:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 50, build-succeeded 12, build-failed 36, syntax-invalid 2, redundant 0
Fitness: max 0(12), min 0(12), ave 0
Test execution time: sum 951 ms, max 109 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 19:04:39 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-02 19:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, build-succeeded 24, build-failed 27, syntax-invalid 12, redundant 37
Fitness: max 0(24), min 0(24), ave 0
Test execution time: sum 1949 ms, max 206 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:04:45 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-02 19:04:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 5, redundant 30
Fitness: max 0(34), min 0(34), ave 0
Test execution time: sum 2197 ms, max 93 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 19:04:50 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-02 19:04:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 100, build-succeeded 33, build-failed 29, syntax-invalid 9, redundant 29
Fitness: max 1(1), min 0(32), ave 0.03
Test execution time: sum 2425 ms, max 206 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:04:57 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-02 19:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 100, build-succeeded 36, build-failed 29, syntax-invalid 4, redundant 31
Fitness: max 0(36), min 0(36), ave 0
Test execution time: sum 2481 ms, max 176 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:05:04 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-02 19:05:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 100, build-succeeded 39, build-failed 25, syntax-invalid 9, redundant 27
Fitness: max 1(1), min 0(38), ave 0.026
Test execution time: sum 2520 ms, max 224 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:05:10 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-02 19:05:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 7, redundant 22
Fitness: max 1(3), min 0(43), ave 0.065
Test execution time: sum 2903 ms, max 227 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:05:17 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-02 19:05:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 8, redundant 20
Fitness: max 1(2), min 0(43), ave 0.044
Test execution time: sum 2902 ms, max 213 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:05:23 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-02 19:05:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 2 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 6, redundant 18
Fitness: max 1(1), min 0(46), ave 0.021
Test execution time: sum 2936 ms, max 148 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:05:30 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-02 19:05:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 9 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 15, redundant 9
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2940 ms, max 143 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:05:37 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-02 19:05:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 16 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 10, redundant 12
Fitness: max 1(3), min 0(44), ave 0.064
Test execution time: sum 2981 ms, max 215 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:05:45 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-02 19:08:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 24 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 5, redundant 10
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 183360 ms, max 180096 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:08:53 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-02 19:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 32 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 7, redundant 12
Fitness: max 1(2), min 0(47), ave 0.041
Test execution time: sum 183269 ms, max 180066 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:12:00 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-02 19:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 11, redundant 8
Fitness: max 1(3), min 0(48), ave 0.059
Test execution time: sum 2856 ms, max 97 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:12:07 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-02 19:12:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 6, redundant 9
Fitness: max 1(5), min 0(50), ave 0.091
Test execution time: sum 3474 ms, max 169 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:12:16 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-02 19:12:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 54 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 2929 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:12:23 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-02 19:12:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 1 seconds
Variants: generated 100, build-succeeded 46, build-failed 27, syntax-invalid 19, redundant 8
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2641 ms, max 142 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:12:30 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-02 19:12:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 8 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0(41), ave 0.024
Test execution time: sum 2444 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:12:36 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-02 19:12:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 15 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 16, redundant 7
Fitness: max 0(42), min 0(42), ave 0
Test execution time: sum 2381 ms, max 131 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:12:44 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-02 19:12:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2949 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:12:51 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-02 19:12:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 30 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 15, redundant 7
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2832 ms, max 152 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:12:59 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-02 19:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 38 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 15, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3233 ms, max 211 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:13:07 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-02 19:13:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 45 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 18, redundant 7
Fitness: max 0(42), min 0(42), ave 0
Test execution time: sum 2308 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:13:13 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-02 19:13:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 1(2), min 0(55), ave 0.035
Test execution time: sum 3454 ms, max 202 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:13:22 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-02 19:13:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 1 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 15, redundant 4
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2981 ms, max 207 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:13:30 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-02 19:13:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 16, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2988 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:13:38 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-02 19:13:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 17 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3024 ms, max 130 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:13:46 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-02 19:13:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 26 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 6, redundant 3
Fitness: max 1(2), min 0(62), ave 0.031
Test execution time: sum 3660 ms, max 141 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:13:55 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-02 19:14:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 11, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2846 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:14:03 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-02 19:14:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 43 seconds
Variants: generated 100, build-succeeded 54, build-failed 36, syntax-invalid 5, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3099 ms, max 145 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:14:11 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-02 19:14:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 12, redundant 12
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2776 ms, max 163 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:14:20 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-02 19:14:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 0 seconds
Variants: generated 100, build-succeeded 68, build-failed 25, syntax-invalid 2, redundant 5
Fitness: max 1(1), min 0(67), ave 0.015
Test execution time: sum 3843 ms, max 77 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:14:29 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-02 19:14:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 6, redundant 6
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3080 ms, max 127 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:14:38 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-02 19:14:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 17 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 11, redundant 9
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2850 ms, max 70 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:14:46 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-02 19:14:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 5, redundant 7
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3141 ms, max 127 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:14:55 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-02 19:15:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 34 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 8, redundant 12
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3217 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:15:03 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-02 19:15:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 43 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 18, redundant 2
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2694 ms, max 139 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:15:12 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-02 19:15:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2715 ms, max 76 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:15:20 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-02 19:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 0 seconds
Variants: generated 100, build-succeeded 48, build-failed 37, syntax-invalid 10, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2769 ms, max 140 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:15:29 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-02 19:15:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 8 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 17, redundant 6
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2810 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:15:37 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-02 19:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 18 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 12, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3048 ms, max 156 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:15:47 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-02 19:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 27 seconds
Variants: generated 100, build-succeeded 53, build-failed 36, syntax-invalid 8, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3098 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:15:56 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-02 19:16:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 38 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 8, redundant 6
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 4016 ms, max 181 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 19:16:07 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-02 19:16:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3629 ms, max 204 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 19:16:19 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-02 19:16:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 59 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 16, redundant 1
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3242 ms, max 96 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:16:28 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-02 19:16:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 8, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3248 ms, max 76 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 19:16:38 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-02 19:16:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 20 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 6, redundant 5
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3647 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:16:49 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-02 19:16:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 8, redundant 5
Fitness: max 1(2), min 0(55), ave 0.035
Test execution time: sum 3532 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:16:59 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-02 19:17:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 42 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 3, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3607 ms, max 147 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:17:11 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-02 19:20:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 7, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 183475 ms, max 180067 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:20:21 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-02 19:23:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 3 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 6, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 183637 ms, max 180067 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:23:32 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-02 19:23:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 15 seconds
Variants: generated 100, build-succeeded 58, build-failed 36, syntax-invalid 4, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3706 ms, max 227 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:23:43 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-02 19:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 26 seconds
Variants: generated 100, build-succeeded 66, build-failed 30, syntax-invalid 1, redundant 3
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3799 ms, max 125 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:23:55 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-02 19:24:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 35 seconds
Variants: generated 100, build-succeeded 55, build-failed 38, syntax-invalid 3, redundant 4
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3164 ms, max 78 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:24:04 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-02 19:24:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 47 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 4, redundant 2
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3810 ms, max 145 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:24:16 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-02 19:24:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 58 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 7, redundant 1
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3797 ms, max 202 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:24:27 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-02 19:24:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 9, redundant 8
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3363 ms, max 83 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:24:37 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-02 19:24:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 18 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 12, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3367 ms, max 213 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:24:47 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-02 19:24:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 8, redundant 1
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3634 ms, max 78 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:24:58 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-02 19:25:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 40 seconds
Variants: generated 100, build-succeeded 54, build-failed 37, syntax-invalid 7, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3166 ms, max 138 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:25:08 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-02 19:25:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 6, redundant 5
Fitness: max 1(2), min 0(56), ave 0.034
Test execution time: sum 3297 ms, max 74 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:25:19 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-02 19:25:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 5, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3367 ms, max 122 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:25:30 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-02 19:25:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 11 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 5, redundant 2
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3414 ms, max 75 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:25:40 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-02 19:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 23 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 1, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3580 ms, max 131 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:25:52 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-02 19:26:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 33 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 3, redundant 2
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3427 ms, max 84 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:26:02 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-02 19:26:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 45 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 3, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3581 ms, max 274 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:26:14 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-02 19:26:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 57 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 6, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3237 ms, max 163 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:26:25 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-02 19:26:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 9 seconds
Variants: generated 100, build-succeeded 58, build-failed 36, syntax-invalid 5, redundant 1
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3574 ms, max 188 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:26:37 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-02 19:26:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 21 seconds
Variants: generated 100, build-succeeded 65, build-failed 31, syntax-invalid 3, redundant 1
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3666 ms, max 119 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:26:50 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-02 19:27:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 32 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 5, redundant 5
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3496 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:27:00 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-02 19:27:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 44 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 3, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3640 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:27:12 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-02 19:27:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 55 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 9, redundant 4
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3707 ms, max 212 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:27:24 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-02 19:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 6 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 11, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3142 ms, max 76 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:27:35 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-02 19:27:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 38, syntax-invalid 4, redundant 2
Fitness: max 1(1), min 0(55), ave 0.018
Test execution time: sum 3426 ms, max 140 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:27:47 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-02 19:27:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3156 ms, max 78 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:27:58 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-02 19:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 40 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 17, redundant 3
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 3022 ms, max 194 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:28:09 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-02 19:28:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 50 seconds
Variants: generated 100, build-succeeded 43, build-failed 40, syntax-invalid 15, redundant 2
Fitness: max 0(43), min 0(43), ave 0
Test execution time: sum 2542 ms, max 84 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:28:19 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-02 19:28:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 2 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 8, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3361 ms, max 119 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:28:31 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-02 19:28:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 12 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 13, redundant 2
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2856 ms, max 80 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:28:41 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-02 19:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 24 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 3, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3544 ms, max 188 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:28:53 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-02 19:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 37 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3517 ms, max 125 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:29:06 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-02 19:29:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 47 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 14, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2872 ms, max 76 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:29:16 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-02 19:29:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3465 ms, max 159 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:29:28 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-02 19:29:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 11 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3247 ms, max 67 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:29:40 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-02 19:29:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 23 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 5, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3394 ms, max 116 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:29:52 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-02 19:30:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 35 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 7, redundant 1
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3424 ms, max 86 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:30:04 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-02 19:30:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 48 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 9, redundant 6
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3397 ms, max 126 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:30:17 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-02 19:30:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 1 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 5, redundant 3
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3711 ms, max 190 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:30:30 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-02 19:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 12 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 15, redundant 1
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3019 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:30:41 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-02 19:30:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 25 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 6, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3392 ms, max 199 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:30:54 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-02 19:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 38 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 7, redundant 2
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3439 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:31:06 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-02 19:31:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 39, syntax-invalid 6, redundant 3
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3179 ms, max 187 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:31:19 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-02 19:31:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 3 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 5, redundant 6
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3469 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:31:32 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-02 19:31:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 16 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 6, redundant 3
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3615 ms, max 116 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:31:45 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-02 19:31:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 29 seconds
Variants: generated 100, build-succeeded 57, build-failed 37, syntax-invalid 0, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3107 ms, max 81 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:31:57 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-02 19:32:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 42 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 0, redundant 6
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3646 ms, max 142 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:32:11 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-02 19:32:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 55 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 3, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3168 ms, max 73 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:32:23 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-02 19:32:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 6, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3431 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:32:37 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-02 19:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 21 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 4, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3348 ms, max 80 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:32:49 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-02 19:33:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 34 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3432 ms, max 180 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:33:03 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-02 19:33:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 46 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 8, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3303 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:33:15 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-02 19:33:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 1 seconds
Variants: generated 100, build-succeeded 67, build-failed 29, syntax-invalid 2, redundant 2
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 3774 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:33:29 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-02 19:33:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 13 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 8, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3032 ms, max 73 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:33:42 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-02 19:33:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 27 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 8, redundant 1
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3342 ms, max 195 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:33:55 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-02 19:34:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 5, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3179 ms, max 78 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:34:08 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-02 19:34:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 6, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3268 ms, max 119 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:34:22 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-02 19:34:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 6 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 7, redundant 3
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3463 ms, max 75 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:34:35 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-02 19:34:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 20 seconds
Variants: generated 100, build-succeeded 60, build-failed 34, syntax-invalid 3, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3463 ms, max 116 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:34:49 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-02 19:35:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 33 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 4, redundant 2
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3428 ms, max 82 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:35:02 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-02 19:35:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 48 seconds
Variants: generated 100, build-succeeded 67, build-failed 27, syntax-invalid 3, redundant 3
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 3848 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:35:16 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-02 19:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 1 seconds
Variants: generated 100, build-succeeded 68, build-failed 25, syntax-invalid 5, redundant 2
Fitness: max 0(68), min 0(68), ave 0
Test execution time: sum 3631 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:35:30 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-02 19:35:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 16 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 3, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3356 ms, max 114 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:35:44 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-02 19:35:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 30 seconds
Variants: generated 100, build-succeeded 66, build-failed 31, syntax-invalid 0, redundant 3
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3625 ms, max 67 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:35:58 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-02 19:36:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 45 seconds
Variants: generated 100, build-succeeded 62, build-failed 34, syntax-invalid 4, redundant 0
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3411 ms, max 113 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:36:13 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-02 19:36:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 58 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 4, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3286 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:36:27 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-02 19:36:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 13 seconds
Variants: generated 100, build-succeeded 60, build-failed 35, syntax-invalid 3, redundant 2
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3344 ms, max 119 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:36:42 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-02 19:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 27 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 4, redundant 4
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3452 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:36:56 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-02 19:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 42 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 4, redundant 3
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3441 ms, max 125 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:37:11 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-02 19:37:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 56 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 6, redundant 1
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3177 ms, max 70 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:37:24 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-02 19:37:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 12, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3043 ms, max 169 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:37:39 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-02 19:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 24 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 5, redundant 2
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3303 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:37:53 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-02 19:38:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3320 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:38:08 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-02 19:38:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 53 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 8, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3172 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:38:22 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-02 19:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 5, redundant 2
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3463 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:38:37 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-02 19:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 8, redundant 2
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3032 ms, max 66 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:38:50 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-02 19:39:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 16, redundant 3
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2899 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:39:05 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-02 19:39:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 11, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2884 ms, max 97 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:39:19 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-02 19:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 5 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 12, redundant 2
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3346 ms, max 196 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 19:39:34 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-02 19:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 19 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 7, redundant 3
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3336 ms, max 70 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:39:48 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-02 19:40:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 38, syntax-invalid 8, redundant 5
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2854 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:40:03 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-02 19:40:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3115 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:40:17 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-02 19:40:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 3 seconds
Variants: generated 100, build-succeeded 50, build-failed 36, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 2931 ms, max 114 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:40:32 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-02 19:40:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 18 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 9, redundant 1
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3251 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:40:47 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-02 19:41:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 10, redundant 2
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3580 ms, max 156 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:41:03 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-02 19:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 12, redundant 2
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2793 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:41:17 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-02 19:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 3 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 6, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3258 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:41:32 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-02 19:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 18 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 2, redundant 11
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 2975 ms, max 73 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:41:47 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-02 19:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 34 seconds
Variants: generated 100, build-succeeded 66, build-failed 28, syntax-invalid 1, redundant 5
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3775 ms, max 120 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:42:03 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-02 19:42:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 50 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 6, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3186 ms, max 66 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:42:18 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-02 19:42:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 6 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 4, redundant 3
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3812 ms, max 180 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:42:35 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-02 19:42:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 22 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 10, redundant 8
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3315 ms, max 69 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:42:50 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-02 19:43:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 38 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3478 ms, max 108 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:43:07 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-02 19:43:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 54 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 11, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3114 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:43:22 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-02 19:43:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 11 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 4, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3532 ms, max 200 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:43:40 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-02 19:43:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 26 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 17, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2813 ms, max 73 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:43:55 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-02 19:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 43 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 7, redundant 9
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3407 ms, max 116 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:44:12 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-02 19:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 59 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 10, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3057 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:44:27 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-02 19:44:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 10, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3304 ms, max 115 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:44:45 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-02 19:45:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 4, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3317 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:45:01 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-02 19:45:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 5, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3483 ms, max 113 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:45:18 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-02 19:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 5 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 5, redundant 4
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3339 ms, max 70 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 19:45:34 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-02 19:45:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 23 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 5, redundant 2
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3513 ms, max 142 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:45:51 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-02 19:46:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 39 seconds
Variants: generated 100, build-succeeded 52, build-failed 38, syntax-invalid 9, redundant 1
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2921 ms, max 81 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:46:08 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-02 19:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 7, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3294 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:46:25 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-02 19:46:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 13 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 5, redundant 3
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3506 ms, max 74 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:46:42 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-02 19:46:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3345 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:46:59 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-02 19:47:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 47 seconds
Variants: generated 100, build-succeeded 69, build-failed 22, syntax-invalid 6, redundant 3
Fitness: max 0(69), min 0(69), ave 0
Test execution time: sum 3799 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:47:16 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-02 19:47:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 5 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 5, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3369 ms, max 117 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:47:34 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-02 19:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 22 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3259 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:47:50 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-02 19:48:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 39 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 5, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3319 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:48:08 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-02 19:48:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 9, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2974 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:48:24 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-02 19:48:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 4, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3371 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:48:42 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-02 19:49:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 31 seconds
Variants: generated 100, build-succeeded 67, build-failed 22, syntax-invalid 3, redundant 8
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 3695 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:49:00 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-02 19:49:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 7, redundant 8
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3187 ms, max 183 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:49:18 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-02 19:49:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 7 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 4, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3358 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:49:35 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-02 19:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 25 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3397 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:49:54 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-02 19:50:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 44 seconds
Variants: generated 100, build-succeeded 66, build-failed 30, syntax-invalid 2, redundant 2
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3650 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:50:12 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-02 19:50:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 5, redundant 8
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3472 ms, max 117 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:50:31 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-02 19:50:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 19 seconds
Variants: generated 100, build-succeeded 45, build-failed 40, syntax-invalid 9, redundant 6
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2496 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:50:48 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-02 19:51:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 37 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 10, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3092 ms, max 127 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:51:05 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-02 19:51:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 54 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 7, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3261 ms, max 74 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:51:23 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-02 19:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 13 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 10, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3494 ms, max 128 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:51:41 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-02 19:51:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 12, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2875 ms, max 79 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:51:59 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-02 19:52:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 12, redundant 4
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2995 ms, max 113 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:52:17 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-02 19:52:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 12, redundant 7
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2975 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:52:33 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-02 19:52:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 9, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3327 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:52:52 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-02 19:53:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 41 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 4, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3400 ms, max 75 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:53:10 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-02 19:53:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 9, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3250 ms, max 195 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:53:29 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-02 19:53:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 18 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 5, redundant 7
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3414 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:53:47 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-02 19:54:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 38 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 3, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3548 ms, max 108 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:54:07 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-02 19:54:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 57 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 4, redundant 5
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3610 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:54:26 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-02 19:54:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 17 seconds
Variants: generated 100, build-succeeded 65, build-failed 26, syntax-invalid 5, redundant 4
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3839 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:54:46 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-02 19:55:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 36 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 3, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3386 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:55:04 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-02 19:55:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 56 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 3, redundant 4
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3820 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:55:25 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-02 19:55:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 15 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 7, redundant 2
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3450 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:55:43 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-02 19:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 35 seconds
Variants: generated 100, build-succeeded 64, build-failed 24, syntax-invalid 3, redundant 9
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3751 ms, max 128 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:56:04 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-02 19:56:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 54 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 10, redundant 2
Fitness: max 1(2), min 0(58), ave 0.033
Test execution time: sum 3533 ms, max 77 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:56:22 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-02 19:56:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 36, syntax-invalid 10, redundant 4
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2970 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:56:42 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-02 19:57:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 31 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3052 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:57:00 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-02 19:57:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 7, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3313 ms, max 121 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:57:19 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-02 19:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 8 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 15, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2743 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:57:37 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-02 19:57:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 13, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3107 ms, max 117 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 19:57:56 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-02 19:58:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 45 seconds
Variants: generated 100, build-succeeded 46, build-failed 36, syntax-invalid 14, redundant 4
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2584 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:58:14 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-02 19:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 4 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 17, redundant 6
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2792 ms, max 204 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:58:33 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-02 19:58:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 22 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 11, redundant 4
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2885 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:58:51 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-02 19:59:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 43 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3311 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 19:59:12 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-02 19:59:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 2 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 8, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3411 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:59:31 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-02 19:59:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 23 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 7, redundant 11
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3567 ms, max 125 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 19:59:52 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-02 20:00:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 43 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 7, redundant 8
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3359 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:00:12 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-02 20:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 4 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 12, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2991 ms, max 122 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:00:33 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-02 20:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3206 ms, max 100 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:00:52 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-02 20:01:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 7, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3665 ms, max 219 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:01:14 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-02 20:01:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 5 seconds
Variants: generated 100, build-succeeded 50, build-failed 37, syntax-invalid 12, redundant 1
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2863 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:01:34 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-02 20:01:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 26 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 9, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3099 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:01:55 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-02 20:02:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 47 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 6, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3213 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:02:16 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-02 20:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 9 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 5, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3642 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:02:38 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-02 20:02:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 30 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 4, redundant 6
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3640 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:02:59 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-02 20:03:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 51 seconds
Variants: generated 100, build-succeeded 51, build-failed 37, syntax-invalid 9, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2950 ms, max 114 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:03:20 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-02 20:03:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 11 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 11, redundant 5
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2793 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:03:40 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-02 20:04:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 33 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 8, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3446 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:04:02 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-02 20:04:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 7, redundant 8
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2989 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:04:22 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-02 20:04:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 2, redundant 5
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3645 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:04:44 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-02 20:05:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 7, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3443 ms, max 67 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:05:05 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-02 20:05:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 6, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3473 ms, max 243 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:05:27 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-02 20:05:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 19 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 7, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3032 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:05:48 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-02 20:06:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 41 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 8, redundant 9
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3266 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:06:10 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-02 20:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 1 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 7, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3023 ms, max 77 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:06:30 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-02 20:06:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 23 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3331 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 20:06:52 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-02 20:07:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 9, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2912 ms, max 74 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 20:07:13 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-02 20:07:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 6 seconds
Variants: generated 100, build-succeeded 54, build-failed 36, syntax-invalid 9, redundant 1
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3206 ms, max 188 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:07:35 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-02 20:07:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 27 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 8, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3200 ms, max 72 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:07:56 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-02 20:08:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 49 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 10, redundant 12
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3173 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:08:18 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-02 20:08:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 10 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 6, redundant 10
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3059 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:08:39 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-02 20:09:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 32 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 9, redundant 5
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3160 ms, max 126 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:09:01 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-02 20:09:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3287 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:09:22 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-02 20:09:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 16 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 4, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3450 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:09:45 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-02 20:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 38 seconds
Variants: generated 100, build-succeeded 65, build-failed 29, syntax-invalid 2, redundant 4
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3570 ms, max 78 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:10:07 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-02 20:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 8, redundant 9
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3287 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:10:30 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-02 20:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 23 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 2, redundant 14
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3253 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:10:52 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-02 20:11:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 46 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 4, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3413 ms, max 207 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:11:15 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-02 20:11:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 8 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 7, redundant 7
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3516 ms, max 79 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:11:37 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-02 20:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 32 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 6, redundant 10
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3542 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:12:00 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-02 20:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 52 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 13, redundant 11
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2794 ms, max 80 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:12:21 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-02 20:12:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 16 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 6, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3401 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:12:45 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-02 20:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 5, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3238 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:13:07 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-02 20:13:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 9, redundant 10
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3210 ms, max 188 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 20:13:30 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-02 20:13:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 23 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 7, redundant 3
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3471 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:13:52 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-02 20:14:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 47 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 4, redundant 9
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3512 ms, max 117 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:14:16 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-02 20:14:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 9 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 5, redundant 7
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3537 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:14:38 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-02 20:15:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 33 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 3, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3584 ms, max 119 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:15:02 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-02 20:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 56 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 3, redundant 8
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3384 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:15:25 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-02 20:15:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 21 seconds
Variants: generated 100, build-succeeded 65, build-failed 29, syntax-invalid 3, redundant 3
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3882 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:15:49 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-02 20:16:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 42 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 10, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3063 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:16:11 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-02 20:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 6 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 9, redundant 0
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3455 ms, max 128 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:16:35 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-02 20:16:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 29 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3359 ms, max 86 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:16:58 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-02 20:17:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 54 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 4, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3485 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:17:23 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-02 20:17:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 5, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3175 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:17:46 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-02 20:18:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 42 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 2, redundant 9
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3325 ms, max 107 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 20:18:10 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-02 20:18:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 4, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3216 ms, max 70 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:18:34 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-02 20:19:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 31 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 4, redundant 7
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3698 ms, max 191 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:19:00 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-02 20:19:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 55 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 5, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3301 ms, max 67 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:19:24 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-02 20:19:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 21 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0(67), ave 0.015
Test execution time: sum 3972 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:19:50 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-02 20:26:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 47 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 6, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 363763 ms, max 180083 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:26:15 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-02 20:26:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 12 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 4, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3575 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:26:41 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-02 20:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 37 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 11, redundant 0
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3314 ms, max 77 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:27:05 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-02 20:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 5, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3669 ms, max 249 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:27:32 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-02 20:27:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 28 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 6, redundant 5
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3589 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:27:56 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-02 20:28:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 53 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 3, redundant 11
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3297 ms, max 113 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:28:22 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-02 20:28:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3293 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:28:46 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-02 20:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 43 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 6, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3406 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:29:11 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-02 20:29:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 8 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 2, redundant 9
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3635 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:29:36 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-02 20:30:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 33 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 8, redundant 3
Fitness: max 1(1), min 0(64), ave 0.015
Test execution time: sum 3830 ms, max 132 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 20:30:02 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-02 20:33:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 6, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 183533 ms, max 180070 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:33:28 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-02 20:33:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 25 seconds
Variants: generated 100, build-succeeded 57, build-failed 38, syntax-invalid 4, redundant 1
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3353 ms, max 82 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:33:53 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-02 20:37:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 11, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 183670 ms, max 180076 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:37:19 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-02 20:37:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 14 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 12, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3257 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:37:43 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-02 20:38:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 38 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3492 ms, max 115 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:38:07 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-02 20:38:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 3 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 12, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3257 ms, max 75 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:38:31 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-02 20:38:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 13, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3370 ms, max 197 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:38:56 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-02 20:39:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 9, redundant 4
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3209 ms, max 79 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:39:20 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-02 20:39:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 14, redundant 2
Fitness: max 1(2), min 0(55), ave 0.035
Test execution time: sum 3496 ms, max 135 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:39:45 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-02 20:40:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 11, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3472 ms, max 73 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:40:09 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-02 20:40:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 6 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 14, redundant 4
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3241 ms, max 135 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:40:34 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-02 20:40:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 30 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3469 ms, max 73 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:40:59 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-02 20:41:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 55 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2891 ms, max 136 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:41:24 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-02 20:41:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 6, redundant 4
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3322 ms, max 74 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 20:41:49 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-02 20:42:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 44 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 16, redundant 3
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3325 ms, max 129 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:42:13 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-02 20:42:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 8 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 11, redundant 7
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2925 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:42:37 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-02 20:43:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3207 ms, max 128 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:43:01 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-02 20:43:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 57 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 11, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3390 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:43:26 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-02 20:43:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 23 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 17, redundant 7
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3201 ms, max 129 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:43:52 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-02 20:44:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 10, redundant 5
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2988 ms, max 74 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:44:17 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-02 20:44:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 13 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 15, redundant 1
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 3042 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:44:42 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-02 20:45:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 38 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 14, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3007 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:45:07 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-02 20:45:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 5 seconds
Variants: generated 100, build-succeeded 52, build-failed 36, syntax-invalid 10, redundant 2
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3224 ms, max 135 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:45:34 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-02 20:45:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 30 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3127 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 20:45:59 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-02 20:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 11, redundant 7
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3140 ms, max 147 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 20:46:25 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-02 20:46:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 21 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 17, redundant 6
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2957 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:46:50 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-02 20:47:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 48 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 7, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3717 ms, max 130 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:47:17 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-02 20:50:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 14 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 9, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 183632 ms, max 180067 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 20:50:43 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-02 21:24:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 7, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 1983967 ms, max 180132 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 21:24:11 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-02 21:36:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 9 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 11, redundant 6
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 723274 ms, max 180080 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 21:36:38 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-02 21:49:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 36 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 723260 ms, max 180069 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 21:49:05 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-02 21:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 2 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 16, redundant 3
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 183225 ms, max 180069 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 21:52:31 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-02 22:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 29 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 6, redundant 5
Fitness: max 1(2), min 0(63), ave 0.031
Test execution time: sum 543893 ms, max 180067 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:01:58 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-02 22:02:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 4, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3339 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:02:24 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-02 22:02:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 21 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 11, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3468 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:02:50 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-02 22:03:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 46 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 15, redundant 1
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3238 ms, max 70 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:03:15 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-02 22:03:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 14, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3581 ms, max 125 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:03:41 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-02 22:04:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 37 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 8, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3302 ms, max 72 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:04:06 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-02 22:04:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3231 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:04:31 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-02 22:04:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 13, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3349 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:04:56 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-02 22:05:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 10, redundant 2
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3222 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:05:23 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-02 22:05:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 19 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 11, redundant 11
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3081 ms, max 70 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:05:48 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-02 22:06:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 45 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3227 ms, max 124 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:06:14 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-02 22:06:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 12 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 10, redundant 2
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3306 ms, max 77 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:06:40 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-02 22:07:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 39 seconds
Variants: generated 100, build-succeeded 50, build-failed 39, syntax-invalid 8, redundant 3
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3110 ms, max 116 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 22:07:08 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-02 22:07:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 5 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 12, redundant 1
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3313 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:07:33 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-02 22:07:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 30 seconds
Variants: generated 100, build-succeeded 42, build-failed 36, syntax-invalid 18, redundant 4
Fitness: max 1(2), min 0(40), ave 0.048
Test execution time: sum 2614 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:07:59 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-02 22:08:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 57 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 12, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3536 ms, max 158 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:08:25 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-02 22:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 23 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 16, redundant 6
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3342 ms, max 159 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:08:52 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-02 22:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 11, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3348 ms, max 117 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:09:19 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-02 22:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3485 ms, max 150 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:09:48 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-02 22:10:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 7, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3441 ms, max 83 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:10:15 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-02 22:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 13 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3395 ms, max 117 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 22:10:42 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-02 22:11:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 39, syntax-invalid 7, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3068 ms, max 76 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:11:07 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-02 22:11:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 5 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 8, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3543 ms, max 213 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 22:11:34 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-02 22:11:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3186 ms, max 83 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 22:11:58 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-02 22:12:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 55 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 15, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2957 ms, max 125 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:12:24 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-02 22:12:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 8, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3492 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:12:49 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-02 22:13:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 46 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 14, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3281 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:13:15 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-02 22:13:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 11 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 13, redundant 4
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3031 ms, max 81 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:13:40 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-02 22:14:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 36 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 17, redundant 2
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 3065 ms, max 128 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:14:05 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-02 22:14:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 11, redundant 1
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3402 ms, max 71 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:14:30 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-02 22:14:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 26 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 17, redundant 7
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2813 ms, max 119 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:14:55 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-02 22:15:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 17, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3466 ms, max 131 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:15:20 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-02 22:18:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 12, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 183560 ms, max 180062 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:18:47 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-02 22:19:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 45 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 9, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3402 ms, max 121 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:19:14 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-02 22:19:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 14, redundant 5
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2960 ms, max 72 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:19:39 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-02 22:20:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 36 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3303 ms, max 144 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:20:05 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-02 22:20:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 17, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3233 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:20:30 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-02 22:20:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3226 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:20:56 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-02 22:21:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 52 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 18, redundant 4
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2658 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:21:20 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-02 22:21:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 19 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3387 ms, max 135 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:21:47 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-02 22:22:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 43 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 16, redundant 4
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2747 ms, max 71 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:22:12 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-02 22:22:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 23, syntax-invalid 25, redundant 7
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2705 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:22:36 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-02 22:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 31 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 21, redundant 2
Fitness: max 0(42), min 0(42), ave 0
Test execution time: sum 2497 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:22:59 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-02 22:23:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 55 seconds
Variants: generated 100, build-succeeded 45, build-failed 25, syntax-invalid 23, redundant 7
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2857 ms, max 199 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:23:24 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-02 22:23:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 20 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 16, redundant 3
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2735 ms, max 70 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:23:49 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-02 22:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 48 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 12, redundant 1
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3323 ms, max 120 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:24:17 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-02 22:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 13 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 20, redundant 3
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2763 ms, max 67 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:24:41 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-02 22:25:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 17, redundant 2
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3091 ms, max 120 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:25:08 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-02 22:25:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 5 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 18, redundant 3
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2856 ms, max 82 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:25:34 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-02 22:26:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 16, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 3122 ms, max 137 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:26:03 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-02 22:26:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 18, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 3025 ms, max 76 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:26:29 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-02 22:26:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 29 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 3193 ms, max 155 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:26:58 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-02 22:27:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 22, syntax-invalid 20, redundant 7
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3047 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:27:25 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-02 22:27:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 15, redundant 1
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3425 ms, max 160 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:27:53 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-02 22:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 49 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 24, redundant 6
Fitness: max 0(40), min 0(40), ave 0
Test execution time: sum 2407 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:28:18 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-02 22:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 16 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 18, redundant 4
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2841 ms, max 145 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:28:45 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-02 22:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 15, redundant 6
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3092 ms, max 71 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:29:11 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-02 22:29:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 9 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 22, redundant 0
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2967 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:29:38 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-02 22:30:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 36 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 13, redundant 4
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3218 ms, max 74 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:30:05 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-02 22:30:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 4 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 15, redundant 6
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 3114 ms, max 128 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:30:33 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-02 22:30:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 29 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 24, redundant 1
Fitness: max 0(43), min 0(43), ave 0
Test execution time: sum 2600 ms, max 71 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:30:58 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-02 22:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 57 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 17, redundant 7
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3279 ms, max 136 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:31:26 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-02 22:31:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 14, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3251 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:31:53 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-02 22:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 12, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3304 ms, max 173 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:32:22 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-02 22:32:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 21 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 14, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3516 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:32:50 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-02 22:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3382 ms, max 140 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:33:19 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-02 22:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 5, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3609 ms, max 72 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:33:49 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-02 22:34:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 7, redundant 2
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3862 ms, max 198 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:34:20 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-02 22:34:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 19 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 16, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3232 ms, max 73 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:34:48 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-02 22:35:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 50 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 5, redundant 1
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3886 ms, max 117 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:35:19 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-02 22:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 13, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3457 ms, max 70 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:35:48 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-02 22:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3357 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:36:18 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-02 22:36:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 6, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3492 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:36:49 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-02 22:37:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 9, redundant 7
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3436 ms, max 124 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:37:20 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-02 22:37:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 11, redundant 6
Fitness: max 1(2), min 0(54), ave 0.036
Test execution time: sum 3506 ms, max 73 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 22:37:49 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-02 22:38:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 8, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3538 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:38:20 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-02 22:38:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 20 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 11, redundant 2
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3180 ms, max 69 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:38:49 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-02 22:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 49 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 15, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 3115 ms, max 198 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:39:18 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-02 22:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3269 ms, max 70 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:39:48 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-02 22:40:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 51 seconds
Variants: generated 100, build-succeeded 67, build-failed 20, syntax-invalid 5, redundant 8
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 4077 ms, max 135 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:40:20 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-02 22:40:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 23 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3565 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:40:51 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-02 22:41:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 54 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 9, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3483 ms, max 122 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:41:22 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-02 22:41:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 24 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 10, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3117 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:41:52 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-02 22:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 55 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3301 ms, max 121 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:42:24 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-02 22:42:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 26 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 11, redundant 9
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3031 ms, max 71 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:42:55 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-02 22:43:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 59 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 15, redundant 8
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 3031 ms, max 118 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:43:28 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-02 22:43:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 30 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 7, redundant 8
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3735 ms, max 69 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:43:59 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-02 22:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 16, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2982 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:44:29 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-02 22:45:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3230 ms, max 70 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:45:00 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-02 22:45:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 4 seconds
Variants: generated 100, build-succeeded 54, build-failed 38, syntax-invalid 4, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3271 ms, max 121 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:45:33 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-02 22:46:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 36 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 10, redundant 8
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3404 ms, max 69 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:46:05 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-02 22:46:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 10 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 5, redundant 7
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3685 ms, max 113 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:46:38 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-02 22:47:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 45 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 3, redundant 3
Fitness: max 1(1), min 0(62), ave 0.016
Test execution time: sum 4158 ms, max 144 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:47:14 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-02 22:47:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 19 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 5, redundant 7
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3885 ms, max 135 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:47:48 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-02 22:48:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3151 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:48:19 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-02 22:48:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 25 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3767 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:48:53 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-02 22:49:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 57 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3491 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:49:25 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-02 22:50:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 31 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 4, redundant 3
Fitness: max 1(1), min 0(61), ave 0.016
Test execution time: sum 3902 ms, max 209 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:50:00 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-02 22:50:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 5 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 6, redundant 6
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3805 ms, max 125 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:50:34 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-02 22:51:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 40 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 3, redundant 7
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3998 ms, max 141 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:51:09 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-02 22:51:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 13 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 5, redundant 6
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3779 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:51:42 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-02 22:52:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 48 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 8, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3727 ms, max 128 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:52:17 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-02 22:52:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 22 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 5, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3841 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:52:51 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-02 22:53:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 57 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 8, redundant 2
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3879 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 22:53:26 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-02 22:54:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 9, redundant 2
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3868 ms, max 142 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 22:54:01 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-02 22:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 7 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3991 ms, max 146 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:54:36 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-02 22:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 9, redundant 4
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3326 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:55:11 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-02 22:55:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3858 ms, max 227 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:55:45 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-02 22:56:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 10, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3338 ms, max 73 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 22:56:18 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-02 22:59:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 25 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 10, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 183689 ms, max 180075 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 22:59:54 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-02 23:03:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 36, syntax-invalid 4, redundant 6
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 183701 ms, max 180084 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 23:03:30 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-02 23:16:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 40 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 7, redundant 2
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 724403 ms, max 180085 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 23:16:08 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-02 23:19:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 14 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 12, redundant 2
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 183523 ms, max 180074 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 23:19:42 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-02 23:20:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 50 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 6, redundant 2
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 4153 ms, max 141 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:20:19 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-02 23:20:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 8, redundant 5
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3457 ms, max 114 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:20:54 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-02 23:21:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 58 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 9, redundant 6
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 3141 ms, max 71 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:21:27 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-02 23:22:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 32 seconds
Variants: generated 100, build-succeeded 52, build-failed 36, syntax-invalid 9, redundant 3
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3240 ms, max 142 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 23:22:01 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-02 23:22:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 8 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 8, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3969 ms, max 127 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 23:22:36 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-02 23:23:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 42 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 6, redundant 2
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3493 ms, max 70 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 23:23:11 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-02 23:23:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 17 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 10, redundant 4
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 4025 ms, max 212 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 23:23:45 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-02 23:24:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 51 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 9, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3667 ms, max 73 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 23:24:19 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-02 23:24:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 26 seconds
Variants: generated 100, build-succeeded 65, build-failed 26, syntax-invalid 4, redundant 5
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 4125 ms, max 139 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:24:55 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-02 23:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 3 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 2, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 184153 ms, max 180068 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 23:28:32 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-02 23:29:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 3, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 4276 ms, max 146 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:29:10 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-02 23:29:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 16 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 8, redundant 8
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3793 ms, max 101 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 23:29:45 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-02 23:30:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 8, redundant 6
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 4017 ms, max 170 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 23:30:22 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-02 23:30:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 29 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 9, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 4046 ms, max 85 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 23:30:58 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-02 23:31:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 7 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3721 ms, max 151 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:31:36 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-02 23:32:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 35, syntax-invalid 4, redundant 2
Fitness: max 1(2), min 0(57), ave 0.034
Test execution time: sum 4237 ms, max 141 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:32:14 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-02 23:32:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 minutes 23 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 10, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3600 ms, max 154 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 23:32:52 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-02 23:33:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 0 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 7, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3958 ms, max 112 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 23:33:29 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-02 23:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 37 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 10, redundant 3
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3813 ms, max 159 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 23:34:06 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-02 23:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 16 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 5, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 184183 ms, max 180079 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:37:45 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-02 23:38:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 55 seconds
Variants: generated 100, build-succeeded 65, build-failed 23, syntax-invalid 7, redundant 5
Fitness: max 1(1), min 0(64), ave 0.015
Test execution time: sum 4395 ms, max 151 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 23:38:24 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-02 23:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 34 seconds
Variants: generated 100, build-succeeded 63, build-failed 24, syntax-invalid 8, redundant 5
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 4471 ms, max 153 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:39:03 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-02 23:45:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 10 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 363759 ms, max 180077 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:45:39 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-02 23:46:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 47 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 9, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3760 ms, max 155 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 23:46:16 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-02 23:49:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 23 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 9, redundant 1
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 183928 ms, max 180066 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:49:52 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-02 23:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 58 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3328 ms, max 75 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:50:27 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-02 23:51:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 32 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 17, redundant 2
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2985 ms, max 143 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:51:01 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-02 23:51:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 6 seconds
Variants: generated 100, build-succeeded 44, build-failed 33, syntax-invalid 18, redundant 5
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2863 ms, max 78 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:51:34 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-02 23:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 41 seconds
Variants: generated 100, build-succeeded 52, build-failed 39, syntax-invalid 7, redundant 2
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3286 ms, max 137 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:52:10 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-02 23:52:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 19 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 5, redundant 3
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 4408 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 23:52:48 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-02 23:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 55 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 8, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3617 ms, max 134 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 23:53:24 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-02 23:53:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 17, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3745 ms, max 141 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 23:53:58 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-02 23:54:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 43 seconds
Variants: generated 38, build-succeeded 11, build-failed 17, syntax-invalid 5, redundant 5
Fitness: max 1(1), min 0(10), ave 0.091
Test execution time: sum 697 ms, max 79 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 23:54:12 [main] [INFO]  KGenProgMain - GA stopped
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v13)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v13)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v13)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v13)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v313)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v313)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v313)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v313)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v313)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v313)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v584)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v584)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v584)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,8 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        pendingEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v584)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v584)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v657)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v657)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v657)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v657)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v657)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v670)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v670)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v670)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,8 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        pendingEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -150,6 +151,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v670)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v670)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,6 +104,7 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v732)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v732)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v732)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,8 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        pendingEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -150,6 +151,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v732)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v732)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v732)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -294,6 +294,7 @@
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
+				x0 = x1;
             } else if (dx <= 0.0) {
                 x1 = x1 - 0.5 * tolerance;
             }
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v767)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v767)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v767)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v767)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v767)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v767)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v825)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v825)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v825)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,7 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
+        increasing = true;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
@@ -150,6 +149,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -213,8 +213,8 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
+                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v825)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v825)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v825)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,6 +250,7 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
+				x1 = x1 - 0.5 * tolerance;
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,8 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        pendingEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1028)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1028)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,8 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
-        this.maxCheckInterval  = maxCheckInterval;
+        g0 = Double.NaN;
+		this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
@@ -150,6 +151,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +187,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1028)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1028)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1028)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,8 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
-        this.maxCheckInterval  = maxCheckInterval;
+        g0 = Double.NaN;
+		this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
@@ -185,7 +186,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1094)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1094)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,13 +59,11 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -75,7 +73,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1094)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,8 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
-        this.maxCheckInterval  = maxCheckInterval;
+        g0 = Double.NaN;
+		this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1094)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1094)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1256)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		interpolatedTime = Double.NaN;
 
       return interpolatedState;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1256)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1256)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1256)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1256)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1256)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,8 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        pendingEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -150,6 +151,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +187,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1309)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -270,7 +269,8 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1309)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1309)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,8 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
-        this.maxCheckInterval  = maxCheckInterval;
+        g0 = Double.NaN;
+		this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1309)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1309)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1309)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,11 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,8 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -97,6 +97,10 @@
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -150,6 +154,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1379)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1385)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		interpolatedTime = Double.NaN;
 
       return interpolatedState;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1385)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1385)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1385)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1385)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1385)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,6 +250,7 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
+				x1 = x1 - 0.5 * tolerance;
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,8 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
-        this.maxCheckInterval  = maxCheckInterval;
+        g0 = Double.NaN;
+		this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
@@ -150,6 +151,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +187,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1473)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		interpolatedTime = Double.NaN;
 
       return interpolatedState;
 
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1473)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1473)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1473)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -185,7 +185,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1473)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:15 [main] [INFO]  PatchLogExporter - patch (v1473)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +186,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1475)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		interpolatedTime = Double.NaN;
 
       return interpolatedState;
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1475)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1475)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1475)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1475)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1475)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,7 +94,8 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
-        this.maxCheckInterval  = maxCheckInterval;
+        g0 = Double.NaN;
+		this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1485)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,6 +280,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					y0 = y1;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1564)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,8 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1564)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1564)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1564)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1564)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1564)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,8 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -218,8 +219,7 @@
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
-                        // we have either found nothing or found (again ?) a past event, we simply ignore it
-                        ta = tb;
+                        pendingEventTime = Double.NaN;
                         ga = gb;
                     } else if (Double.isNaN(previousEventTime) ||
                                (Math.abs(previousEventTime - root) > convergence)) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v1775)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2310)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,10 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2310)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2310)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2310)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +186,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
@@ -214,6 +215,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2310)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2310)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,10 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +186,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
@@ -214,6 +215,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,10 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -270,7 +268,8 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,7 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
+        this.absoluteAccuracy = defaultAbsoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,9 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -214,6 +217,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2724)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,8 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,11 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -214,6 +214,8 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					interpolator.setInterpolatedTime(tb);
+					interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -282,7 +284,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3005)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -165,7 +165,7 @@
 
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign > 0) {
+        if (f.value(max) == 0.0) {
             // check if either value is close to a zero
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -270,7 +268,12 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,7 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -214,6 +215,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -282,7 +284,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -270,7 +268,9 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -150,6 +149,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -185,7 +186,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (interpolator.isForward()) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -243,7 +241,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -270,7 +267,10 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,8 +61,8 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,9 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4610)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -217,7 +215,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -270,7 +267,11 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,8 +61,8 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -214,7 +214,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
+					interpolator.setInterpolatedTime(tb);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4766)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -243,7 +241,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -270,7 +267,11 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -214,7 +216,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v4799)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v5309)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -270,7 +268,12 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v5309)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v5309)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,9 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v5309)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v5309)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v5309)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -243,7 +241,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -270,7 +267,13 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6004)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -258,7 +258,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (i < maximalIterationCount) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -243,7 +241,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -270,7 +267,13 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -270,10 +268,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		finalized = true;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
+		finalized = true;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -150,6 +149,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7115)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -267,6 +267,7 @@
                     double r1 = y0 / y2;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
+					p = -p;
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7329)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -270,10 +268,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		finalized = true;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
+		finalized = true;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7329)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7329)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7329)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -150,6 +149,8 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -169,7 +170,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7329)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v7329)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8623)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -270,7 +269,14 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		finalized = true;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8623)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8623)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,10 +102,8 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -150,6 +148,9 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8623)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8623)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8623)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -108,6 +107,7 @@
 
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
+	previousTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -270,10 +270,18 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		finalized = true;
+		finalized = true;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
+		finalized = true;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -150,6 +149,9 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v11520)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,8 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	this.h = Math.abs(h);
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -243,7 +242,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -270,10 +268,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
+		finalized = true;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v11520)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v11520)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -150,6 +150,10 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +286,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v11520)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v11520)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v13121)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,6 +89,8 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -242,7 +244,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
@@ -270,7 +271,12 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v13121)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v13121)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,17 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -213,7 +223,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v13121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v13121)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v15802)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,10 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+    h = currentTime - previousTime;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -242,7 +245,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
@@ -270,7 +272,13 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v15802)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v15802)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,19 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +294,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v15802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v15802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,6 +89,8 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +219,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -270,7 +271,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,17 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -170,7 +179,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+            boolean resetDerivatives = false;
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18411)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,6 +280,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					i++;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,6 +89,8 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +219,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -270,7 +271,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,17 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -170,7 +179,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+            boolean resetDerivatives = false;
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
@@ -282,7 +292,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -141,6 +141,7 @@
         this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
+		int numIterations = 0;
     }
 
     /**
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18619)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,6 +280,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					i++;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,6 +89,8 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +219,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -270,7 +271,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,17 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -170,7 +179,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+            boolean resetDerivatives = false;
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -141,6 +141,7 @@
         this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
+		int numIterations = 0;
     }
 
     /**
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v18634)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,6 +280,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					i++;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v19508)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,6 +89,9 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -208,7 +211,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    finalized = true;
   }
 
   /** Store the current step time.
@@ -243,7 +246,7 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
   }
 
   /** {@inheritDoc} */
@@ -270,7 +273,13 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v19508)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v19508)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -179,7 +193,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                interpolator.setInterpolatedTime(t0);
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -282,7 +297,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v19508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v19508)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v19508)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    resultComputed = true;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v24319)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -92,7 +92,6 @@
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
-    interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
@@ -270,7 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v24319)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v24319)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v24319)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v24319)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v24319)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v25116)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -270,7 +269,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v25116)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v25116)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v25116)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,20 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -231,9 +244,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v25116)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v25116)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26115)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,10 +270,16 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26115)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26115)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,9 +104,7 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +296,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26115)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26115)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26615)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,13 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26615)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26615)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,24 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26615)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26615)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26615)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y1 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26948)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -116,7 +116,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
@@ -270,10 +269,21 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26948)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26948)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26948)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26948)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v26948)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27006)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,10 +270,14 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27006)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27006)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -197,8 +212,7 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
+                    t0 = Double.NaN;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
@@ -213,7 +227,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27006)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27006)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27035)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,10 +270,14 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27035)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27035)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -197,8 +212,7 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
+                    t0 = Double.NaN;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27035)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27035)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:16 [main] [INFO]  PatchLogExporter - patch (v27035)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27337)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27337)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27337)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,7 +149,29 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
@@ -231,9 +252,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27337)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27337)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27337)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i <= maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27425)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27425)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27425)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,7 +148,29 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
@@ -231,9 +251,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27425)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27425)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27610)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,18 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27610)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27610)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27610)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +147,23 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -231,9 +245,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27610)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27610)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27849)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -270,7 +269,18 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27849)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27849)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +147,23 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -231,9 +245,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v27849)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (Math.abs(y1) <= functionValueAccuracy) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28233)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -243,7 +243,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -270,7 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28233)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28233)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28233)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +150,28 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28233)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28401)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,21 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28401)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28401)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +148,26 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +300,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28401)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28504)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -270,7 +269,11 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28504)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28504)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,9 +104,8 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +149,21 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -169,7 +183,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28504)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28504)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v28504)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -258,7 +258,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (i <= maximalIterationCount) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
@@ -280,6 +280,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					x0 = x1;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29250)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,21 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29250)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29250)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +148,26 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +300,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29250)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29250)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29250)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29303)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -270,7 +269,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29303)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29303)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,25 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29303)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29303)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29410)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -270,7 +268,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29410)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,25 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29410)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29446)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -270,7 +268,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29446)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29446)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29446)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,25 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29446)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v29446)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -270,7 +268,13 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        g0Positive = increasing;
+		previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,22 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30247)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -237,7 +237,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30538)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,16 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30538)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30538)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,7 +150,23 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30538)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30538)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30538)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -275,14 +275,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					y0 = y1;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30824)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,9 +270,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          this.h = Math.abs(h);
           dirtyState = false;
       }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30824)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30824)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        this.defaultRelativeAccuracy = 1.0e-14;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30824)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,9 +104,10 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        g0Positive = increasing;
+		previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +151,20 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30824)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30842)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,9 +270,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          this.h = Math.abs(h);
           dirtyState = false;
       }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30842)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30842)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,9 +104,10 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+        g0Positive = increasing;
+		previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +151,20 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30842)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30842)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v30842)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v32903)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -270,7 +269,16 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v32903)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v32903)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +147,26 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +299,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v32903)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v32903)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33107)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -270,10 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
@@ -288,7 +294,6 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedDerivatives;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33107)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33107)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,20 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33107)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33107)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33107)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33318)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +114,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -270,10 +268,18 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33318)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33318)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +147,17 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33318)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33318)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v33318)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -301,7 +293,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v34800)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    interpolatedTime = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -106,7 +106,7 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
+    interpolatedTime = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -270,7 +268,12 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v34800)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v34800)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +149,33 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v34800)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v34800)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v34800)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -261,6 +261,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					double fa;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -276,10 +277,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,10 +270,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,7 +148,20 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v35372)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36536)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    interpolatedTime = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -270,10 +270,16 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36536)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36536)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,31 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +305,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36536)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36784)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,16 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36784)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36784)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,39 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36784)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36784)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36784)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				oldDelta = x2 - x1;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36853)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,12 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36853)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36853)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,7 +148,32 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36853)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36853)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36853)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				oldDelta = x2 - x1;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36861)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,7 +270,16 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36861)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36861)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,32 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36861)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36861)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v36861)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				oldDelta = x2 - x1;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38219)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,14 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38219)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38219)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,35 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -172,6 +200,7 @@
             forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
+			pendingEvent = true;
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
@@ -213,7 +242,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    g0 = Double.NaN;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38219)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38431)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,10 +267,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          h = currentTime - previousTime;
+		dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38431)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38431)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,40 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +314,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38512)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,10 +267,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          h = currentTime - previousTime;
+		dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38512)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38512)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,40 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -213,8 +245,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38512)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38512)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38610)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,10 +267,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          h = currentTime - previousTime;
+		dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38610)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38610)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,40 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -214,7 +246,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38610)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38610)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38610)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38804)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,14 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38804)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38804)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +150,41 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -214,7 +249,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38804)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38910)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,7 +267,18 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38910)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38910)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38910)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,38 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -216,8 +246,7 @@
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-                    if ((Math.abs(root - ta) <= convergence) &&
-                         (Math.abs(root - previousEventTime) <= convergence)) {
+                    if (nextAction == EventHandler.RESET_STATE) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
                         ta = tb;
                         ga = gb;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38910)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v38910)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39106)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,7 +267,26 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39106)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39106)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEvent = false;
 
     }
 
@@ -150,6 +150,30 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -282,7 +306,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39106)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39106)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,42 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39841)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39841)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +150,45 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -179,7 +218,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                ta = tb;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -216,8 +256,7 @@
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-                    if ((Math.abs(root - ta) <= convergence) &&
-                         (Math.abs(root - previousEventTime) <= convergence)) {
+                    if (nextAction == EventHandler.RESET_STATE) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
                         ta = tb;
                         ga = gb;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v39841)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40105)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40105)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40105)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,36 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -216,8 +245,7 @@
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-                    if ((Math.abs(root - ta) <= convergence) &&
-                         (Math.abs(root - previousEventTime) <= convergence)) {
+                    if (nextAction == EventHandler.RESET_STATE) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
                         ta = tb;
                         ga = gb;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40105)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40105)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40105)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40503)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,10 +270,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40503)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40503)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,11 +102,9 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,32 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -200,7 +224,8 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    increasing = true;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -213,11 +238,9 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-                    if ((Math.abs(root - ta) <= convergence) &&
-                         (Math.abs(root - previousEventTime) <= convergence)) {
+                    if (nextAction == EventHandler.RESET_STATE) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
                         ta = tb;
                         ga = gb;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40503)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,17 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEvent = false;
 
     }
 
@@ -150,6 +150,36 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v40845)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41021)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,20 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41021)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41021)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41021)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -149,8 +149,37 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
+		g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+        g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41021)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41021)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41323)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,24 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41323)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41323)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEvent = false;
 
     }
 
@@ -150,6 +149,30 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		pendingEvent = false;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -200,7 +223,8 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    increasing = true;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -216,8 +240,7 @@
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-                    if ((Math.abs(root - ta) <= convergence) &&
-                         (Math.abs(root - previousEventTime) <= convergence)) {
+                    if (nextAction == EventHandler.RESET_STATE) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
                         ta = tb;
                         ga = gb;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41323)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41323)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -271,6 +271,7 @@
                 }
                 if (p > 0.0) {
                     p1 = -p1;
+					x1 = x1 - 0.5 * tolerance;
                 } else {
                     p = -p;
                 }
@@ -304,7 +305,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41940)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -171,8 +168,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,7 +265,14 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41940)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41940)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41940)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,11 +102,8 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +147,42 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41940)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:17 [main] [INFO]  PatchLogExporter - patch (v41940)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,7 +267,19 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,11 +102,9 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEventTime = Double.NaN;
 
     }
 
@@ -150,6 +148,40 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		pendingEventTime = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42262)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,10 +269,24 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          h = currentTime - previousTime;
+		dirtyState = false;
       }
 
       return interpolatedState;
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42262)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42262)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,11 +102,9 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,30 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -200,7 +222,9 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    increasing = true;
+					increasing = true;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -323,7 +347,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42262)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42262)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42262)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -276,10 +274,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42733)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -270,7 +269,22 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42733)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42733)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,11 +102,9 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +148,43 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
@@ -213,7 +248,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    nextAction = EventHandler.CONTINUE;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -323,7 +358,7 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
+        nextAction = EventHandler.CONTINUE;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42733)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v42733)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -109,8 +108,6 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
@@ -270,7 +267,15 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
+          h = currentTime - previousTime;
+		h = currentTime - previousTime;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		dirtyState = false;
+		final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -150,6 +149,33 @@
         throws EventException {
         t0 = tStart;
         g0 = handler.g(tStart, yStart);
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		pendingEvent = false;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
         g0Positive = g0 >= 0;
     }
 
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 23:54:18 [main] [INFO]  PatchLogExporter - patch (v43938)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				setResult(x1, i);
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
2023-08-02 23:54:18 [main] [INFO]  KGenProgMain - Summary
Reached generation = 441
Generated variants = 43938
Syntax valid variants = 39983
Build succeeded variants = 24452
Time elapsed = 4 hours 49 minutes 49 seconds
Exit status = SUCCESS
