2023-08-02 10:38:39 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-02 10:38:39 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-02 10:38:39 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-02 10:38:39 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 5 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-08-02 10:38:57 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-08-02 10:38:58 [main] [INFO]  KGenProgMain - GA started
2023-08-02 10:38:58 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-02 10:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 50, build-succeeded 14, build-failed 31, syntax-invalid 3, redundant 2
Fitness: max 0(14), min 0(14), ave 0
Test execution time: sum 1827 ms, max 220 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 10:39:03 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-02 10:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 50, build-succeeded 13, build-failed 30, syntax-invalid 3, redundant 4
Fitness: max 0(13), min 0(13), ave 0
Test execution time: sum 1267 ms, max 148 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 10:39:09 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-02 10:39:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 100, build-succeeded 21, build-failed 31, syntax-invalid 8, redundant 40
Fitness: max 0(21), min 0(21), ave 0
Test execution time: sum 1670 ms, max 233 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 10:39:16 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-02 10:39:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 100, build-succeeded 31, build-failed 28, syntax-invalid 3, redundant 38
Fitness: max 0(31), min 0(31), ave 0
Test execution time: sum 2104 ms, max 138 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 10:39:23 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-02 10:39:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 100, build-succeeded 27, build-failed 28, syntax-invalid 4, redundant 41
Fitness: max 0(27), min 0(27), ave 0
Test execution time: sum 1665 ms, max 138 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:39:28 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-02 10:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 100, build-succeeded 28, build-failed 35, syntax-invalid 6, redundant 31
Fitness: max 0(28), min 0(28), ave 0
Test execution time: sum 1853 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 10:39:34 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-02 10:39:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 5, redundant 18
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2935 ms, max 192 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:39:41 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-02 10:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 seconds
Variants: generated 100, build-succeeded 41, build-failed 27, syntax-invalid 9, redundant 23
Fitness: max 0(41), min 0(41), ave 0
Test execution time: sum 2500 ms, max 132 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:39:48 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-02 10:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 8, redundant 17
Fitness: max 1(1), min 0(43), ave 0.023
Test execution time: sum 2647 ms, max 150 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:39:55 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-02 10:40:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 4 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 9, redundant 11
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3103 ms, max 189 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:40:02 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-02 10:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 10 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 6, redundant 20
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2506 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:40:08 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-02 10:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 18 seconds
Variants: generated 100, build-succeeded 48, build-failed 38, syntax-invalid 6, redundant 8
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2775 ms, max 127 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:40:16 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-02 10:40:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 26 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3324 ms, max 125 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:40:24 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-02 10:40:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 34 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3204 ms, max 123 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:40:32 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-02 10:40:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 5, redundant 16
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2848 ms, max 116 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:40:40 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-02 10:40:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 50 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3352 ms, max 130 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:40:48 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-02 10:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 58 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 2, redundant 8
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3366 ms, max 113 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:40:56 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-02 10:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 6 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3346 ms, max 198 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:41:04 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-02 10:41:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 6, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3137 ms, max 121 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:41:13 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-02 10:41:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 23 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 9, redundant 6
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3209 ms, max 122 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:41:22 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-02 10:41:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 8, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2970 ms, max 195 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:41:30 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-02 10:41:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 40 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 5, redundant 8
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 2875 ms, max 120 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:41:38 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-02 10:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 49 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 9, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3206 ms, max 136 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:41:47 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-02 10:44:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 57 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 12, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 182826 ms, max 180079 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:44:55 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-02 10:45:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 6 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3105 ms, max 131 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:45:04 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-02 10:45:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 9, redundant 7
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2688 ms, max 117 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:45:12 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-02 10:45:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 11, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2814 ms, max 112 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:45:21 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-02 10:45:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 32 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3034 ms, max 186 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:45:30 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-02 10:45:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 41 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 13, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3168 ms, max 129 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:45:39 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-02 10:45:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 38, syntax-invalid 8, redundant 2
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3026 ms, max 174 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:45:48 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-02 10:45:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 59 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 10, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3065 ms, max 181 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:45:57 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-02 10:46:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 8 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3258 ms, max 194 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:46:06 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-02 10:46:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 16 seconds
Variants: generated 100, build-succeeded 54, build-failed 37, syntax-invalid 6, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3065 ms, max 181 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:46:15 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-02 10:46:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 25 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 11, redundant 3
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2860 ms, max 190 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:46:23 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-02 10:46:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 33 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 9, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2987 ms, max 198 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:46:31 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-02 10:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 43 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 6, redundant 1
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3340 ms, max 120 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:46:41 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-02 10:46:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 51 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 11, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2819 ms, max 74 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:46:49 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-02 10:46:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 59 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 12, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2904 ms, max 123 ms, min 48 ms
----------------------------------------------------------------

2023-08-02 10:46:58 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-02 10:47:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 8 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 10, redundant 1
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3000 ms, max 178 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:07 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-02 10:47:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 17 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 9, redundant 6
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2889 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:15 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-02 10:47:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 11, redundant 8
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3092 ms, max 186 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:24 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-02 10:47:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 35 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 13, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2981 ms, max 184 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:33 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-02 10:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 43 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 15, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2773 ms, max 63 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:41 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-02 10:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 52 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 16, redundant 5
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2605 ms, max 112 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:50 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-02 10:47:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 0 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 16, redundant 0
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2602 ms, max 67 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:47:58 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-02 10:48:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 6, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3332 ms, max 123 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:48:08 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-02 10:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3072 ms, max 130 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:48:18 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-02 10:48:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 30 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 10, redundant 2
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3343 ms, max 136 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:48:28 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-02 10:48:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 39 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 5, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3202 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:48:37 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-02 10:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3170 ms, max 123 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:48:48 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-02 10:48:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 0 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 7, redundant 0
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3628 ms, max 210 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:48:58 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-02 10:49:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 12 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 7, redundant 1
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3642 ms, max 185 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:49:10 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-02 10:49:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 21 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 8, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3146 ms, max 69 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:49:19 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-02 10:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 38, syntax-invalid 7, redundant 1
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3027 ms, max 136 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:49:29 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-02 10:49:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 42 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3551 ms, max 199 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:49:40 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-02 10:49:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 4, redundant 9
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3099 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:49:49 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-02 10:49:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 1 seconds
Variants: generated 100, build-succeeded 53, build-failed 38, syntax-invalid 7, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3041 ms, max 193 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:49:59 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-02 10:50:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 12 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3439 ms, max 196 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:50:10 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-02 10:50:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 21 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 7, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3103 ms, max 72 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:50:19 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-02 10:50:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 32 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 3, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3524 ms, max 174 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:50:30 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-02 10:50:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 41 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3394 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:50:39 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-02 10:50:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 52 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 8, redundant 7
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3396 ms, max 121 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:50:50 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-02 10:51:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 2 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 8, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3007 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:51:00 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-02 10:51:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 12 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 6, redundant 6
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3113 ms, max 130 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:51:11 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-02 10:51:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 8, redundant 6
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2947 ms, max 74 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:51:20 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-02 10:51:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 9, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3131 ms, max 137 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:51:30 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-02 10:51:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 39, syntax-invalid 4, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2940 ms, max 71 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:51:40 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-02 10:51:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 53 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 3, redundant 7
Fitness: max 1(2), min 0(62), ave 0.031
Test execution time: sum 3675 ms, max 131 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:51:51 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-02 10:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 2 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 9, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2929 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:52:01 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-02 10:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 12 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 11, redundant 5
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2893 ms, max 201 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:52:10 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-02 10:52:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 11, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2933 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:52:20 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-02 10:52:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 34 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 4, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3495 ms, max 135 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:52:32 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-02 10:52:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 44 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 6, redundant 3
Fitness: max 1(2), min 0(54), ave 0.036
Test execution time: sum 3166 ms, max 82 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:52:42 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-02 10:52:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 56 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 11, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3258 ms, max 118 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:52:54 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-02 10:53:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 6 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 6, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3313 ms, max 72 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:53:04 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-02 10:53:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 18 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 8, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3643 ms, max 195 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:53:16 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-02 10:53:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 7, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3137 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:53:28 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-02 10:53:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 38, syntax-invalid 4, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3056 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:53:39 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-02 10:53:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 8, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3092 ms, max 118 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:53:50 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-02 10:54:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 2 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 19, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2598 ms, max 69 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:54:00 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-02 10:54:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 37, syntax-invalid 11, redundant 2
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2887 ms, max 137 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:54:12 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-02 10:54:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 24 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 23, redundant 3
Fitness: max 0(43), min 0(43), ave 0
Test execution time: sum 2337 ms, max 69 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 10:54:22 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-02 10:54:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 10, redundant 4
Fitness: max 1(2), min 0(51), ave 0.038
Test execution time: sum 3237 ms, max 220 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:54:34 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-02 10:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 47 seconds
Variants: generated 100, build-succeeded 46, build-failed 38, syntax-invalid 11, redundant 5
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2828 ms, max 124 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:54:45 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-02 10:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 59 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 10, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3452 ms, max 183 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:54:58 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-02 10:55:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 11 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 20, redundant 4
Fitness: max 1(1), min 0(46), ave 0.021
Test execution time: sum 2757 ms, max 135 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:55:09 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-02 10:55:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 21 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 10, redundant 8
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2710 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:55:19 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-02 10:55:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 34 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 5, redundant 5
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3307 ms, max 141 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:55:32 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-02 10:55:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3058 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:55:42 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-02 10:55:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 55 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 21, redundant 4
Fitness: max 1(1), min 0(42), ave 0.023
Test execution time: sum 2544 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:55:53 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-02 10:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 6 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 16, redundant 8
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2815 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 10:56:04 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-02 10:59:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 17 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 19, redundant 2
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 182980 ms, max 180064 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:59:15 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-02 10:59:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 28 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 7, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2895 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:59:26 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-02 10:59:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 12, redundant 7
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2921 ms, max 123 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:59:37 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-02 10:59:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 50 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 11, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3209 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 10:59:48 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-02 11:00:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 3 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 6, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3303 ms, max 141 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:00:01 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-02 11:00:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 15 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3523 ms, max 123 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:00:13 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-02 11:00:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 10, redundant 12
Fitness: max 1(2), min 0(53), ave 0.036
Test execution time: sum 3031 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:00:24 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-02 11:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 38 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 13, redundant 6
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2820 ms, max 122 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:00:36 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-02 11:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 14, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2958 ms, max 64 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:00:48 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-02 11:01:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 2 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 13, redundant 7
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3045 ms, max 121 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:01:00 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-02 11:01:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 15 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 18, redundant 2
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2786 ms, max 126 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:01:13 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-02 11:01:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 27 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 10, redundant 9
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 2790 ms, max 74 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:01:25 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-02 11:01:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 40 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 15, redundant 4
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2976 ms, max 136 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:01:38 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-02 11:01:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 52 seconds
Variants: generated 100, build-succeeded 44, build-failed 39, syntax-invalid 11, redundant 6
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2438 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:01:50 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-02 11:02:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 5 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0(45), ave 0.022
Test execution time: sum 2694 ms, max 131 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:02:03 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-02 11:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 17 seconds
Variants: generated 100, build-succeeded 42, build-failed 34, syntax-invalid 20, redundant 4
Fitness: max 1(1), min 0(41), ave 0.024
Test execution time: sum 2343 ms, max 73 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:02:15 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-02 11:02:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 30 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 16, redundant 1
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2665 ms, max 116 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:02:28 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-02 11:02:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 43 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 19, redundant 0
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2599 ms, max 78 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:02:41 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-02 11:02:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 56 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 12, redundant 8
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3054 ms, max 128 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:02:55 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-02 11:03:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3309 ms, max 198 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:03:09 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-02 11:03:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 26 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 4, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3397 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:03:24 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-02 11:03:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 9, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3203 ms, max 128 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:03:39 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-02 11:03:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 7, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3442 ms, max 218 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:03:54 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-02 11:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3083 ms, max 76 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:04:08 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-02 11:04:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 26 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 11, redundant 3
Fitness: max 1(3), min 0(56), ave 0.051
Test execution time: sum 3527 ms, max 126 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:04:24 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-02 11:04:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 12, redundant 3
Fitness: max 1(2), min 0(52), ave 0.037
Test execution time: sum 3436 ms, max 302 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:04:39 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-02 11:04:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 55 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 8, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3133 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:04:53 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-02 11:05:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 9, redundant 10
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3204 ms, max 114 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:05:08 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-02 11:05:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 25 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 8, redundant 3
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3472 ms, max 133 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 11:05:23 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-02 11:05:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 40 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3284 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:05:39 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-02 11:05:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 8, redundant 3
Fitness: max 1(1), min 0(61), ave 0.016
Test execution time: sum 3457 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:05:52 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-02 11:06:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 9 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 3, redundant 10
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2985 ms, max 131 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:06:07 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-02 11:06:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 25 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 6, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3549 ms, max 132 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:06:23 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-02 11:06:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 39 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 8, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3252 ms, max 76 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:06:37 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-02 11:06:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 4, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3338 ms, max 146 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:06:52 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-02 11:07:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 8 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 15, redundant 5
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2836 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:07:06 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-02 11:07:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 22 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 6, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3156 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:07:21 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-02 11:07:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 36 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3206 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:07:34 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-02 11:07:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 51 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 8, redundant 7
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3047 ms, max 152 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:07:49 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-02 11:08:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 5 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 1(2), min 0(56), ave 0.034
Test execution time: sum 3202 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:08:03 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-02 11:08:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 20 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 12, redundant 5
Fitness: max 1(2), min 0(47), ave 0.041
Test execution time: sum 2761 ms, max 121 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:08:18 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-02 11:08:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 35 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 5, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3368 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:08:33 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-02 11:08:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 14, redundant 6
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3034 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:08:48 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-02 11:09:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 10, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3145 ms, max 168 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:09:03 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-02 11:09:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 20 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 7, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3200 ms, max 71 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:09:18 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-02 11:09:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 35 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3227 ms, max 118 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:09:34 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-02 11:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 7, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3046 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:09:49 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-02 11:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 7 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3261 ms, max 115 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:10:05 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-02 11:10:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 21 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 9, redundant 9
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2903 ms, max 64 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:10:19 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-02 11:10:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 37 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 6, redundant 6
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3369 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:10:35 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-02 11:10:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 9, redundant 7
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 2990 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:10:50 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-02 11:11:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 7 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 8, redundant 13
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2896 ms, max 131 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:11:06 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-02 11:11:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 22 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 11, redundant 12
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2756 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:11:21 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-02 11:11:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 39 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 7, redundant 8
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3236 ms, max 129 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:11:37 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-02 11:11:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 2, redundant 11
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2943 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:11:52 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-02 11:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 11 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 11, redundant 5
Fitness: max 1(1), min 0(55), ave 0.018
Test execution time: sum 3262 ms, max 189 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:12:09 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-02 11:12:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 37, syntax-invalid 2, redundant 8
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2971 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:12:25 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-02 11:12:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 4, redundant 15
Fitness: max 1(1), min 0(50), ave 0.02
Test execution time: sum 2899 ms, max 113 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:12:41 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-02 11:12:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 58 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 6, redundant 10
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2770 ms, max 74 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:12:56 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-02 11:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 9, redundant 13
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2862 ms, max 151 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:13:12 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-02 11:13:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 29 seconds
Variants: generated 100, build-succeeded 46, build-failed 36, syntax-invalid 7, redundant 11
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2574 ms, max 75 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:13:27 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-02 11:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 45 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 9, redundant 10
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2627 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:13:44 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-02 11:13:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 1 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 11, redundant 8
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2740 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:13:59 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-02 11:14:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 17 seconds
Variants: generated 100, build-succeeded 45, build-failed 38, syntax-invalid 6, redundant 11
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2583 ms, max 117 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:14:15 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-02 11:14:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 32 seconds
Variants: generated 100, build-succeeded 40, build-failed 37, syntax-invalid 7, redundant 16
Fitness: max 0(40), min 0(40), ave 0
Test execution time: sum 2287 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:14:30 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-02 11:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 47 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 16, redundant 10
Fitness: max 0(37), min 0(37), ave 0
Test execution time: sum 182230 ms, max 180068 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:17:45 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-02 11:24:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 2 seconds
Variants: generated 100, build-succeeded 44, build-failed 36, syntax-invalid 11, redundant 9
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 362471 ms, max 180073 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:24:00 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-02 11:24:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 18 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 10, redundant 18
Fitness: max 0(41), min 0(41), ave 0
Test execution time: sum 2537 ms, max 140 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:24:16 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-02 11:24:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 32 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 13, redundant 13
Fitness: max 0(41), min 0(41), ave 0
Test execution time: sum 2341 ms, max 89 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:24:30 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-02 11:24:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 48 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 13, redundant 13
Fitness: max 0(38), min 0(38), ave 0
Test execution time: sum 2308 ms, max 139 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:24:46 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-02 11:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 3 seconds
Variants: generated 100, build-succeeded 36, build-failed 41, syntax-invalid 11, redundant 12
Fitness: max 0(36), min 0(36), ave 0
Test execution time: sum 2160 ms, max 72 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 11:25:01 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-02 11:25:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 21 seconds
Variants: generated 100, build-succeeded 38, build-failed 38, syntax-invalid 11, redundant 13
Fitness: max 0(38), min 0(38), ave 0
Test execution time: sum 2363 ms, max 146 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:25:19 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-02 11:25:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 36 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 17, redundant 6
Fitness: max 0(43), min 0(43), ave 0
Test execution time: sum 2325 ms, max 66 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:25:34 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-02 11:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 54 seconds
Variants: generated 100, build-succeeded 45, build-failed 38, syntax-invalid 10, redundant 7
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2672 ms, max 127 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:25:52 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-02 11:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 11 seconds
Variants: generated 100, build-succeeded 45, build-failed 38, syntax-invalid 11, redundant 6
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2698 ms, max 128 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:26:09 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-02 11:26:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 28 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 11, redundant 13
Fitness: max 1(1), min 0(43), ave 0.023
Test execution time: sum 2568 ms, max 122 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:26:26 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-02 11:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 45 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3155 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:26:43 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-02 11:27:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 3 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 7, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3274 ms, max 130 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:27:01 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-02 11:27:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 21 seconds
Variants: generated 100, build-succeeded 54, build-failed 38, syntax-invalid 5, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2984 ms, max 70 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:27:19 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-02 11:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 11, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3065 ms, max 117 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:27:37 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-02 11:27:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 57 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 3, redundant 7
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3374 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:27:55 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-02 11:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 8, redundant 4
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3132 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:28:13 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-02 11:28:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 32 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 4, redundant 5
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3561 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:28:31 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-02 11:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 51 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 4, redundant 7
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3608 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:28:49 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-02 11:29:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 7, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3182 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:29:07 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-02 11:29:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 7, redundant 6
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2892 ms, max 117 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:29:25 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-02 11:29:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 45 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 10, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3148 ms, max 66 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:29:43 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-02 11:30:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3322 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:30:01 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-02 11:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 20 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 12, redundant 4
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2615 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:30:18 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-02 11:30:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 16, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3006 ms, max 107 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:30:37 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-02 11:30:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 16, redundant 1
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 2783 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:30:53 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-02 11:31:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 14 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3158 ms, max 120 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:31:12 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-02 11:31:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 7, redundant 4
Fitness: max 1(2), min 0(57), ave 0.034
Test execution time: sum 3255 ms, max 66 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:31:30 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-02 11:31:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 51 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 6, redundant 7
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2996 ms, max 130 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:31:49 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-02 11:32:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 10 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3401 ms, max 127 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:32:08 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-02 11:32:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3015 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:32:27 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-02 11:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 48 seconds
Variants: generated 100, build-succeeded 49, build-failed 37, syntax-invalid 11, redundant 3
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2801 ms, max 131 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:32:46 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-02 11:33:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 13, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2992 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:33:04 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-02 11:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 25 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 15, redundant 2
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2691 ms, max 131 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:33:23 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-02 11:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 43 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3266 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:33:41 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-02 11:34:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 2 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 13, redundant 7
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2721 ms, max 111 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:34:00 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-02 11:34:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 21 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 10, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2784 ms, max 66 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:34:19 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-02 11:34:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 11, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3081 ms, max 130 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:34:39 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-02 11:34:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 0 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 8, redundant 2
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3364 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:34:58 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-02 11:35:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 5, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3363 ms, max 110 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:35:19 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-02 11:35:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 41 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 5, redundant 3
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3721 ms, max 83 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:35:40 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-02 11:35:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 13, redundant 5
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2674 ms, max 128 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:35:59 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-02 11:36:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 21 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 10, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3117 ms, max 64 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:36:19 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-02 11:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 41 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 19, redundant 0
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2733 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:36:39 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-02 11:36:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 58 seconds
Variants: generated 100, build-succeeded 37, build-failed 36, syntax-invalid 24, redundant 3
Fitness: max 0(37), min 0(37), ave 0
Test execution time: sum 2089 ms, max 67 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:36:57 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-02 11:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 18 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 20, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2838 ms, max 180 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:37:17 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-02 11:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 38 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 15, redundant 3
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2642 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:37:36 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-02 11:37:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 58 seconds
Variants: generated 100, build-succeeded 46, build-failed 31, syntax-invalid 13, redundant 10
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2610 ms, max 112 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:37:56 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-02 11:38:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 16 seconds
Variants: generated 100, build-succeeded 35, build-failed 38, syntax-invalid 24, redundant 3
Fitness: max 0(35), min 0(35), ave 0
Test execution time: sum 1932 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:38:14 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-02 11:38:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 36 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 26, redundant 2
Fitness: max 0(39), min 0(39), ave 0
Test execution time: sum 2319 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:38:34 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-02 11:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 54 seconds
Variants: generated 100, build-succeeded 36, build-failed 38, syntax-invalid 23, redundant 3
Fitness: max 0(36), min 0(36), ave 0
Test execution time: sum 1997 ms, max 67 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:38:52 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-02 11:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 seconds
Variants: generated 100, build-succeeded 46, build-failed 31, syntax-invalid 18, redundant 5
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2636 ms, max 112 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:39:13 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-02 11:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 18, redundant 3
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2680 ms, max 70 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:39:32 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-02 11:39:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3088 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:39:53 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-02 11:40:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 16, redundant 1
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3179 ms, max 128 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:40:15 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-02 11:40:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 37 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 11, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2912 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:40:35 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-02 11:40:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 59 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 5, redundant 6
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3393 ms, max 117 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:40:57 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-02 11:41:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 5, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3130 ms, max 87 ms, min 49 ms
----------------------------------------------------------------

2023-08-02 11:41:18 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-02 11:41:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 43 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 8, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3297 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:41:41 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-02 11:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 5 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 5, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3204 ms, max 69 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:42:03 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-02 11:42:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 28 seconds
Variants: generated 100, build-succeeded 67, build-failed 23, syntax-invalid 7, redundant 3
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 3760 ms, max 121 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:42:26 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-02 11:42:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 48 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 18, redundant 7
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2662 ms, max 70 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:42:47 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-02 11:43:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 10 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 2825 ms, max 108 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:43:08 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-02 11:43:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 30 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 18, redundant 7
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2797 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:43:28 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-02 11:43:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 52 seconds
Variants: generated 100, build-succeeded 44, build-failed 36, syntax-invalid 12, redundant 8
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2556 ms, max 108 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:43:51 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-02 11:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 14 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 13, redundant 4
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2897 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:44:12 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-02 11:44:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 37 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 15, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3120 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:44:35 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-02 11:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 58 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 16, redundant 5
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2801 ms, max 65 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:44:56 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-02 11:45:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 21 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 15, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2799 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:45:19 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-02 11:45:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 42 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3037 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:45:40 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-02 11:46:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 5 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 15, redundant 6
Fitness: max 1(2), min 0(47), ave 0.041
Test execution time: sum 2842 ms, max 130 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:46:03 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-02 11:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 27 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2962 ms, max 67 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:46:25 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-02 11:46:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 9, redundant 8
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3119 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:46:49 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-02 11:47:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 8, redundant 10
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2931 ms, max 72 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 11:47:11 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-02 11:47:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 37 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 18, redundant 5
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3026 ms, max 125 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:47:35 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-02 11:47:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 14, redundant 6
Fitness: max 1(2), min 0(54), ave 0.036
Test execution time: sum 3335 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:47:58 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-02 11:48:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 12, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3216 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:48:21 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-02 11:48:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 47 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 12, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3359 ms, max 141 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:48:45 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-02 11:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 18, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3060 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:49:08 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-02 11:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 34 seconds
Variants: generated 100, build-succeeded 46, build-failed 36, syntax-invalid 10, redundant 8
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2729 ms, max 133 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:49:32 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-02 11:49:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 15, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3148 ms, max 74 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:49:55 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-02 11:50:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 21 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 13, redundant 7
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3096 ms, max 139 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:50:19 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-02 11:50:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 44 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 12, redundant 5
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2753 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:50:42 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-02 11:51:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 9 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0(55), ave 0.018
Test execution time: sum 3230 ms, max 136 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:51:07 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-02 11:51:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 32 seconds
Variants: generated 100, build-succeeded 48, build-failed 25, syntax-invalid 19, redundant 8
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2698 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:51:30 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-02 11:51:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 56 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 10, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3393 ms, max 132 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:51:54 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-02 11:52:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 21 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 14, redundant 1
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3131 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:52:19 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-02 11:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 46 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3572 ms, max 134 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:52:44 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-02 11:53:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 13 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 6, redundant 8
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3481 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:53:11 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-02 11:53:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 11, redundant 5
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2922 ms, max 67 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 11:53:34 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-02 11:53:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 1 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 7, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3599 ms, max 141 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:53:59 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-02 11:54:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 25 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 6, redundant 12
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3417 ms, max 71 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 11:54:24 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-02 11:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 50 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 11, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3291 ms, max 130 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:54:48 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-02 11:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 14, redundant 6
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2920 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:55:11 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-02 11:55:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 37 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 15, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2983 ms, max 193 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:55:36 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-02 11:55:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 10, redundant 6
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2842 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:55:59 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-02 11:56:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 13, redundant 5
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2920 ms, max 119 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:56:24 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-02 11:56:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 9, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3261 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:56:48 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-02 11:57:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 15 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 10, redundant 11
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3299 ms, max 131 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:57:13 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-02 11:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 36, syntax-invalid 5, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3130 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:57:37 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-02 11:58:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 5 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 7, redundant 1
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3429 ms, max 112 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 11:58:04 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-02 11:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 30 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 7, redundant 6
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3005 ms, max 70 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:58:28 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-02 11:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 56 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 6, redundant 11
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 3264 ms, max 207 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 11:58:55 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-02 11:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 21 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 11, redundant 9
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3014 ms, max 71 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 11:59:19 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-02 11:59:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 8, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3248 ms, max 136 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 11:59:44 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-02 12:00:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 10 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 15, redundant 6
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2808 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:00:08 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-02 12:00:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 36 seconds
Variants: generated 100, build-succeeded 54, build-failed 37, syntax-invalid 6, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3172 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:00:34 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-02 12:00:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3278 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:00:59 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-02 12:04:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 27 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 15, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 183239 ms, max 180064 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:04:26 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-02 12:07:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 55 seconds
Variants: generated 100, build-succeeded 65, build-failed 23, syntax-invalid 5, redundant 7
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 183798 ms, max 180065 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:07:53 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-02 12:08:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 21 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 7, redundant 7
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3763 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:08:19 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-02 12:08:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 50 seconds
Variants: generated 100, build-succeeded 66, build-failed 20, syntax-invalid 3, redundant 11
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 4163 ms, max 129 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:08:48 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-02 12:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 17 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 3, redundant 3
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3612 ms, max 80 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:09:15 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-02 12:09:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 43 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 12, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3199 ms, max 130 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:09:41 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-02 12:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 7, redundant 10
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3176 ms, max 68 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:10:07 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-02 12:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 36 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 8, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3076 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:10:34 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-02 12:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 3 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 6, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 183426 ms, max 180076 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:14:01 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-02 12:14:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 29 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3213 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:14:27 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-02 12:14:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 55 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 12, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3466 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:14:53 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-02 12:15:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 22 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 10, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3358 ms, max 196 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:15:20 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-02 12:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 10, redundant 5
Fitness: max 1(2), min 0(57), ave 0.034
Test execution time: sum 3586 ms, max 139 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:15:47 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-02 12:16:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 15 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 15, redundant 7
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2750 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:16:13 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-02 12:16:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 43 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 11, redundant 2
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3780 ms, max 138 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:16:41 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-02 12:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 10 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 8, redundant 10
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3422 ms, max 77 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:17:08 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-02 12:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 37 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 8, redundant 8
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3326 ms, max 146 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:17:36 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-02 12:18:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 4 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 8, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3249 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:18:02 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-02 12:18:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 26, syntax-invalid 8, redundant 16
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3011 ms, max 209 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:18:29 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-02 12:18:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 57 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 7, redundant 13
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2872 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:18:55 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-02 12:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 24 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 10, redundant 8
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3480 ms, max 121 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:19:22 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-02 12:19:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 51 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 9, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3381 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:19:49 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-02 12:20:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 18 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 13, redundant 10
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3128 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:20:16 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-02 12:20:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 45 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 4, redundant 10
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3288 ms, max 77 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:20:43 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-02 12:21:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 12 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 10, redundant 9
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2995 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:21:11 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-02 12:21:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 9, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3297 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:21:38 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-02 12:22:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 8 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 6, redundant 5
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3362 ms, max 148 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:22:07 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-02 12:22:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 5, redundant 8
Fitness: max 1(2), min 0(57), ave 0.034
Test execution time: sum 3618 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:22:35 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-02 12:23:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 5 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 16, redundant 6
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2669 ms, max 142 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:23:03 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-02 12:23:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 8, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3194 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:23:32 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-02 12:24:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 2 seconds
Variants: generated 100, build-succeeded 49, build-failed 24, syntax-invalid 14, redundant 13
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2963 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:24:00 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-02 12:24:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3400 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:24:27 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-02 12:24:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 57 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 5, redundant 13
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2903 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:24:55 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-02 12:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 25 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 7, redundant 12
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2830 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:25:23 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-02 12:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 5, redundant 12
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3397 ms, max 135 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:25:52 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-02 12:26:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 5, redundant 9
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3281 ms, max 119 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:26:21 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-02 12:26:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 53 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 3, redundant 10
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3587 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:26:51 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-02 12:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 21 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 4, redundant 15
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3161 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:27:20 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-02 12:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 52 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 2, redundant 8
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3446 ms, max 123 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:27:50 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-02 12:28:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 21 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 1, redundant 10
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3417 ms, max 66 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:28:19 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-02 12:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 51 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 2, redundant 16
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3101 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:28:49 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-02 12:29:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 20 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 5, redundant 18
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3086 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:29:18 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-02 12:29:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 10, redundant 7
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3553 ms, max 119 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:29:49 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-02 12:30:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 21 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 8, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3521 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:30:19 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-02 12:30:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 6, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3410 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:30:48 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-02 12:34:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 2, redundant 13
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 183283 ms, max 180066 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:34:18 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-02 12:34:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 50 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 2, redundant 9
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3733 ms, max 134 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:34:48 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-02 12:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 20 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 10, redundant 6
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3287 ms, max 134 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:35:18 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-02 12:35:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 49 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 6, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3335 ms, max 72 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:35:47 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-02 12:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 20 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 5, redundant 5
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 4050 ms, max 124 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:36:18 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-02 12:36:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 50 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 3, redundant 9
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3741 ms, max 139 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:36:48 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-02 12:37:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 7, redundant 8
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3515 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:37:18 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-02 12:37:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 50 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 3, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3562 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:37:48 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-02 12:38:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 21 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 3, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3809 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:38:19 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-02 12:38:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 8, redundant 10
Fitness: max 1(2), min 0(52), ave 0.037
Test execution time: sum 3130 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:38:48 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-02 12:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 seconds
Variants: generated 100, build-succeeded 63, build-failed 32, syntax-invalid 4, redundant 1
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3728 ms, max 112 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:39:18 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-02 12:39:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 8, redundant 8
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3777 ms, max 198 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:39:49 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-02 12:40:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 4, redundant 10
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3381 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:40:19 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-02 12:40:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 50 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 15, redundant 4
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2950 ms, max 140 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:40:48 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-02 12:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 11, redundant 8
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3109 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:41:17 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-02 12:41:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 48 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 14, redundant 9
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2858 ms, max 129 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:41:46 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-02 12:42:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 18 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 10, redundant 4
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3070 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:42:16 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-02 12:42:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 48 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 14, redundant 3
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2859 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:42:46 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-02 12:43:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 12, redundant 1
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3493 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:43:16 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-02 12:43:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 47 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 16, redundant 9
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2628 ms, max 121 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:43:45 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-02 12:44:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 18 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 11, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3356 ms, max 194 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:44:16 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-02 12:44:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 46 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 12, redundant 7
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2708 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:44:45 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-02 12:45:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 7, redundant 11
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3220 ms, max 117 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:45:16 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-02 12:45:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 48 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 8, redundant 7
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3515 ms, max 67 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:45:46 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-02 12:46:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 18 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 16, redundant 9
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2999 ms, max 111 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:46:16 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-02 12:46:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 47 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 11, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3046 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:46:46 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-02 12:47:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 19 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3444 ms, max 149 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:47:17 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-02 12:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0(61), ave 0.016
Test execution time: sum 3818 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:47:49 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-02 12:48:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 21 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 13, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3204 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:48:19 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-02 12:48:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 52 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 16, redundant 6
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2951 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:48:50 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-02 12:49:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 22 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 16, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2917 ms, max 71 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:49:20 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-02 12:49:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3217 ms, max 200 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:49:52 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-02 12:50:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 24 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 12, redundant 3
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3046 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:50:22 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-02 12:50:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 55 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 18, redundant 4
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2975 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:50:53 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-02 12:51:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 25 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 16, redundant 2
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 2937 ms, max 129 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:51:24 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-02 12:51:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 56 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 3007 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:51:54 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-02 12:52:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 29 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 5, redundant 3
Fitness: max 1(1), min 0(66), ave 0.015
Test execution time: sum 4095 ms, max 140 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:52:27 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-02 12:52:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 59 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 16, redundant 8
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2923 ms, max 70 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:52:57 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-02 12:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 31 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3559 ms, max 138 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:53:30 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-02 12:54:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 6, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3396 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:54:02 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-02 12:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 5, redundant 9
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3538 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:54:35 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-02 12:55:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 8 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 12, redundant 10
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2810 ms, max 80 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:55:06 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-02 12:55:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3317 ms, max 121 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:55:38 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-02 12:56:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 11 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 7, redundant 10
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3362 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:56:10 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-02 12:56:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 44 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 11, redundant 7
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3695 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:56:42 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-02 12:57:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 16 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 11, redundant 6
Fitness: max 1(2), min 0(55), ave 0.035
Test execution time: sum 3370 ms, max 71 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 12:57:14 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-02 12:57:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 50 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 0, redundant 8
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3484 ms, max 111 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:57:48 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-02 12:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 23 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3517 ms, max 125 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:58:21 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-02 12:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 57 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 10, redundant 2
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3725 ms, max 113 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 12:58:55 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-02 12:59:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 30 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 7, redundant 4
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3480 ms, max 204 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 12:59:29 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-02 13:00:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3535 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:00:01 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-02 13:00:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 37 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 1, redundant 9
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3548 ms, max 122 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:00:35 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-02 13:01:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 11 seconds
Variants: generated 100, build-succeeded 65, build-failed 31, syntax-invalid 2, redundant 2
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 3802 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:01:09 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-02 13:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 5, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3167 ms, max 64 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:01:42 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-02 13:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 17 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 2, redundant 10
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3551 ms, max 135 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:02:15 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-02 13:02:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 51 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3565 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:02:49 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-02 13:03:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 24 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 0, redundant 10
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3218 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:03:23 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-02 13:03:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 59 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 4, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3568 ms, max 200 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:03:57 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-02 13:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 32 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 4, redundant 11
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3396 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:04:30 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-02 13:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 6 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 3, redundant 7
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3516 ms, max 142 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:05:04 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-02 13:05:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 42 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 3, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3718 ms, max 81 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:05:40 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-02 13:06:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 16 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 9, redundant 9
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3278 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:06:14 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-02 13:06:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3225 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:06:49 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-02 13:07:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 23, redundant 3
Fitness: max 0(40), min 0(40), ave 0
Test execution time: sum 2242 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:07:19 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-02 13:07:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 54 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 10, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2896 ms, max 128 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:07:52 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-02 13:08:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 27 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 7, redundant 9
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3135 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:08:25 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-02 13:08:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 7, redundant 8
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2994 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:08:59 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-02 13:09:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 36 seconds
Variants: generated 100, build-succeeded 63, build-failed 33, syntax-invalid 3, redundant 1
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3686 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:09:34 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-02 13:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 9 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 2, redundant 7
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3259 ms, max 69 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:10:07 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-02 13:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 44 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 2, redundant 11
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3434 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:10:42 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-02 13:11:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 17 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 7, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3462 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:11:15 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-02 13:11:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 50 seconds
Variants: generated 100, build-succeeded 56, build-failed 36, syntax-invalid 3, redundant 5
Fitness: max 1(2), min 0(54), ave 0.036
Test execution time: sum 3114 ms, max 132 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:11:48 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-02 13:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 10, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3141 ms, max 115 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:12:21 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-02 13:12:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 56 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 6, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3156 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:12:54 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-02 13:13:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 29 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3259 ms, max 116 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:13:27 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-02 13:13:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3102 ms, max 63 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:13:58 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-02 13:14:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 34 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 6, redundant 8
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3394 ms, max 113 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:14:32 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-02 13:15:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 8 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 6, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3316 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:15:06 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-02 13:15:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 40 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 6, redundant 9
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2881 ms, max 63 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:15:38 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-02 13:16:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 13 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 2, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3427 ms, max 122 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:16:12 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-02 13:16:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 48 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 2, redundant 10
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3543 ms, max 113 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:16:46 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-02 13:17:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 21 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 4, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3384 ms, max 81 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:17:19 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-02 13:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 56 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 1, redundant 8
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3439 ms, max 110 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:17:54 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-02 13:18:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 30 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 2, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3558 ms, max 173 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:18:28 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-02 13:19:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 4 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 2, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3339 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:19:03 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-02 13:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 39 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 2, redundant 5
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3614 ms, max 176 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:19:37 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-02 13:20:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 14 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 5, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3440 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:20:12 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-02 13:20:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 47 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 6, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3083 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:20:45 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-02 13:21:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 21 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 6, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3165 ms, max 116 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:21:20 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-02 13:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 54 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3084 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:21:53 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-02 13:22:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 28 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 9, redundant 9
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3073 ms, max 119 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:22:26 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-02 13:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 7, redundant 11
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3200 ms, max 63 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:22:59 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-02 13:23:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 34 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2920 ms, max 102 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:23:32 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-02 13:24:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 7 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 11, redundant 7
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2733 ms, max 62 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:24:05 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-02 13:24:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 41 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3188 ms, max 145 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:24:39 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-02 13:25:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 15 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 18, redundant 7
Fitness: max 1(1), min 0(44), ave 0.022
Test execution time: sum 2642 ms, max 121 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:25:13 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-02 13:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 48 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 9, redundant 8
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2733 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:25:47 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-02 13:26:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 24 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 12, redundant 3
Fitness: max 1(2), min 0(56), ave 0.034
Test execution time: sum 3350 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:26:22 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-02 13:26:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3212 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:26:58 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-02 13:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 34 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 13, redundant 5
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2653 ms, max 109 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:27:32 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-02 13:28:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 9 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 6, redundant 11
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3399 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:28:07 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-02 13:28:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 12, redundant 9
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2937 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:28:42 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-02 13:29:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 6, redundant 9
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3169 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:29:17 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-02 13:29:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 54 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3337 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:29:52 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-02 13:30:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 29 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 12, redundant 8
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2936 ms, max 181 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:30:27 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-02 13:31:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 10, redundant 8
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3126 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:31:02 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-02 13:31:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 39 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 19, redundant 3
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2724 ms, max 115 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:31:37 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-02 13:32:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 9 seconds
Variants: generated 100, build-succeeded 41, build-failed 28, syntax-invalid 25, redundant 6
Fitness: max 0(41), min 0(41), ave 0
Test execution time: sum 2286 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:32:07 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-02 13:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 43 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 11, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3240 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:32:41 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-02 13:33:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 18 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 7, redundant 8
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3077 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:33:16 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-02 13:33:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 53 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 10, redundant 10
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3053 ms, max 113 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:33:51 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-02 13:34:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 27 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 11, redundant 9
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2769 ms, max 65 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:34:25 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-02 13:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 2 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 9, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3060 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:35:01 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-02 13:35:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 39 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 10, redundant 10
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3313 ms, max 132 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:35:37 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-02 13:36:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 13 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 12, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3024 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:36:12 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-02 13:36:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 48 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 19, redundant 5
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2834 ms, max 109 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:36:46 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-02 13:37:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 11, redundant 10
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3083 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:37:21 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-02 13:37:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 0 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 6, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3493 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:37:59 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-02 13:38:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 38 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3492 ms, max 115 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:38:36 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-02 13:39:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 5, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3162 ms, max 67 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:39:12 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-02 13:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 13, redundant 6
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2938 ms, max 133 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:39:48 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-02 13:40:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 23 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 20, redundant 5
Fitness: max 0(43), min 0(43), ave 0
Test execution time: sum 2476 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:40:21 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-02 13:40:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 59 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 19, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2782 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:40:57 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-02 13:41:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 36 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 5, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3301 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:41:34 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-02 13:42:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 12 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 12, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3100 ms, max 119 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:42:10 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-02 13:42:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 51 seconds
Variants: generated 100, build-succeeded 60, build-failed 22, syntax-invalid 6, redundant 12
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3536 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:42:49 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-02 13:43:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 29 seconds
Variants: generated 100, build-succeeded 64, build-failed 24, syntax-invalid 5, redundant 7
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3444 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:43:28 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-02 13:44:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 8 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 9, redundant 8
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3011 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:44:06 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-02 13:44:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 48 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 6, redundant 2
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3673 ms, max 114 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:44:46 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-02 13:45:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 12, redundant 10
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2884 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:45:23 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-02 13:46:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 5 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 6, redundant 2
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3631 ms, max 117 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:46:03 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-02 13:46:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 45 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 5, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3455 ms, max 133 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:46:43 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-08-02 13:47:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 4, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3034 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:47:21 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-08-02 13:48:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 2 seconds
Variants: generated 100, build-succeeded 63, build-failed 22, syntax-invalid 7, redundant 8
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3580 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:48:00 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-08-02 13:48:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 39 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 11, redundant 9
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2655 ms, max 65 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:48:37 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-08-02 13:49:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 17 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 14, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3069 ms, max 125 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:49:15 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-08-02 13:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 56 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 11, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3132 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:49:54 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-08-02 13:50:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 34 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 10, redundant 6
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3114 ms, max 68 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:50:32 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-08-02 13:51:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 13 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 11, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3257 ms, max 107 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 13:51:11 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-08-02 13:51:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 15, redundant 4
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2659 ms, max 64 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:51:49 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-08-02 13:52:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 6, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3417 ms, max 180 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:52:29 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-08-02 13:56:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 12 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 6, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 183616 ms, max 180068 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:56:10 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-08-02 13:56:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 8, redundant 8
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3302 ms, max 71 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:56:48 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-08-02 13:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 9, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3299 ms, max 109 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:57:27 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-08-02 13:58:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 8 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3147 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:58:06 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-08-02 13:58:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 46 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 8, redundant 7
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3303 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 13:58:44 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-08-02 13:59:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 8, redundant 6
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2837 ms, max 103 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 13:59:23 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-08-02 14:00:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 6 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 5, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3482 ms, max 109 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:00:04 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-08-02 14:00:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 7, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3239 ms, max 69 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:00:42 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-08-02 14:01:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 36, syntax-invalid 10, redundant 0
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3091 ms, max 117 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:01:21 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-08-02 14:02:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 9, redundant 8
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3251 ms, max 137 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:02:01 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-08-02 14:02:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 11, redundant 5
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 2868 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:02:39 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-08-02 14:03:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 21 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 8, redundant 8
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2990 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:03:19 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-08-02 14:03:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3411 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:03:58 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-08-02 14:04:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 40 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 4, redundant 7
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3528 ms, max 73 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:04:38 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-08-02 14:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 21 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 6, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3320 ms, max 121 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:05:19 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-08-02 14:05:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 0 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 10, redundant 10
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2979 ms, max 157 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:05:58 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-08-02 14:06:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 39 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 8, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3367 ms, max 76 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:06:37 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-08-02 14:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3389 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:07:16 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-08-02 14:07:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3254 ms, max 65 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:07:54 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-08-02 14:08:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 36 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 3, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3175 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:08:34 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-08-02 14:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 17 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 2, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3651 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:09:15 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-08-02 14:09:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 58 seconds
Variants: generated 100, build-succeeded 63, build-failed 33, syntax-invalid 0, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3540 ms, max 66 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:09:56 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-08-02 14:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 40, syntax-invalid 4, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3087 ms, max 152 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:10:39 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-08-02 14:11:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 23 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 7, redundant 1
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3418 ms, max 129 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:11:21 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-08-02 14:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 5 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3510 ms, max 71 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:12:04 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-08-02 14:12:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 48 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0(61), ave 0.016
Test execution time: sum 3597 ms, max 129 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:12:46 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-08-02 14:13:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 32 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 2, redundant 8
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3673 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:13:30 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-08-02 14:14:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 15 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 3, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3600 ms, max 155 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 14:14:13 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-08-02 14:14:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 58 seconds
Variants: generated 100, build-succeeded 66, build-failed 22, syntax-invalid 2, redundant 10
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3746 ms, max 78 ms, min 50 ms
----------------------------------------------------------------

2023-08-02 14:14:56 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-08-02 14:15:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 42 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 0, redundant 10
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3596 ms, max 107 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:15:40 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-08-02 14:16:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 25 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 3, redundant 10
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3639 ms, max 113 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:16:23 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-08-02 14:17:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 8 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 3, redundant 12
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3747 ms, max 123 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:17:06 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-08-02 14:17:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 2, redundant 10
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3590 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:17:50 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-08-02 14:18:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 34 seconds
Variants: generated 100, build-succeeded 66, build-failed 21, syntax-invalid 1, redundant 12
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3723 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:18:32 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-08-02 14:19:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 16 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 6, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3132 ms, max 105 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:19:14 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-08-02 14:19:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 37, syntax-invalid 4, redundant 4
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3249 ms, max 115 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:19:58 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-08-02 14:20:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 43 seconds
Variants: generated 100, build-succeeded 68, build-failed 24, syntax-invalid 5, redundant 3
Fitness: max 0(68), min 0(68), ave 0
Test execution time: sum 4041 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:20:41 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-08-02 14:21:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 26 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 5, redundant 8
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3541 ms, max 133 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:21:24 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-08-02 14:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 9 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 4, redundant 11
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3462 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:22:08 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-08-02 14:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 53 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3526 ms, max 125 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:22:51 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-08-02 14:23:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 35 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 8, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3324 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:23:34 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-08-02 14:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 18 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 6, redundant 9
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3516 ms, max 125 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:24:17 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-08-02 14:24:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 16, redundant 1
Fitness: max 1(2), min 0(56), ave 0.034
Test execution time: sum 3616 ms, max 121 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:24:59 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-08-02 14:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 5, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3307 ms, max 67 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:25:42 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-08-02 14:26:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 29 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 2, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3606 ms, max 112 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:26:27 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-08-02 14:27:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 13 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 10, redundant 3
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3736 ms, max 200 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:27:11 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-08-02 14:27:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 56 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 5, redundant 9
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3409 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:27:54 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-08-02 14:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 39 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 5, redundant 11
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3343 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-02 14:28:37 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-08-02 14:29:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 23 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 6, redundant 7
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3652 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:29:21 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-08-02 14:30:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 6 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 4, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3371 ms, max 68 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 14:30:05 [main] [INFO]  KGenProgMain - GA stopped
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v738)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v738)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v738)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -214,7 +214,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
+                    increasing = true;
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
@@ -231,9 +231,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v738)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v738)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v1866)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,7 +113,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    interpolatedDerivatives = null;
 
     finalized         = false;
     this.forward      = forward;
@@ -175,7 +175,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    interpolatedDerivatives = null;
 
     finalized         = false;
     this.forward      = isForward;
@@ -243,7 +243,8 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v1866)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v1866)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,12 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
+        pendingEvent = false;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -169,7 +168,7 @@
 
         try {
 
-            forward = interpolator.isForward();
+            final double t0 = interpolator.getPreviousTime();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v1866)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v1866)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v1866)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -247,11 +247,9 @@
                 return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
-                    (Math.abs(y0) <= Math.abs(y1))) {
-                // Force bisection.
-                delta = 0.5 * dx;
-                oldDelta = delta;
-            } else {
+                    (Math.abs(y0) <= Math.abs(y1)))
+				y1 = f.value(x1);
+			else {
                 double r3 = y1 / y0;
                 double p;
                 double p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v2080)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,7 +113,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    interpolatedDerivatives = null;
 
     finalized         = false;
     this.forward      = forward;
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +241,8 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v2080)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v2080)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -169,7 +167,7 @@
 
         try {
 
-            forward = interpolator.isForward();
+            final double t0 = interpolator.getPreviousTime();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v2080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v2080)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v2080)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -247,11 +247,9 @@
                 return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
-                    (Math.abs(y0) <= Math.abs(y1))) {
-                // Force bisection.
-                delta = 0.5 * dx;
-                oldDelta = delta;
-            } else {
+                    (Math.abs(y0) <= Math.abs(y1)))
+				y1 = f.value(x1);
+			else {
                 double r3 = y1 / y0;
                 double p;
                 double p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v3013)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,7 +112,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    interpolatedDerivatives = null;
 
     finalized         = false;
     this.forward      = forward;
@@ -175,7 +174,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    interpolatedDerivatives = null;
 
     finalized         = false;
     this.forward      = isForward;
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -272,6 +269,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+		currentTime = Double.NaN;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v3013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v3013)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -282,7 +280,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v3013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v3013)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -216,10 +216,9 @@
    */
   public void storeTime(final double t) {
 
-    currentTime = t;
+    currentState = null;
+	currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +242,13 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -272,7 +277,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          setInterpolatedTime(getInterpolatedTime());
           dirtyState = false;
       }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6643)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -216,10 +216,9 @@
    */
   public void storeTime(final double t) {
 
-    currentTime = t;
+    currentState = null;
+	currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +242,13 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -272,7 +277,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          setInterpolatedTime(getInterpolatedTime());
           dirtyState = false;
       }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6643)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6643)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6643)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6643)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v6643)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    x2 = x0;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7103)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +241,17 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +281,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7103)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7103)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7103)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7103)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7103)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(y1) <= functionValueAccuracy) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7184)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +240,13 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -272,7 +275,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7184)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7184)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -149,7 +148,8 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
+        double ta = t0;
+		g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7184)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v7184)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8114)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -243,7 +243,17 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +283,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
@@ -288,7 +298,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedDerivatives;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8114)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8114)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8114)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8114)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8130)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -243,7 +243,17 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +283,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
@@ -288,7 +298,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedDerivatives;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8130)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8130)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8130)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8130)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8493)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -243,7 +242,16 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +281,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8493)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8493)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -238,8 +237,6 @@
                     }
 
                 } else {
-                    // no sign change: there is no event for now
-                    ta = tb;
                     ga = gb;
                 }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8493)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8493)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8493)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,6 +280,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
+					delta = x1 - x0;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +241,15 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +279,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -324,8 +322,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8618)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -54,6 +54,7 @@
      */
     public BrentSolver() {
         super(100, 1E-6);
+		this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(y1) <= functionValueAccuracy) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -169,7 +167,6 @@
   protected void reinitialize(final double[] y, final boolean isForward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +240,13 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +276,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -324,8 +323,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v8827)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -54,6 +54,7 @@
      */
     public BrentSolver() {
         super(100, 1E-6);
+		this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -223,15 +224,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9518)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -243,7 +242,19 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,7 +284,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedState;
@@ -288,7 +299,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          dirtyState = true;
       }
 
       return interpolatedDerivatives;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9518)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9518)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9518)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9518)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +241,16 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,9 +101,7 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9645)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +241,16 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9645)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9645)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,9 +101,7 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +211,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9645)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9645)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v9645)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10178)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,12 +106,12 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	interpolatedState = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +240,16 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10178)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10178)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10178)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10178)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10178)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -107,7 +105,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -169,7 +166,6 @@
   protected void reinitialize(final double[] y, final boolean isForward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +239,7 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
   }
 
   /** {@inheritDoc} */
@@ -418,7 +414,15 @@
     currentTime   = in.readDouble();
     h             = in.readDouble();
     forward       = in.readBoolean();
-    dirtyState    = true;
+    this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState    = true;
 
     if (dimension < 0) {
         currentState = null;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -324,8 +322,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10502)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -107,7 +105,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -169,7 +166,6 @@
   protected void reinitialize(final double[] y, final boolean isForward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +239,7 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
   }
 
   /** {@inheritDoc} */
@@ -418,7 +414,15 @@
     currentTime   = in.readDouble();
     h             = in.readDouble();
     forward       = in.readBoolean();
-    dirtyState    = true;
+    this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState    = true;
 
     if (dimension < 0) {
         currentState = null;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10502)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10502)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -231,9 +230,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
@@ -324,8 +320,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10502)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10502)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -274,8 +269,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(y1) <= functionValueAccuracy) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -243,7 +241,20 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11340)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +240,21 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11340)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11340)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -213,7 +212,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    pendingEvent = false;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11340)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11340)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11340)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,6 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11453)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    h = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    h = Double.NaN;
 
   }
 
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +240,22 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11453)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11453)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    pendingEvent = false;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11453)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11453)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11453)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,6 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11474)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -107,7 +105,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -117,7 +114,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    h = Double.NaN;
 
   }
 
@@ -179,7 +176,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -218,8 +214,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +237,19 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11474)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11474)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +212,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    pendingEvent = false;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,8 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -107,7 +107,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +240,21 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    pendingEvent = false;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,6 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11569)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,15 +88,14 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -169,7 +167,6 @@
   protected void reinitialize(final double[] y, final boolean isForward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +240,22 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11569)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11569)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11569)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11569)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11570)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -243,7 +242,23 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +288,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11570)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11570)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11570)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11570)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11570)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,6 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11840)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +95,9 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -243,7 +244,20 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11840)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11840)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,9 +101,7 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +280,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        g0 = Double.NaN;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11840)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v11840)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,6 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12050)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -96,7 +95,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    h = Double.NaN;
   }
 
   /** Simple constructor.
@@ -243,7 +242,22 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12050)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12050)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12050)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -276,10 +271,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    iterationCount = i;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12745)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +241,23 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +287,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12745)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12745)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12745)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12745)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:08 [main] [INFO]  PatchLogExporter - patch (v12745)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12920)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,9 +88,7 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -107,7 +105,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +240,23 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +286,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12920)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12920)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12936)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,9 +88,7 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -107,7 +105,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +240,23 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +286,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12936)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12936)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v12936)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13025)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -169,7 +167,6 @@
   protected void reinitialize(final double[] y, final boolean isForward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +240,23 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13025)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13025)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13025)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13025)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -223,7 +218,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (!resultComputed) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13026)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -107,7 +106,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -169,7 +167,6 @@
   protected void reinitialize(final double[] y, final boolean isForward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -243,7 +240,23 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13026)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13026)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13026)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13026)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13026)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13930)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -243,7 +243,28 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13930)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13930)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13930)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v13930)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -274,8 +269,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (y0 == 0.0) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14043)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -96,7 +95,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -243,7 +242,25 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14043)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14043)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -231,9 +230,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14043)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14043)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14043)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -275,14 +275,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					p = -p;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14515)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +241,27 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14515)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14515)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14515)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14515)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14703)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -243,7 +243,27 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -271,6 +291,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		h = Double.NaN;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14703)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14703)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14703)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14703)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v14703)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16507)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -243,7 +243,30 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +296,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16507)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16507)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16507)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16507)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -276,10 +275,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    x0 = x1;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16607)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +242,30 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +295,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16607)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16607)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16607)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16607)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v16607)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17016)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,8 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    h = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -243,7 +244,28 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +295,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17016)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17016)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -231,9 +231,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17016)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17016)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17016)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -250,7 +242,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -302,7 +293,6 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
-                oldDelta = delta;
             }
             i++;
         }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +242,29 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +294,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -231,9 +231,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v17714)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -229,7 +229,6 @@
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +178,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -243,7 +242,29 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +294,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    final double[] y = interpolator.getInterpolatedState();
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18031)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18216)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +178,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,30 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      final double oneMinusThetaH = currentTime - interpolatedTime;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18216)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18216)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -149,7 +149,6 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -231,9 +230,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18216)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18216)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18216)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -275,14 +275,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					oldDelta = delta;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18223)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +178,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,30 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      final double oneMinusThetaH = currentTime - interpolatedTime;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18223)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18223)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -149,7 +149,6 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -231,9 +230,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18223)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18223)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18223)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18907)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -243,7 +242,32 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +297,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18907)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18907)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,12 +282,9 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
-            // force the sign to its value "just after the event"
-            previousEventTime = t;
             g0Positive        = increasing;
             nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18907)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18907)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v18907)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -302,7 +301,6 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
-                oldDelta = delta;
             }
             i++;
         }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v20836)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -112,6 +111,26 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
+	final double oneMinusThetaH = currentTime - interpolatedTime;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -243,7 +262,10 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +295,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v20836)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v20836)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,6 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v20836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v20836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v20836)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -276,11 +275,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
@@ -302,7 +296,6 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
-                oldDelta = delta;
             }
             i++;
         }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -216,7 +216,12 @@
    */
   public void storeTime(final double t) {
 
-    currentTime = t;
+    this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	currentTime = t;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
@@ -243,7 +248,30 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +301,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -240,7 +240,6 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
-                    ga = gb;
                 }
 
             }
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21721)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Simple constructor.
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -243,7 +242,38 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21721)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21721)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,6 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -231,9 +230,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21721)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21721)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v21721)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +112,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    h = currentTime - previousTime;
 
   }
 
@@ -243,7 +240,34 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +297,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,11 +100,9 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22513)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +112,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    h = currentTime - previousTime;
 
   }
 
@@ -243,7 +240,34 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +297,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,11 +100,9 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v22520)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,8 +112,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -243,7 +240,37 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +300,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23024)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -267,6 +267,7 @@
                     double r1 = y0 / y2;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
+					resultComputed = true;
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(dx) <= tolerance) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,8 +112,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -243,7 +240,37 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +300,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23026)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -267,6 +267,7 @@
                     double r1 = y0 / y2;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
+					resultComputed = true;
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
@@ -276,10 +277,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23804)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +112,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -243,7 +240,37 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +300,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23804)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23804)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v23804)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,15 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						x0 = x1;
+						x1 = x2;
+						x2 = x0;
+						y0 = y1;
+						y1 = y2;
+						y2 = y0;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24145)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +112,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
 
   }
 
@@ -179,7 +176,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +239,37 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +299,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24145)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24145)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24145)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24145)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24213)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -243,7 +242,38 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +303,14 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24213)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v24213)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -275,14 +275,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					y0 = y1;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25531)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,39 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +303,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25531)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25531)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -214,7 +214,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25531)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25531)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -243,7 +242,44 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +309,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27229)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +177,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +240,37 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +300,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27229)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27229)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(min) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
@@ -258,7 +258,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (i < maximalIterationCount) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,39 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +303,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27527)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(min) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27576)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,46 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +310,9 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27576)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27576)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27576)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27576)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(min) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27968)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +177,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +240,40 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +303,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27968)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27968)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27968)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v27968)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v28963)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -243,7 +242,49 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +314,9 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v28963)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v28963)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v28963)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v28963)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -242,8 +242,47 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +312,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29053)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29099)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -243,7 +243,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +314,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29099)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29099)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29099)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29099)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v29099)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v30506)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -180,6 +180,7 @@
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
+	dirtyState = false;
 
   }
 
@@ -243,7 +244,50 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +317,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v30506)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v30506)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,8 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        previousEventTime = Double.NaN;
+		pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v30506)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v30506)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v30506)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31701)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +179,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +243,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	this.dirtyState = true;
+	dirtyState = false;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +314,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31701)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31701)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31701)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31701)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31701)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31723)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +179,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +243,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	this.dirtyState = true;
+	dirtyState = false;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +314,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31723)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31723)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v31723)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (f == null) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +242,45 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +310,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -203,7 +203,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:09 [main] [INFO]  PatchLogExporter - patch (v33410)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(y2) < Math.abs(y1)) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33522)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +242,46 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +311,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33522)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33522)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33522)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -203,7 +203,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33522)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33522)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33918)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +242,46 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +311,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33918)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33918)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33918)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -197,13 +196,9 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33918)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v33918)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34241)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,11 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -109,15 +107,13 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -171,15 +167,13 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
-
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +237,43 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.forward = forward;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +303,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34241)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34241)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34241)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -203,7 +202,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
@@ -213,7 +211,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    nextAction = EventHandler.CONTINUE;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34341)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,13 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -179,7 +179,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +243,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +314,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34341)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34341)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34418)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentState = null;
+	previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +118,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +180,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -243,7 +244,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +315,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34418)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34418)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34418)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34418)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34418)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentState = null;
+	previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +118,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +180,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -243,7 +244,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +315,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34540)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentState = null;
+	previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +118,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +180,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -243,7 +244,48 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +315,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v34639)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -301,7 +293,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35382)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,13 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentState = null;
+	previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -115,9 +115,9 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    dirtyState = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +179,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +243,47 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +313,12 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35382)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35382)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35382)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -169,7 +168,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -213,7 +211,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35382)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35382)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35388)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +117,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -180,6 +180,7 @@
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
+	interpolatedTime = Double.NaN;
 
   }
 
@@ -243,7 +244,49 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +316,14 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35388)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35388)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35388)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35388)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35388)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -301,7 +301,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35609)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,8 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    this.forward = forward;
+	interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +118,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +180,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -243,7 +244,46 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +313,14 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35609)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,7 +197,8 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
+                    nextAction = EventHandler.CONTINUE;
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
@@ -282,7 +283,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35846)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,11 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentState = null;
+	previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +119,8 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
 
   }
 
@@ -179,7 +182,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +246,50 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	interpolatedTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +319,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35846)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35846)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35846)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v35846)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v36341)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,50 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +314,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v36341)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v36341)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v36341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v36341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37933)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -113,11 +114,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    h = -h;
 
   }
 
@@ -217,7 +216,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -243,7 +241,54 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +318,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37933)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37933)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -170,7 +170,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+            pendingEventTime = Double.NaN;
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37933)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37933)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37933)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (y1 == 0.0) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37945)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -113,11 +114,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -179,7 +178,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    h = -h;
 
   }
 
@@ -217,7 +216,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -243,7 +241,54 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +318,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37945)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37945)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -170,7 +170,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+            pendingEventTime = Double.NaN;
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37945)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v37945)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40322)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -96,7 +95,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    dirtyState = false;
   }
 
   /** Simple constructor.
@@ -113,11 +112,8 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
-    this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -175,11 +171,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +237,50 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	h = -h;
+	h = -h;
+	h = -h;
+	previousTime = Double.NaN;
+	this.forward = forward;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +310,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40322)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40322)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40322)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40322)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40524)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -96,7 +95,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    dirtyState = false;
   }
 
   /** Simple constructor.
@@ -106,18 +105,14 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
-    this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -175,11 +170,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +236,50 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	h = -h;
+	h = -h;
+	h = -h;
+	previousTime = Double.NaN;
+	this.forward = forward;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +309,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40524)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40524)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40524)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40535)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -96,7 +95,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    dirtyState = false;
   }
 
   /** Simple constructor.
@@ -106,18 +105,14 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
-    this.forward      = forward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -175,11 +170,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    previousTime = Double.NaN;
 
   }
 
@@ -243,7 +236,50 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	h = -h;
+	h = -h;
+	h = -h;
+	previousTime = Double.NaN;
+	this.forward = forward;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +309,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40535)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40535)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40535)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v40535)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45211)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,14 +89,13 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    setInterpolatedTime(getInterpolatedTime());
     this.forward            = true;
-    this.dirtyState         = true;
+    currentTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -117,7 +116,7 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -179,7 +178,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,54 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.forward = forward;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	previousTime = Double.NaN;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +318,10 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45211)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45211)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45211)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,6 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45211)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45211)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45381)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,14 +89,12 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
-    interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    previousTime = Double.NaN;
+	setInterpolatedTime(getInterpolatedTime());
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -115,9 +113,10 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    previousTime = Double.NaN;
+	setInterpolatedTime(getInterpolatedTime());
     this.forward      = forward;
-    this.dirtyState   = true;
+    currentTime = Double.NaN;
 
   }
 
@@ -179,7 +178,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -243,7 +241,57 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.forward = forward;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +321,8 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45381)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45381)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    nextAction = EventHandler.CONTINUE;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45381)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v45381)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v46632)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,58 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    setInterpolatedTime(getInterpolatedTime());
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	this.forward = forward;
+	interpolatedState = null;
+	this.forward = forward;
+	interpolatedState = null;
+	previousTime = Double.NaN;
+	previousTime = Double.NaN;
+	interpolatedState = null;
+	interpolatedState = null;
+	this.forward = forward;
+	this.forward = forward;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
   }
 
   /** Simple constructor.
@@ -243,7 +292,7 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +322,11 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v46632)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v46632)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v46632)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -248,6 +248,7 @@
             // no event during the whole step
             pendingEvent     = false;
             pendingEventTime = Double.NaN;
+			pendingEvent = false;
             return false;
 
         } catch (FunctionEvaluationException e) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v46632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v46632)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47247)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,52 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedState = null;
+	System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
+	interpolatedState = null;
+	interpolatedState = null;
+	this.forward = forward;
+	interpolatedState = null;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
   }
 
   /** Simple constructor.
@@ -218,8 +263,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +286,12 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +321,16 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47247)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47247)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -248,6 +248,7 @@
             // no event during the whole step
             pendingEvent     = false;
             pendingEventTime = Double.NaN;
+			pendingEvent = false;
             return false;
 
         } catch (FunctionEvaluationException e) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47247)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47247)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47247)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y0 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47430)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,56 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    setInterpolatedTime(getInterpolatedTime());
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	interpolatedState = null;
+	previousTime = Double.NaN;
+	interpolatedState = null;
+	interpolatedState = null;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	interpolatedState = null;
+	this.forward = forward;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
   }
 
   /** Simple constructor.
@@ -115,9 +162,9 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    setInterpolatedTime(getInterpolatedTime());
     this.forward      = forward;
-    this.dirtyState   = true;
+    currentTime = Double.NaN;
 
   }
 
@@ -179,7 +226,7 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
+    this.forward = forward;
 
   }
 
@@ -243,7 +290,8 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +321,14 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47430)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47430)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -248,6 +247,9 @@
             // no event during the whole step
             pendingEvent     = false;
             pendingEventTime = Double.NaN;
+			pendingEvent = false;
+			pendingEvent = false;
+			pendingEvent = false;
             return false;
 
         } catch (FunctionEvaluationException e) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47430)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v47430)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49116)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,60 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedState = null;
+	this.forward = forward;
+	interpolatedState = null;
+	interpolatedState = null;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	this.forward = forward;
+	this.forward = forward;
+	interpolatedState = null;
+	previousTime = Double.NaN;
+	interpolatedState = null;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
   }
 
   /** Simple constructor.
@@ -243,7 +296,9 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +328,16 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49116)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49116)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -248,6 +248,7 @@
             // no event during the whole step
             pendingEvent     = false;
             pendingEventTime = Double.NaN;
+			pendingEvent = false;
             return false;
 
         } catch (FunctionEvaluationException e) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49116)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49116)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49116)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49147)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,60 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedState = null;
+	this.forward = forward;
+	interpolatedState = null;
+	interpolatedState = null;
+	interpolatedTime = Double.NaN;
+	interpolatedTime = Double.NaN;
+	this.forward = forward;
+	this.forward = forward;
+	interpolatedState = null;
+	previousTime = Double.NaN;
+	interpolatedState = null;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState = true;
   }
 
   /** Simple constructor.
@@ -243,7 +296,9 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      this.dirtyState = true;
+	this.dirtyState = true;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -273,6 +328,16 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
+		this.dirtyState = true;
           dirtyState = false;
       }
 
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49147)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49147)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -248,6 +248,7 @@
             // no event during the whole step
             pendingEvent     = false;
             pendingEventTime = Double.NaN;
+			pendingEvent = false;
             return false;
 
         } catch (FunctionEvaluationException e) {
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49147)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49147)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 14:30:10 [main] [INFO]  PatchLogExporter - patch (v49147)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,6 +227,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x1 = 0.5 * (x0 + x2);
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-02 14:30:10 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 45382
Build succeeded variants = 27151
Time elapsed = 3 hours 51 minutes 12 seconds
Exit status = FAILURE (maximum generation)
