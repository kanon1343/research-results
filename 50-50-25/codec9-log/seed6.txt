2023-10-23 00:27:28 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-10-23 00:27:28 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-10-23 00:27:28 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-10-23 00:27:28 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9/kgenprog-9.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9/src/java] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64Test] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 6 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Downloads/research
version = 1.8.2
================================================================
2023-10-23 00:27:35 [main] [INFO]  KGenProgMain - initial failed tests (1/51)
org.apache.commons.codec.binary.Base64Test.testCodec112: null

2023-10-23 00:27:35 [main] [INFO]  KGenProgMain - GA started
2023-10-23 00:27:35 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-10-23 00:27:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 50, build-succeeded 7, build-failed 32, syntax-invalid 2, redundant 9
Fitness: max 1(1), min 0.549(1), ave 0.821
Test execution time: sum 1386 ms, max 408 ms, min 110 ms
----------------------------------------------------------------

2023-10-23 00:27:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-10-23 00:27:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 50, build-succeeded 13, build-failed 27, syntax-invalid 5, redundant 5
Fitness: max 0.98(1), min 0.49(1), ave 0.778
Test execution time: sum 1310 ms, max 131 ms, min 65 ms
----------------------------------------------------------------

2023-10-23 00:27:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-10-23 00:27:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, build-succeeded 42, build-failed 22, syntax-invalid 7, redundant 29
Fitness: max 1(1), min 0.49(11), ave 0.692
Test execution time: sum 3401 ms, max 204 ms, min 54 ms
----------------------------------------------------------------

2023-10-23 00:27:52 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-10-23 00:27:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 100, build-succeeded 30, build-failed 27, syntax-invalid 5, redundant 38
Fitness: max 1(3), min 0.412(1), ave 0.842
Test execution time: sum 2460 ms, max 212 ms, min 56 ms
----------------------------------------------------------------

2023-10-23 00:27:58 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-10-23 00:28:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 100, build-succeeded 29, build-failed 27, syntax-invalid 14, redundant 30
Fitness: max 1(3), min 0.471(1), ave 0.891
Test execution time: sum 2502 ms, max 139 ms, min 54 ms
----------------------------------------------------------------

2023-10-23 00:28:03 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-10-23 00:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 100, build-succeeded 39, build-failed 27, syntax-invalid 6, redundant 28
Fitness: max 1(2), min 0.49(1), ave 0.901
Test execution time: sum 3037 ms, max 88 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:28:09 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-10-23 00:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 100, build-succeeded 13, build-failed 32, syntax-invalid 12, redundant 43
Fitness: max 1(1), min 0.863(4), ave 0.928
Test execution time: sum 1113 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-23 00:28:13 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-10-23 00:28:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 100, build-succeeded 22, build-failed 28, syntax-invalid 5, redundant 45
Fitness: max 1(5), min 0.549(1), ave 0.922
Test execution time: sum 1728 ms, max 97 ms, min 67 ms
----------------------------------------------------------------

2023-10-23 00:28:16 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-10-23 00:28:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 100, build-succeeded 33, build-failed 21, syntax-invalid 12, redundant 34
Fitness: max 1(2), min 0.529(1), ave 0.922
Test execution time: sum 2513 ms, max 114 ms, min 60 ms
----------------------------------------------------------------

2023-10-23 00:28:21 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-10-23 00:28:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 seconds
Variants: generated 100, build-succeeded 24, build-failed 33, syntax-invalid 19, redundant 24
Fitness: max 1(3), min 0.431(1), ave 0.9
Test execution time: sum 1895 ms, max 100 ms, min 52 ms
----------------------------------------------------------------

2023-10-23 00:28:25 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-10-23 00:28:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 seconds
Variants: generated 100, build-succeeded 33, build-failed 25, syntax-invalid 11, redundant 31
Fitness: max 1(9), min 0.667(2), ave 0.942
Test execution time: sum 2604 ms, max 92 ms, min 62 ms
----------------------------------------------------------------

2023-10-23 00:28:30 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-10-23 00:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 0 seconds
Variants: generated 100, build-succeeded 32, build-failed 31, syntax-invalid 11, redundant 26
Fitness: max 1(5), min 0.824(1), ave 0.939
Test execution time: sum 2628 ms, max 126 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:28:35 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-10-23 00:28:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 6 seconds
Variants: generated 100, build-succeeded 43, build-failed 25, syntax-invalid 7, redundant 25
Fitness: max 1(2), min 0.549(1), ave 0.922
Test execution time: sum 3431 ms, max 140 ms, min 64 ms
----------------------------------------------------------------

2023-10-23 00:28:42 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-10-23 00:28:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 12 seconds
Variants: generated 100, build-succeeded 36, build-failed 27, syntax-invalid 11, redundant 26
Fitness: max 1(3), min 0.549(1), ave 0.942
Test execution time: sum 2907 ms, max 125 ms, min 67 ms
----------------------------------------------------------------

2023-10-23 00:28:48 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-10-23 00:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 17 seconds
Variants: generated 100, build-succeeded 33, build-failed 26, syntax-invalid 17, redundant 24
Fitness: max 1(5), min 0.471(1), ave 0.944
Test execution time: sum 2577 ms, max 104 ms, min 51 ms
----------------------------------------------------------------

2023-10-23 00:28:53 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-10-23 00:28:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 23 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 12, redundant 14
Fitness: max 1(1), min 0.667(1), ave 0.947
Test execution time: sum 3451 ms, max 105 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:28:59 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-10-23 00:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 24, syntax-invalid 8, redundant 19
Fitness: max 1(6), min 0.157(1), ave 0.927
Test execution time: sum 3955 ms, max 97 ms, min 52 ms
----------------------------------------------------------------

2023-10-23 00:29:06 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-10-23 00:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 36 seconds
Variants: generated 100, build-succeeded 46, build-failed 24, syntax-invalid 12, redundant 18
Fitness: max 1(5), min 0.49(2), ave 0.925
Test execution time: sum 3773 ms, max 113 ms, min 51 ms
----------------------------------------------------------------

2023-10-23 00:29:12 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-10-23 00:29:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 44 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 5, redundant 23
Fitness: max 1(1), min 0.235(1), ave 0.927
Test execution time: sum 3834 ms, max 146 ms, min 53 ms
----------------------------------------------------------------

2023-10-23 00:29:20 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-10-23 00:29:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 51 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 4, redundant 17
Fitness: max 0.98(40), min 0.765(1), ave 0.969
Test execution time: sum 3785 ms, max 116 ms, min 69 ms
----------------------------------------------------------------

2023-10-23 00:29:27 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-10-23 00:29:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 58 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 1, redundant 20
Fitness: max 1(1), min 0.49(2), ave 0.935
Test execution time: sum 4016 ms, max 107 ms, min 53 ms
----------------------------------------------------------------

2023-10-23 00:29:34 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-10-23 00:29:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 4 seconds
Variants: generated 100, build-succeeded 41, build-failed 27, syntax-invalid 5, redundant 27
Fitness: max 0.98(35), min 0.49(1), ave 0.959
Test execution time: sum 3452 ms, max 118 ms, min 60 ms
----------------------------------------------------------------

2023-10-23 00:29:40 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-10-23 00:29:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 12 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 3, redundant 16
Fitness: max 0.98(46), min 0.549(1), ave 0.965
Test execution time: sum 4327 ms, max 129 ms, min 71 ms
----------------------------------------------------------------

2023-10-23 00:29:48 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-10-23 00:29:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 18 seconds
Variants: generated 100, build-succeeded 40, build-failed 27, syntax-invalid 11, redundant 22
Fitness: max 0.98(33), min 0.725(1), ave 0.956
Test execution time: sum 3171 ms, max 100 ms, min 64 ms
----------------------------------------------------------------

2023-10-23 00:29:54 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-10-23 00:30:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 25 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 15, redundant 10
Fitness: max 0.98(34), min 0.471(1), ave 0.93
Test execution time: sum 3658 ms, max 108 ms, min 62 ms
----------------------------------------------------------------

2023-10-23 00:30:01 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-10-23 00:30:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 33 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 4, redundant 16
Fitness: max 0.98(44), min 0.49(1), ave 0.949
Test execution time: sum 4521 ms, max 128 ms, min 54 ms
----------------------------------------------------------------

2023-10-23 00:30:09 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-10-23 00:30:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 40 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 6, redundant 14
Fitness: max 0.98(36), min 0.549(1), ave 0.938
Test execution time: sum 4214 ms, max 117 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:30:16 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-10-23 00:30:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 49 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 4, redundant 12
Fitness: max 0.98(42), min 0.765(1), ave 0.957
Test execution time: sum 5214 ms, max 160 ms, min 72 ms
----------------------------------------------------------------

2023-10-23 00:30:25 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-10-23 00:30:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 0 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 4, redundant 15
Fitness: max 0.98(43), min 0.588(1), ave 0.963
Test execution time: sum 6466 ms, max 2193 ms, min 54 ms
----------------------------------------------------------------

2023-10-23 00:30:36 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-10-23 00:30:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 6, redundant 12
Fitness: max 0.98(46), min 0.49(1), ave 0.947
Test execution time: sum 4985 ms, max 223 ms, min 69 ms
----------------------------------------------------------------

2023-10-23 00:30:45 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-10-23 00:30:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 18 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 7, redundant 11
Fitness: max 0.98(45), min 0.49(1), ave 0.94
Test execution time: sum 4563 ms, max 170 ms, min 53 ms
----------------------------------------------------------------

2023-10-23 00:30:54 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-10-23 00:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 27 seconds
Variants: generated 100, build-succeeded 57, build-failed 36, syntax-invalid 3, redundant 4
Fitness: max 0.98(52), min 0.549(2), ave 0.961
Test execution time: sum 4800 ms, max 149 ms, min 53 ms
----------------------------------------------------------------

2023-10-23 00:31:03 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-10-23 00:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 39 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 5, redundant 8
Fitness: max 0.98(47), min 0.49(2), ave 0.952
Test execution time: sum 5538 ms, max 687 ms, min 52 ms
----------------------------------------------------------------

2023-10-23 00:31:14 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-10-23 00:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 9, redundant 8
Fitness: max 0.98(46), min 0.431(1), ave 0.95
Test execution time: sum 6002 ms, max 646 ms, min 58 ms
----------------------------------------------------------------

2023-10-23 00:31:26 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-10-23 00:31:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 1 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 5, redundant 11
Fitness: max 1(1), min 0.725(1), ave 0.966
Test execution time: sum 5488 ms, max 649 ms, min 67 ms
----------------------------------------------------------------

2023-10-23 00:31:37 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-10-23 00:31:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 11, redundant 10
Fitness: max 0.98(42), min 0.157(1), ave 0.927
Test execution time: sum 4708 ms, max 210 ms, min 55 ms
----------------------------------------------------------------

2023-10-23 00:31:46 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-10-23 00:31:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 20 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 5, redundant 14
Fitness: max 0.98(41), min 0.49(1), ave 0.958
Test execution time: sum 4279 ms, max 191 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:31:56 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-10-23 00:32:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 6, redundant 12
Fitness: max 0.98(44), min 0.49(3), ave 0.937
Test execution time: sum 4526 ms, max 147 ms, min 50 ms
----------------------------------------------------------------

2023-10-23 00:32:05 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-10-23 00:32:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 41 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 7, redundant 16
Fitness: max 0.98(45), min 0.725(1), ave 0.962
Test execution time: sum 6370 ms, max 1199 ms, min 72 ms
----------------------------------------------------------------

2023-10-23 00:32:17 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-10-23 00:32:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 4, redundant 19
Fitness: max 1(1), min 0.49(1), ave 0.946
Test execution time: sum 5857 ms, max 368 ms, min 50 ms
----------------------------------------------------------------

2023-10-23 00:32:28 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-10-23 00:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 8 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 2, redundant 10
Fitness: max 0.98(51), min 0.549(1), ave 0.968
Test execution time: sum 6545 ms, max 525 ms, min 69 ms
----------------------------------------------------------------

2023-10-23 00:32:44 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-10-23 00:33:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 5, redundant 12
Fitness: max 0.98(47), min 0.49(1), ave 0.957
Test execution time: sum 6960 ms, max 506 ms, min 73 ms
----------------------------------------------------------------

2023-10-23 00:33:01 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-10-23 00:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 46 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 8, redundant 11
Fitness: max 0.98(45), min 0.49(1), ave 0.95
Test execution time: sum 7595 ms, max 475 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:33:22 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-10-23 00:33:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 1 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 7, redundant 13
Fitness: max 1(1), min 0.49(2), ave 0.957
Test execution time: sum 7256 ms, max 472 ms, min 66 ms
----------------------------------------------------------------

2023-10-23 00:33:37 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-10-23 00:33:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 14 seconds
Variants: generated 100, build-succeeded 45, build-failed 38, syntax-invalid 5, redundant 12
Fitness: max 0.98(41), min 0.549(1), ave 0.963
Test execution time: sum 6138 ms, max 710 ms, min 74 ms
----------------------------------------------------------------

2023-10-23 00:33:50 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-10-23 00:34:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 26 seconds
Variants: generated 100, build-succeeded 42, build-failed 34, syntax-invalid 13, redundant 11
Fitness: max 0.98(36), min 0.549(1), ave 0.958
Test execution time: sum 4885 ms, max 230 ms, min 77 ms
----------------------------------------------------------------

2023-10-23 00:34:02 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-10-23 00:34:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 39 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 7, redundant 17
Fitness: max 0.98(37), min 0.431(1), ave 0.951
Test execution time: sum 6137 ms, max 486 ms, min 65 ms
----------------------------------------------------------------

2023-10-23 00:34:15 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-10-23 00:34:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 13, redundant 9
Fitness: max 0.98(39), min 0.353(1), ave 0.929
Test execution time: sum 6151 ms, max 281 ms, min 51 ms
----------------------------------------------------------------

2023-10-23 00:34:27 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-10-23 00:34:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 3, redundant 12
Fitness: max 1(1), min 0.549(2), ave 0.943
Test execution time: sum 6760 ms, max 263 ms, min 63 ms
----------------------------------------------------------------

2023-10-23 00:34:43 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-10-23 00:35:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 24 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 7, redundant 10
Fitness: max 1(1), min 0.49(1), ave 0.959
Test execution time: sum 7405 ms, max 502 ms, min 56 ms
----------------------------------------------------------------

2023-10-23 00:35:00 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-10-23 00:35:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 40 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 7, redundant 12
Fitness: max 0.98(42), min 0.706(1), ave 0.96
Test execution time: sum 7365 ms, max 573 ms, min 70 ms
----------------------------------------------------------------

2023-10-23 00:35:16 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-10-23 00:35:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 59 seconds
Variants: generated 100, build-succeeded 46, build-failed 28, syntax-invalid 6, redundant 20
Fitness: max 0.98(41), min 0.549(2), ave 0.952
Test execution time: sum 7220 ms, max 610 ms, min 73 ms
----------------------------------------------------------------

2023-10-23 00:35:34 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-10-23 00:35:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 15 seconds
Variants: generated 100, build-succeeded 44, build-failed 29, syntax-invalid 9, redundant 18
Fitness: max 0.98(40), min 0.765(1), ave 0.97
Test execution time: sum 6687 ms, max 370 ms, min 71 ms
----------------------------------------------------------------

2023-10-23 00:35:51 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-10-23 00:36:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 35 seconds
Variants: generated 100, build-succeeded 54, build-failed 21, syntax-invalid 8, redundant 17
Fitness: max 0.98(43), min 0.588(1), ave 0.95
Test execution time: sum 8179 ms, max 436 ms, min 58 ms
----------------------------------------------------------------

2023-10-23 00:36:11 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-10-23 00:36:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 55 seconds
Variants: generated 100, build-succeeded 44, build-failed 26, syntax-invalid 10, redundant 20
Fitness: max 1(1), min 0.49(1), ave 0.959
Test execution time: sum 8626 ms, max 749 ms, min 53 ms
----------------------------------------------------------------

2023-10-23 00:36:30 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-10-23 00:36:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 7, redundant 11
Fitness: max 0.98(44), min 0.824(1), ave 0.973
Test execution time: sum 9061 ms, max 427 ms, min 81 ms
----------------------------------------------------------------

2023-10-23 00:36:53 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-10-23 00:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 42 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 16, redundant 10
Fitness: max 1(1), min 0.549(1), ave 0.953
Test execution time: sum 11158 ms, max 1013 ms, min 79 ms
----------------------------------------------------------------

2023-10-23 00:37:17 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-10-23 00:37:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 15 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 7, redundant 15
Fitness: max 0.98(38), min 0.549(2), ave 0.946
Test execution time: sum 15693 ms, max 2251 ms, min 83 ms
----------------------------------------------------------------

2023-10-23 00:37:51 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-10-23 00:38:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 46 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 10, redundant 15
Fitness: max 0.98(39), min 0.255(1), ave 0.935
Test execution time: sum 13320 ms, max 1076 ms, min 54 ms
----------------------------------------------------------------

2023-10-23 00:38:22 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-10-23 00:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 14 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 15, redundant 12
Fitness: max 0.98(36), min 0.725(1), ave 0.956
Test execution time: sum 12537 ms, max 1139 ms, min 94 ms
----------------------------------------------------------------

2023-10-23 00:38:50 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-10-23 00:39:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 6, redundant 14
Fitness: max 0.98(41), min 0.216(1), ave 0.943
Test execution time: sum 17667 ms, max 1549 ms, min 79 ms
----------------------------------------------------------------

2023-10-23 00:39:28 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-10-23 00:40:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 26 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 7, redundant 15
Fitness: max 0.98(36), min 0.49(1), ave 0.947
Test execution time: sum 15283 ms, max 1849 ms, min 117 ms
----------------------------------------------------------------

2023-10-23 00:40:02 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-10-23 00:40:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 11, redundant 14
Fitness: max 0.98(38), min 0.353(1), ave 0.94
Test execution time: sum 15873 ms, max 2107 ms, min 82 ms
----------------------------------------------------------------

2023-10-23 00:40:37 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-10-23 00:41:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 48 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 1, redundant 21
Fitness: max 0.98(44), min 0.765(1), ave 0.967
Test execution time: sum 19279 ms, max 1361 ms, min 123 ms
----------------------------------------------------------------

2023-10-23 00:41:24 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-10-23 00:42:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 7, redundant 12
Fitness: max 0.98(46), min 0.843(1), ave 0.972
Test execution time: sum 18698 ms, max 1054 ms, min 103 ms
----------------------------------------------------------------

2023-10-23 00:42:04 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-10-23 00:42:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 54 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 5, redundant 16
Fitness: max 0.98(41), min 0.49(1), ave 0.957
Test execution time: sum 11655 ms, max 1108 ms, min 108 ms
----------------------------------------------------------------

2023-10-23 00:42:30 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-10-23 00:42:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 23 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 10, redundant 11
Fitness: max 0.98(41), min 0.765(1), ave 0.973
Test execution time: sum 12830 ms, max 1216 ms, min 107 ms
----------------------------------------------------------------

2023-10-23 00:42:59 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-10-23 00:43:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 53 seconds
Variants: generated 100, build-succeeded 44, build-failed 29, syntax-invalid 14, redundant 13
Fitness: max 0.98(37), min 0.353(1), ave 0.951
Test execution time: sum 13461 ms, max 1890 ms, min 56 ms
----------------------------------------------------------------

2023-10-23 00:43:29 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-10-23 00:44:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 29 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 7, redundant 15
Fitness: max 0.98(39), min 0.49(1), ave 0.958
Test execution time: sum 16463 ms, max 3413 ms, min 113 ms
----------------------------------------------------------------

2023-10-23 00:44:05 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-10-23 00:44:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 5 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 12, redundant 9
Fitness: max 0.98(43), min 0.333(1), ave 0.946
Test execution time: sum 16204 ms, max 1863 ms, min 51 ms
----------------------------------------------------------------

2023-10-23 00:44:41 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-10-23 00:45:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 46 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 15, redundant 10
Fitness: max 0.98(38), min 0.471(2), ave 0.932
Test execution time: sum 21365 ms, max 3464 ms, min 76 ms
----------------------------------------------------------------

2023-10-23 00:45:22 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-10-23 00:46:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 33 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 11, redundant 9
Fitness: max 0.98(36), min 0.765(1), ave 0.96
Test execution time: sum 23789 ms, max 3397 ms, min 116 ms
----------------------------------------------------------------

2023-10-23 00:46:09 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-10-23 00:46:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 15 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 9, redundant 13
Fitness: max 0.98(41), min 0.765(1), ave 0.972
Test execution time: sum 22390 ms, max 3640 ms, min 112 ms
----------------------------------------------------------------

2023-10-23 00:46:51 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-10-23 00:47:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 7, redundant 11
Fitness: max 0.98(41), min 0.49(1), ave 0.947
Test execution time: sum 30561 ms, max 3536 ms, min 95 ms
----------------------------------------------------------------

2023-10-23 00:47:45 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-10-23 00:48:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 12, redundant 8
Fitness: max 0.98(41), min 0.49(1), ave 0.937
Test execution time: sum 39909 ms, max 6586 ms, min 77 ms
----------------------------------------------------------------

2023-10-23 00:48:49 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-10-23 00:49:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 7 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 10, redundant 12
Fitness: max 0.98(39), min 0.843(2), ave 0.963
Test execution time: sum 28776 ms, max 3435 ms, min 113 ms
----------------------------------------------------------------

2023-10-23 00:49:43 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-10-23 00:50:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 12, redundant 9
Fitness: max 0.98(35), min 0.471(1), ave 0.925
Test execution time: sum 27168 ms, max 3490 ms, min 68 ms
----------------------------------------------------------------

2023-10-23 00:50:32 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-10-23 00:51:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 17, redundant 8
Fitness: max 0.98(38), min 0.235(1), ave 0.94
Test execution time: sum 22324 ms, max 1199 ms, min 79 ms
----------------------------------------------------------------

2023-10-23 00:51:16 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-10-23 00:52:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 36 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 6, redundant 15
Fitness: max 0.98(39), min 0.353(1), ave 0.945
Test execution time: sum 32019 ms, max 3443 ms, min 87 ms
----------------------------------------------------------------

2023-10-23 00:52:12 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-10-23 00:53:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 26 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 13, redundant 16
Fitness: max 0.98(36), min 0.549(2), ave 0.931
Test execution time: sum 26803 ms, max 3472 ms, min 96 ms
----------------------------------------------------------------

2023-10-23 00:53:01 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-10-23 00:54:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 25 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 7, redundant 19
Fitness: max 1(1), min 0.49(1), ave 0.957
Test execution time: sum 36356 ms, max 6523 ms, min 61 ms
----------------------------------------------------------------

2023-10-23 00:54:01 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-10-23 00:55:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 3, redundant 18
Fitness: max 0.98(42), min 0.549(2), ave 0.954
Test execution time: sum 41496 ms, max 2107 ms, min 125 ms
----------------------------------------------------------------

2023-10-23 00:55:10 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-10-23 00:55:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 24 seconds
Variants: generated 100, build-succeeded 47, build-failed 24, syntax-invalid 8, redundant 21
Fitness: max 0.98(36), min 0.49(2), ave 0.932
Test execution time: sum 27772 ms, max 1899 ms, min 79 ms
----------------------------------------------------------------

2023-10-23 00:55:59 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-10-23 00:56:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 14 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 5, redundant 18
Fitness: max 0.98(42), min 0.902(3), ave 0.975
Test execution time: sum 25433 ms, max 1891 ms, min 173 ms
----------------------------------------------------------------

2023-10-23 00:56:50 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-10-23 00:57:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 4 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 13, redundant 14
Fitness: max 0.98(35), min 0.549(1), ave 0.947
Test execution time: sum 29282 ms, max 3425 ms, min 97 ms
----------------------------------------------------------------

2023-10-23 00:57:40 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-10-23 00:58:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 54 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 11, redundant 14
Fitness: max 1(1), min 0.843(1), ave 0.969
Test execution time: sum 25770 ms, max 3480 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 00:58:30 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-10-23 00:59:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 42 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 9, redundant 15
Fitness: max 0.98(37), min 0.49(1), ave 0.945
Test execution time: sum 25107 ms, max 3557 ms, min 82 ms
----------------------------------------------------------------

2023-10-23 00:59:18 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-10-23 01:00:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 11, redundant 9
Fitness: max 1(1), min 0.569(1), ave 0.959
Test execution time: sum 25761 ms, max 3371 ms, min 88 ms
----------------------------------------------------------------

2023-10-23 01:00:10 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-10-23 01:01:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 9, redundant 8
Fitness: max 0.98(44), min 0.549(1), ave 0.957
Test execution time: sum 32410 ms, max 3462 ms, min 84 ms
----------------------------------------------------------------

2023-10-23 01:01:08 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-10-23 01:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 7 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 12, redundant 14
Fitness: max 0.98(38), min 0.549(1), ave 0.955
Test execution time: sum 15593 ms, max 1855 ms, min 90 ms
----------------------------------------------------------------

2023-10-23 01:01:42 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-10-23 01:02:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 59 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 4, redundant 12
Fitness: max 0.98(50), min 0.353(1), ave 0.955
Test execution time: sum 27540 ms, max 3413 ms, min 89 ms
----------------------------------------------------------------

2023-10-23 01:02:35 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-10-23 01:03:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 47 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 9, redundant 15
Fitness: max 0.98(46), min 0.353(1), ave 0.95
Test execution time: sum 25237 ms, max 3597 ms, min 73 ms
----------------------------------------------------------------

2023-10-23 01:03:23 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-10-23 01:04:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 25 seconds
Variants: generated 100, build-succeeded 48, build-failed 21, syntax-invalid 18, redundant 13
Fitness: max 0.98(38), min 0.235(1), ave 0.917
Test execution time: sum 15609 ms, max 1065 ms, min 72 ms
----------------------------------------------------------------

2023-10-23 01:04:01 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-10-23 01:04:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 5 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 11, redundant 11
Fitness: max 1(1), min 0.784(1), ave 0.969
Test execution time: sum 17591 ms, max 1036 ms, min 106 ms
----------------------------------------------------------------

2023-10-23 01:04:41 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-10-23 01:05:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 11, redundant 8
Fitness: max 0.98(51), min 0.745(1), ave 0.969
Test execution time: sum 23097 ms, max 1838 ms, min 125 ms
----------------------------------------------------------------

2023-10-23 01:05:33 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-10-23 01:06:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 10, redundant 9
Fitness: max 0.98(48), min 0.216(1), ave 0.948
Test execution time: sum 27005 ms, max 3333 ms, min 77 ms
----------------------------------------------------------------

2023-10-23 01:06:26 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-10-23 01:07:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0.49(1), ave 0.955
Test execution time: sum 33766 ms, max 3854 ms, min 95 ms
----------------------------------------------------------------

2023-10-23 01:07:26 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-10-23 01:08:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 2 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 12, redundant 6
Fitness: max 0.98(50), min 0.902(2), ave 0.977
Test execution time: sum 43098 ms, max 3524 ms, min 106 ms
----------------------------------------------------------------

2023-10-23 01:08:38 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-10-23 01:09:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 10 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 9, redundant 11
Fitness: max 0.98(46), min 0.902(8), ave 0.967
Test execution time: sum 38518 ms, max 4333 ms, min 155 ms
----------------------------------------------------------------

2023-10-23 01:09:46 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-10-23 01:11:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 9, redundant 12
Fitness: max 0.98(40), min 0.569(1), ave 0.952
Test execution time: sum 46714 ms, max 6410 ms, min 141 ms
----------------------------------------------------------------

2023-10-23 01:11:00 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-10-23 01:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 24 seconds
Variants: generated 100, build-succeeded 39, build-failed 35, syntax-invalid 18, redundant 8
Fitness: max 0.98(33), min 0.588(1), ave 0.96
Test execution time: sum 37067 ms, max 3466 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 01:12:00 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-10-23 01:13:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 37 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 14, redundant 10
Fitness: max 0.98(38), min 0.49(1), ave 0.933
Test execution time: sum 46400 ms, max 6590 ms, min 97 ms
----------------------------------------------------------------

2023-10-23 01:13:13 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-10-23 01:14:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 52 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 14, redundant 7
Fitness: max 0.98(39), min 0.569(1), ave 0.947
Test execution time: sum 47478 ms, max 6475 ms, min 136 ms
----------------------------------------------------------------

2023-10-23 01:14:28 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-10-23 01:15:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 7, redundant 10
Fitness: max 0.98(49), min 0.49(1), ave 0.962
Test execution time: sum 55001 ms, max 6593 ms, min 106 ms
----------------------------------------------------------------

2023-10-23 01:15:51 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-10-23 01:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 0.98(44), min 0.49(1), ave 0.959
Test execution time: sum 107951 ms, max 24826 ms, min 112 ms
----------------------------------------------------------------

2023-10-23 01:18:08 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-10-23 01:20:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 42 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 13, redundant 14
Fitness: max 1(1), min 0.49(1), ave 0.948
Test execution time: sum 102453 ms, max 25139 ms, min 84 ms
----------------------------------------------------------------

2023-10-23 01:20:18 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-10-23 01:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 2 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 8, redundant 10
Fitness: max 0.98(46), min 0.863(2), ave 0.967
Test execution time: sum 169356 ms, max 99988 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 01:23:37 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-10-23 01:25:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 40 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 13, redundant 7
Fitness: max 0.98(39), min 0.843(2), ave 0.963
Test execution time: sum 71632 ms, max 13159 ms, min 141 ms
----------------------------------------------------------------

2023-10-23 01:25:16 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-10-23 01:27:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 30 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 12, redundant 6
Fitness: max 0.98(40), min 0.49(2), ave 0.947
Test execution time: sum 80404 ms, max 12689 ms, min 96 ms
----------------------------------------------------------------

2023-10-23 01:27:06 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-10-23 01:28:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 16 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 5, redundant 9
Fitness: max 0.98(46), min 0.49(2), ave 0.948
Test execution time: sum 74538 ms, max 13079 ms, min 124 ms
----------------------------------------------------------------

2023-10-23 01:28:52 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-10-23 01:30:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 41 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 7, redundant 14
Fitness: max 0.98(42), min 0.863(2), ave 0.97
Test execution time: sum 56492 ms, max 6460 ms, min 142 ms
----------------------------------------------------------------

2023-10-23 01:30:17 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-10-23 01:32:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 6, redundant 9
Fitness: max 1(1), min 0.902(1), ave 0.979
Test execution time: sum 106285 ms, max 12630 ms, min 217 ms
----------------------------------------------------------------

2023-10-23 01:32:35 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-10-23 01:34:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 17 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 11, redundant 8
Fitness: max 0.98(47), min 0.49(1), ave 0.958
Test execution time: sum 108309 ms, max 24621 ms, min 127 ms
----------------------------------------------------------------

2023-10-23 01:34:53 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-10-23 01:36:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 8, redundant 7
Fitness: max 0.98(48), min 0.49(1), ave 0.96
Test execution time: sum 61795 ms, max 7603 ms, min 117 ms
----------------------------------------------------------------

2023-10-23 01:36:27 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-10-23 01:37:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 12, redundant 5
Fitness: max 0.98(49), min 0.49(1), ave 0.966
Test execution time: sum 61709 ms, max 6404 ms, min 108 ms
----------------------------------------------------------------

2023-10-23 01:37:57 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-10-23 01:39:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0.98(49), min 0.863(4), ave 0.968
Test execution time: sum 66494 ms, max 12584 ms, min 127 ms
----------------------------------------------------------------

2023-10-23 01:39:37 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-10-23 01:41:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 11, redundant 7
Fitness: max 0.98(48), min 0.843(1), ave 0.97
Test execution time: sum 62400 ms, max 6520 ms, min 135 ms
----------------------------------------------------------------

2023-10-23 01:41:08 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-10-23 01:43:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 48 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0.98(46), min 0.49(1), ave 0.954
Test execution time: sum 103849 ms, max 12788 ms, min 121 ms
----------------------------------------------------------------

2023-10-23 01:43:24 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-10-23 01:46:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 11, redundant 11
Fitness: max 0.98(47), min 0.49(1), ave 0.956
Test execution time: sum 170333 ms, max 25343 ms, min 126 ms
----------------------------------------------------------------

2023-10-23 01:46:46 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-10-23 01:50:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 20 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 12, redundant 11
Fitness: max 0.98(47), min 0.431(1), ave 0.958
Test execution time: sum 216267 ms, max 52338 ms, min 188 ms
----------------------------------------------------------------

2023-10-23 01:50:56 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-10-23 01:54:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 52 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 4, redundant 13
Fitness: max 0.98(42), min 0.275(1), ave 0.943
Test execution time: sum 178899 ms, max 25307 ms, min 181 ms
----------------------------------------------------------------

2023-10-23 01:54:28 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-10-23 01:58:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 39 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 7, redundant 14
Fitness: max 0.98(41), min 0.725(1), ave 0.965
Test execution time: sum 195628 ms, max 25251 ms, min 270 ms
----------------------------------------------------------------

2023-10-23 01:58:15 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-10-23 02:01:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 15 seconds
Variants: generated 100, build-succeeded 47, build-failed 21, syntax-invalid 14, redundant 18
Fitness: max 0.98(41), min 0.235(1), ave 0.943
Test execution time: sum 184417 ms, max 50856 ms, min 92 ms
----------------------------------------------------------------

2023-10-23 02:01:50 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-10-23 02:06:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 42 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 9, redundant 6
Fitness: max 0.98(45), min 0.49(2), ave 0.943
Test execution time: sum 231711 ms, max 51058 ms, min 107 ms
----------------------------------------------------------------

2023-10-23 02:06:18 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-10-23 02:09:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 47 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0.49(2), ave 0.96
Test execution time: sum 148329 ms, max 25600 ms, min 84 ms
----------------------------------------------------------------

2023-10-23 02:09:23 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-10-23 02:15:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 24 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 8, redundant 8
Fitness: max 0.98(49), min 0.49(1), ave 0.961
Test execution time: sum 301890 ms, max 100590 ms, min 143 ms
----------------------------------------------------------------

2023-10-23 02:15:00 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-10-23 02:23:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 33 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 11, redundant 7
Fitness: max 0.98(46), min 0.49(1), ave 0.949
Test execution time: sum 453742 ms, max 101223 ms, min 109 ms
----------------------------------------------------------------

2023-10-23 02:23:09 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-10-23 02:26:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 27 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 13, redundant 12
Fitness: max 0.98(43), min 0.49(1), ave 0.956
Test execution time: sum 141568 ms, max 50611 ms, min 91 ms
----------------------------------------------------------------

2023-10-23 02:26:03 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-10-23 02:29:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 6 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.98(46), min 0.549(1), ave 0.958
Test execution time: sum 184053 ms, max 50990 ms, min 120 ms
----------------------------------------------------------------

2023-10-23 02:29:42 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-10-23 02:34:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 22, syntax-invalid 11, redundant 12
Fitness: max 0.98(45), min 0.49(1), ave 0.955
Test execution time: sum 231460 ms, max 50040 ms, min 146 ms
----------------------------------------------------------------

2023-10-23 02:34:08 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-10-23 02:39:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 54 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 8, redundant 6
Fitness: max 0.98(47), min 0.353(1), ave 0.954
Test execution time: sum 284987 ms, max 49610 ms, min 116 ms
----------------------------------------------------------------

2023-10-23 02:39:29 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-10-23 02:43:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 36 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 16, redundant 9
Fitness: max 0.98(39), min 0.765(1), ave 0.967
Test execution time: sum 195513 ms, max 100265 ms, min 132 ms
----------------------------------------------------------------

2023-10-23 02:43:12 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-10-23 02:45:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 19, redundant 6
Fitness: max 0.98(43), min 0.49(1), ave 0.957
Test execution time: sum 123282 ms, max 13194 ms, min 136 ms
----------------------------------------------------------------

2023-10-23 02:45:46 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-10-23 02:48:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 10, redundant 7
Fitness: max 0.98(39), min 0.549(1), ave 0.948
Test execution time: sum 119091 ms, max 12677 ms, min 142 ms
----------------------------------------------------------------

2023-10-23 02:48:22 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-10-23 02:53:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 13, redundant 10
Fitness: max 0.98(49), min 0.843(2), ave 0.971
Test execution time: sum 273959 ms, max 100050 ms, min 141 ms
----------------------------------------------------------------

2023-10-23 02:53:29 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-10-23 02:57:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 35 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 14, redundant 11
Fitness: max 0.98(36), min 0.49(1), ave 0.949
Test execution time: sum 191325 ms, max 51105 ms, min 175 ms
----------------------------------------------------------------

2023-10-23 02:57:11 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-10-23 03:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 12 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 9, redundant 8
Fitness: max 0.98(48), min 0.902(5), ave 0.973
Test execution time: sum 181908 ms, max 25713 ms, min 122 ms
----------------------------------------------------------------

2023-10-23 03:00:48 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-10-23 03:03:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 12 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 13, redundant 6
Fitness: max 0.98(44), min 0.49(2), ave 0.956
Test execution time: sum 147243 ms, max 24831 ms, min 111 ms
----------------------------------------------------------------

2023-10-23 03:03:48 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-10-23 03:07:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 48 seconds
Variants: generated 100, build-succeeded 66, build-failed 21, syntax-invalid 7, redundant 6
Fitness: max 0.98(51), min 0.49(1), ave 0.941
Test execution time: sum 173411 ms, max 13241 ms, min 139 ms
----------------------------------------------------------------

2023-10-23 03:07:24 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-10-23 03:13:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 50 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 9, redundant 14
Fitness: max 0.98(43), min 0.471(1), ave 0.96
Test execution time: sum 328783 ms, max 195337 ms, min 179 ms
----------------------------------------------------------------

2023-10-23 03:13:26 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-10-23 03:16:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 20 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 9, redundant 13
Fitness: max 0.98(46), min 0.745(1), ave 0.968
Test execution time: sum 176593 ms, max 25918 ms, min 109 ms
----------------------------------------------------------------

2023-10-23 03:16:56 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-10-23 03:19:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 15, redundant 13
Fitness: max 0.98(42), min 0.49(1), ave 0.962
Test execution time: sum 102179 ms, max 12758 ms, min 90 ms
----------------------------------------------------------------

2023-10-23 03:19:10 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-10-23 03:20:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 22 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 11, redundant 8
Fitness: max 0.98(42), min 0.216(1), ave 0.937
Test execution time: sum 78018 ms, max 12744 ms, min 72 ms
----------------------------------------------------------------

2023-10-23 03:20:58 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-10-23 03:24:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 1 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 4, redundant 7
Fitness: max 0.98(57), min 0.588(1), ave 0.969
Test execution time: sum 179837 ms, max 25307 ms, min 130 ms
----------------------------------------------------------------

2023-10-23 03:24:36 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-10-23 03:27:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 28 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 7, redundant 6
Fitness: max 0.98(49), min 0.549(1), ave 0.962
Test execution time: sum 112238 ms, max 12968 ms, min 196 ms
----------------------------------------------------------------

2023-10-23 03:27:04 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-10-23 03:29:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 54 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 5, redundant 8
Fitness: max 0.98(57), min 0.157(1), ave 0.953
Test execution time: sum 109367 ms, max 26828 ms, min 82 ms
----------------------------------------------------------------

2023-10-23 03:29:30 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-10-23 03:31:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 31 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0.98(49), min 0.49(1), ave 0.951
Test execution time: sum 63451 ms, max 6607 ms, min 155 ms
----------------------------------------------------------------

2023-10-23 03:31:07 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-10-23 03:32:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 3 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 5, redundant 9
Fitness: max 0.98(51), min 0.843(1), ave 0.973
Test execution time: sum 59686 ms, max 6590 ms, min 101 ms
----------------------------------------------------------------

2023-10-23 03:32:39 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-10-23 03:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 27 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 9, redundant 7
Fitness: max 0.98(52), min 0.529(2), ave 0.955
Test execution time: sum 108091 ms, max 12890 ms, min 141 ms
----------------------------------------------------------------

2023-10-23 03:35:03 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-10-23 03:37:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 32 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 9, redundant 7
Fitness: max 0.98(49), min 0.549(1), ave 0.965
Test execution time: sum 90949 ms, max 12844 ms, min 131 ms
----------------------------------------------------------------

2023-10-23 03:37:08 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-10-23 03:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 27 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 12, redundant 9
Fitness: max 0.98(44), min 0.863(1), ave 0.971
Test execution time: sum 81840 ms, max 8970 ms, min 151 ms
----------------------------------------------------------------

2023-10-23 03:39:03 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-10-23 03:41:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 10 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 13, redundant 7
Fitness: max 0.98(39), min 0.49(1), ave 0.955
Test execution time: sum 129817 ms, max 50848 ms, min 206 ms
----------------------------------------------------------------

2023-10-23 03:41:46 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-10-23 03:44:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 59 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 5, redundant 7
Fitness: max 0.98(51), min 0.49(1), ave 0.961
Test execution time: sum 128451 ms, max 12721 ms, min 121 ms
----------------------------------------------------------------

2023-10-23 03:44:35 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-10-23 03:47:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 45 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 6, redundant 6
Fitness: max 0.98(55), min 0.49(1), ave 0.962
Test execution time: sum 132421 ms, max 26454 ms, min 98 ms
----------------------------------------------------------------

2023-10-23 03:47:21 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-10-23 03:50:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 49 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 4, redundant 10
Fitness: max 0.98(52), min 0.765(1), ave 0.968
Test execution time: sum 150483 ms, max 25394 ms, min 126 ms
----------------------------------------------------------------

2023-10-23 03:50:25 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-10-23 03:53:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 30 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 17, redundant 7
Fitness: max 0.98(40), min 0.49(1), ave 0.944
Test execution time: sum 129815 ms, max 25340 ms, min 105 ms
----------------------------------------------------------------

2023-10-23 03:53:06 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-10-23 03:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 19, redundant 4
Fitness: max 0.98(47), min 0.725(1), ave 0.971
Test execution time: sum 299315 ms, max 50225 ms, min 123 ms
----------------------------------------------------------------

2023-10-23 03:58:41 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-10-23 04:05:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 39 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 9, redundant 8
Fitness: max 1(1), min 0.549(1), ave 0.965
Test execution time: sum 353218 ms, max 53003 ms, min 162 ms
----------------------------------------------------------------

2023-10-23 04:05:15 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-10-23 04:10:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 48 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 13, redundant 3
Fitness: max 0.98(47), min 0.549(1), ave 0.966
Test execution time: sum 272635 ms, max 50258 ms, min 151 ms
----------------------------------------------------------------

2023-10-23 04:10:24 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-10-23 04:17:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 11, redundant 5
Fitness: max 0.98(50), min 0.725(1), ave 0.971
Test execution time: sum 405742 ms, max 99857 ms, min 427 ms
----------------------------------------------------------------

2023-10-23 04:17:50 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-10-23 04:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 13 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 12, redundant 6
Fitness: max 0.98(46), min 0.275(1), ave 0.959
Test execution time: sum 620707 ms, max 196948 ms, min 307 ms
----------------------------------------------------------------

2023-10-23 04:28:49 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-10-23 04:37:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 4 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 18, redundant 5
Fitness: max 0.98(41), min 0.667(1), ave 0.958
Test execution time: sum 495042 ms, max 100977 ms, min 215 ms
----------------------------------------------------------------

2023-10-23 04:37:40 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-10-23 04:47:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 2 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 0.98(51), min 0.471(1), ave 0.944
Test execution time: sum 558045 ms, max 100859 ms, min 121 ms
----------------------------------------------------------------

2023-10-23 04:47:38 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-10-23 04:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 12, redundant 5
Fitness: max 0.98(51), min 0.765(2), ave 0.967
Test execution time: sum 390571 ms, max 51425 ms, min 213 ms
----------------------------------------------------------------

2023-10-23 04:54:51 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-10-23 05:09:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 59 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 12, redundant 9
Fitness: max 0.98(45), min 0.843(1), ave 0.972
Test execution time: sum 842788 ms, max 195511 ms, min 173 ms
----------------------------------------------------------------

2023-10-23 05:09:35 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-10-23 05:19:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 6 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0.98(46), min 0.667(1), ave 0.963
Test execution time: sum 561200 ms, max 196153 ms, min 202 ms
----------------------------------------------------------------

2023-10-23 05:19:42 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-10-23 05:32:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 5, redundant 6
Fitness: max 0.98(51), min 0.765(1), ave 0.971
Test execution time: sum 697769 ms, max 194665 ms, min 200 ms
----------------------------------------------------------------

2023-10-23 05:32:06 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-10-23 05:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 48 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 12, redundant 7
Fitness: max 0.98(49), min 0.49(1), ave 0.96
Test execution time: sum 573334 ms, max 195579 ms, min 208 ms
----------------------------------------------------------------

2023-10-23 05:42:24 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-10-23 05:51:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 33 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 8, redundant 7
Fitness: max 0.98(56), min 0.353(1), ave 0.957
Test execution time: sum 478757 ms, max 100424 ms, min 181 ms
----------------------------------------------------------------

2023-10-23 05:51:09 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-10-23 05:57:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 14 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 7, redundant 11
Fitness: max 0.98(53), min 0.549(1), ave 0.971
Test execution time: sum 359284 ms, max 49825 ms, min 146 ms
----------------------------------------------------------------

2023-10-23 05:57:50 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-10-23 06:07:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 7, redundant 6
Fitness: max 0.98(46), min 0.588(1), ave 0.959
Test execution time: sum 553878 ms, max 195876 ms, min 155 ms
----------------------------------------------------------------

2023-10-23 06:07:47 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-10-23 06:11:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 6 seconds
Variants: generated 100, build-succeeded 44, build-failed 40, syntax-invalid 8, redundant 8
Fitness: max 0.98(41), min 0.725(1), ave 0.968
Test execution time: sum 202431 ms, max 25206 ms, min 186 ms
----------------------------------------------------------------

2023-10-23 06:11:42 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-10-23 06:17:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 9, redundant 5
Fitness: max 0.98(52), min 0.765(2), ave 0.968
Test execution time: sum 278149 ms, max 51525 ms, min 278 ms
----------------------------------------------------------------

2023-10-23 06:17:02 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-10-23 06:23:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.608(1), ave 0.96
Test execution time: sum 339035 ms, max 100329 ms, min 131 ms
----------------------------------------------------------------

2023-10-23 06:23:22 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-10-23 06:30:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 14, redundant 6
Fitness: max 0.98(45), min 0.49(1), ave 0.958
Test execution time: sum 391631 ms, max 50092 ms, min 111 ms
----------------------------------------------------------------

2023-10-23 06:30:33 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-10-23 06:34:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 0.98(51), min 0.843(1), ave 0.972
Test execution time: sum 205127 ms, max 25062 ms, min 299 ms
----------------------------------------------------------------

2023-10-23 06:34:40 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-10-23 06:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 13, redundant 5
Fitness: max 0.98(49), min 0.843(3), ave 0.968
Test execution time: sum 298929 ms, max 51631 ms, min 282 ms
----------------------------------------------------------------

2023-10-23 06:40:22 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-10-23 06:49:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 9, redundant 6
Fitness: max 0.98(45), min 0.275(1), ave 0.95
Test execution time: sum 522330 ms, max 195384 ms, min 283 ms
----------------------------------------------------------------

2023-10-23 06:49:47 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-10-23 07:00:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 8, redundant 6
Fitness: max 0.98(51), min 0.333(1), ave 0.957
Test execution time: sum 590230 ms, max 195589 ms, min 86 ms
----------------------------------------------------------------

2023-10-23 07:00:21 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-10-23 07:06:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 35 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 13, redundant 7
Fitness: max 0.98(47), min 0.137(1), ave 0.947
Test execution time: sum 310441 ms, max 101875 ms, min 90 ms
----------------------------------------------------------------

2023-10-23 07:06:11 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-10-23 07:11:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 43 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 16, redundant 4
Fitness: max 0.98(40), min 0.275(1), ave 0.949
Test execution time: sum 270677 ms, max 101171 ms, min 153 ms
----------------------------------------------------------------

2023-10-23 07:11:19 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-10-23 07:19:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 25 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 16, redundant 3
Fitness: max 0.98(51), min 0.765(1), ave 0.969
Test execution time: sum 423021 ms, max 90314 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 07:19:01 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-10-23 07:34:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 6 minutes 27 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0.49(1), ave 0.964
Test execution time: sum 861227 ms, max 196660 ms, min 136 ms
----------------------------------------------------------------

2023-10-23 07:34:03 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-10-23 07:46:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0.98(45), min 0.686(1), ave 0.968
Test execution time: sum 722597 ms, max 196006 ms, min 149 ms
----------------------------------------------------------------

2023-10-23 07:46:46 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-10-23 07:56:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 10 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 18, redundant 9
Fitness: max 0.98(41), min 0.255(1), ave 0.949
Test execution time: sum 556526 ms, max 100496 ms, min 418 ms
----------------------------------------------------------------

2023-10-23 07:56:46 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-10-23 08:04:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 13 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 14, redundant 10
Fitness: max 1(1), min 0.863(1), ave 0.974
Test execution time: sum 440714 ms, max 99678 ms, min 432 ms
----------------------------------------------------------------

2023-10-23 08:04:49 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-10-23 08:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 0 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 15, redundant 6
Fitness: max 0.98(44), min 0.863(1), ave 0.972
Test execution time: sum 544662 ms, max 99316 ms, min 366 ms
----------------------------------------------------------------

2023-10-23 08:14:36 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-10-23 08:29:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 15, redundant 2
Fitness: max 0.98(42), min 0.471(1), ave 0.946
Test execution time: sum 851986 ms, max 60069 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 08:29:32 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-10-23 08:42:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 24 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 9, redundant 7
Fitness: max 0.98(52), min 0.49(1), ave 0.952
Test execution time: sum 700134 ms, max 98815 ms, min 336 ms
----------------------------------------------------------------

2023-10-23 08:42:00 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-10-23 08:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 0 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 12, redundant 5
Fitness: max 0.98(44), min 0.255(1), ave 0.96
Test execution time: sum 713916 ms, max 100373 ms, min 707 ms
----------------------------------------------------------------

2023-10-23 08:54:36 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-10-23 09:06:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 2 seconds
Variants: generated 100, build-succeeded 62, build-failed 21, syntax-invalid 9, redundant 8
Fitness: max 0.98(52), min 0.49(1), ave 0.951
Test execution time: sum 670066 ms, max 101953 ms, min 413 ms
----------------------------------------------------------------

2023-10-23 09:06:38 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-10-23 09:16:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 49 minutes 5 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 8, redundant 5
Fitness: max 0.98(52), min 0.843(1), ave 0.976
Test execution time: sum 557376 ms, max 51177 ms, min 158 ms
----------------------------------------------------------------

2023-10-23 09:16:41 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-10-23 09:32:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 14, redundant 5
Fitness: max 0.98(44), min 0.333(1), ave 0.96
Test execution time: sum 900727 ms, max 195157 ms, min 89 ms
----------------------------------------------------------------

2023-10-23 09:32:24 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-10-23 09:41:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 12, redundant 3
Fitness: max 0.98(45), min 0.255(1), ave 0.929
Test execution time: sum 511454 ms, max 50496 ms, min 146 ms
----------------------------------------------------------------

2023-10-23 09:41:41 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-10-23 09:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 54 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 12, redundant 8
Fitness: max 0.98(51), min 0.255(1), ave 0.958
Test execution time: sum 660485 ms, max 196974 ms, min 298 ms
----------------------------------------------------------------

2023-10-23 09:53:30 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-10-23 10:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 minutes 33 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 13, redundant 6
Fitness: max 0.98(45), min 0.49(1), ave 0.963
Test execution time: sum 1070975 ms, max 196532 ms, min 319 ms
----------------------------------------------------------------

2023-10-23 10:12:09 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-10-23 10:28:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 seconds
Variants: generated 100, build-succeeded 66, build-failed 20, syntax-invalid 8, redundant 6
Fitness: max 0.98(58), min 0.804(1), ave 0.97
Test execution time: sum 893719 ms, max 196226 ms, min 287 ms
----------------------------------------------------------------

2023-10-23 10:28:00 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-10-23 10:40:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 12 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 12, redundant 5
Fitness: max 0.98(53), min 0.275(2), ave 0.951
Test execution time: sum 697473 ms, max 100874 ms, min 366 ms
----------------------------------------------------------------

2023-10-23 10:40:30 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-10-23 10:55:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 27 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 13, redundant 11
Fitness: max 0.98(45), min 0.255(1), ave 0.957
Test execution time: sum 849032 ms, max 195973 ms, min 337 ms
----------------------------------------------------------------

2023-10-23 10:55:26 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-10-23 11:10:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 42 minutes 39 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 15, redundant 4
Fitness: max 0.98(43), min 0.902(2), ave 0.976
Test execution time: sum 848256 ms, max 196655 ms, min 415 ms
----------------------------------------------------------------

2023-10-23 11:10:15 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-10-23 11:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 54 minutes 17 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 10, redundant 1
Fitness: max 1(1), min 0.667(1), ave 0.962
Test execution time: sum 647437 ms, max 50659 ms, min 169 ms
----------------------------------------------------------------

2023-10-23 11:21:53 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-10-23 11:37:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0.98(49), min 0.902(1), ave 0.977
Test execution time: sum 904498 ms, max 195936 ms, min 290 ms
----------------------------------------------------------------

2023-10-23 11:37:42 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-10-23 11:53:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 9, redundant 9
Fitness: max 0.98(50), min 0.49(1), ave 0.962
Test execution time: sum 878723 ms, max 195904 ms, min 266 ms
----------------------------------------------------------------

2023-10-23 11:53:07 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-10-23 12:06:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 38 minutes 37 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 10, redundant 7
Fitness: max 0.98(43), min 0.843(2), ave 0.971
Test execution time: sum 744272 ms, max 194770 ms, min 420 ms
----------------------------------------------------------------

2023-10-23 12:06:13 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-10-23 12:13:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 13, redundant 5
Fitness: max 0.98(49), min 0.863(1), ave 0.975
Test execution time: sum 365687 ms, max 50849 ms, min 305 ms
----------------------------------------------------------------

2023-10-23 12:13:03 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-10-23 12:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 23, syntax-invalid 16, redundant 10
Fitness: max 0.98(44), min 0.431(1), ave 0.949
Test execution time: sum 454784 ms, max 101007 ms, min 217 ms
----------------------------------------------------------------

2023-10-23 12:21:15 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-10-23 12:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 59 minutes 38 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 17, redundant 8
Fitness: max 0.98(37), min 0.843(1), ave 0.971
Test execution time: sum 322813 ms, max 50253 ms, min 417 ms
----------------------------------------------------------------

2023-10-23 12:27:14 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-10-23 12:37:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 9 minutes 47 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 16, redundant 6
Fitness: max 0.98(41), min 0.255(1), ave 0.949
Test execution time: sum 569838 ms, max 100390 ms, min 394 ms
----------------------------------------------------------------

2023-10-23 12:37:23 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-10-23 12:43:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 16 minutes 16 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 14, redundant 6
Fitness: max 0.98(42), min 0.49(1), ave 0.949
Test execution time: sum 347353 ms, max 99633 ms, min 160 ms
----------------------------------------------------------------

2023-10-23 12:43:52 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-10-23 12:46:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 19 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 14, redundant 5
Fitness: max 0.98(40), min 0.333(1), ave 0.953
Test execution time: sum 136584 ms, max 25161 ms, min 116 ms
----------------------------------------------------------------

2023-10-23 12:46:43 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-10-23 12:50:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 6, redundant 7
Fitness: max 0.98(50), min 0.49(1), ave 0.96
Test execution time: sum 185776 ms, max 25328 ms, min 140 ms
----------------------------------------------------------------

2023-10-23 12:50:28 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-10-23 12:53:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 26 minutes 5 seconds
Variants: generated 100, build-succeeded 43, build-failed 41, syntax-invalid 11, redundant 5
Fitness: max 0.98(40), min 0.275(1), ave 0.952
Test execution time: sum 161646 ms, max 25372 ms, min 86 ms
----------------------------------------------------------------

2023-10-23 12:53:41 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-10-23 12:56:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 28 minutes 54 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 12, redundant 7
Fitness: max 0.98(47), min 0.961(1), ave 0.98
Test execution time: sum 134154 ms, max 25438 ms, min 191 ms
----------------------------------------------------------------

2023-10-23 12:56:30 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-10-23 12:58:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 31 minutes 16 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 9, redundant 7
Fitness: max 0.98(45), min 0.333(1), ave 0.949
Test execution time: sum 106734 ms, max 12987 ms, min 97 ms
----------------------------------------------------------------

2023-10-23 12:58:52 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-10-23 13:04:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 37 minutes 7 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 7, redundant 7
Fitness: max 0.98(52), min 0.588(1), ave 0.953
Test execution time: sum 309904 ms, max 99022 ms, min 169 ms
----------------------------------------------------------------

2023-10-23 13:04:43 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-10-23 13:08:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 40 minutes 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 14, redundant 5
Fitness: max 0.98(45), min 0.49(1), ave 0.96
Test execution time: sum 172788 ms, max 25509 ms, min 189 ms
----------------------------------------------------------------

2023-10-23 13:08:10 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-10-23 13:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 44 minutes 11 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 11, redundant 4
Fitness: max 0.98(43), min 0.549(1), ave 0.962
Test execution time: sum 181173 ms, max 50168 ms, min 174 ms
----------------------------------------------------------------

2023-10-23 13:11:47 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-10-23 13:14:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 46 minutes 44 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 16, redundant 5
Fitness: max 0.98(40), min 0.49(1), ave 0.946
Test execution time: sum 119748 ms, max 50306 ms, min 116 ms
----------------------------------------------------------------

2023-10-23 13:14:20 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-10-23 13:16:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 48 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 14, redundant 4
Fitness: max 0.98(46), min 0.49(1), ave 0.962
Test execution time: sum 89503 ms, max 10440 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 13:16:25 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-10-23 13:18:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 50 minutes 59 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 7, redundant 5
Fitness: max 0.98(48), min 0.49(2), ave 0.952
Test execution time: sum 93323 ms, max 25211 ms, min 133 ms
----------------------------------------------------------------

2023-10-23 13:18:35 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-10-23 13:21:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 54 minutes 8 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 8, redundant 5
Fitness: max 0.98(50), min 0.863(1), ave 0.973
Test execution time: sum 147956 ms, max 27078 ms, min 194 ms
----------------------------------------------------------------

2023-10-23 13:21:44 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-10-23 13:24:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 57 minutes 6 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 9, redundant 2
Fitness: max 0.98(50), min 0.49(2), ave 0.954
Test execution time: sum 136773 ms, max 25486 ms, min 156 ms
----------------------------------------------------------------

2023-10-23 13:24:42 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-10-23 13:28:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 44 seconds
Variants: generated 100, build-succeeded 50, build-failed 36, syntax-invalid 8, redundant 6
Fitness: max 0.98(46), min 0.765(1), ave 0.97
Test execution time: sum 180869 ms, max 25408 ms, min 205 ms
----------------------------------------------------------------

2023-10-23 13:28:20 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-10-23 13:33:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 5 minutes 50 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 8, redundant 8
Fitness: max 0.98(43), min 0.863(2), ave 0.967
Test execution time: sum 267743 ms, max 100147 ms, min 145 ms
----------------------------------------------------------------

2023-10-23 13:33:26 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-10-23 13:39:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 12 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0.765(1), ave 0.973
Test execution time: sum 345850 ms, max 99274 ms, min 136 ms
----------------------------------------------------------------

2023-10-23 13:39:54 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-10-23 13:46:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 19 minutes 2 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 6, redundant 6
Fitness: max 0.98(58), min 0.667(1), ave 0.971
Test execution time: sum 356411 ms, max 49973 ms, min 189 ms
----------------------------------------------------------------

2023-10-23 13:46:38 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-10-23 13:52:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 24 minutes 37 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 15, redundant 4
Fitness: max 0.98(50), min 0.549(1), ave 0.963
Test execution time: sum 291486 ms, max 50437 ms, min 189 ms
----------------------------------------------------------------

2023-10-23 13:52:13 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-10-23 13:59:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 31 minutes 38 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 11, redundant 7
Fitness: max 0.98(44), min 0.549(1), ave 0.953
Test execution time: sum 375405 ms, max 99264 ms, min 242 ms
----------------------------------------------------------------

2023-10-23 13:59:14 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-10-23 14:07:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 39 minutes 28 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 15, redundant 10
Fitness: max 0.98(43), min 0.863(2), ave 0.968
Test execution time: sum 428608 ms, max 194569 ms, min 229 ms
----------------------------------------------------------------

2023-10-23 14:07:04 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-10-23 14:12:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 44 minutes 49 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 4, redundant 4
Fitness: max 0.98(53), min 0.471(1), ave 0.955
Test execution time: sum 275540 ms, max 25546 ms, min 240 ms
----------------------------------------------------------------

2023-10-23 14:12:25 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-10-23 14:26:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 58 minutes 35 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 10, redundant 8
Fitness: max 0.98(50), min 0.549(1), ave 0.965
Test execution time: sum 780576 ms, max 194481 ms, min 218 ms
----------------------------------------------------------------

2023-10-23 14:26:11 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-10-23 14:30:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 3 minutes 6 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.686(1), ave 0.963
Test execution time: sum 228964 ms, max 25197 ms, min 261 ms
----------------------------------------------------------------

2023-10-23 14:30:42 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-10-23 14:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 8 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 9, redundant 9
Fitness: max 1(1), min 0.667(1), ave 0.965
Test execution time: sum 297999 ms, max 50986 ms, min 182 ms
----------------------------------------------------------------

2023-10-23 14:36:25 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-10-23 14:43:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 15 minutes 50 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 15, redundant 5
Fitness: max 0.98(44), min 0.275(1), ave 0.948
Test execution time: sum 378442 ms, max 49951 ms, min 330 ms
----------------------------------------------------------------

2023-10-23 14:43:26 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-10-23 14:51:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 23 minutes 52 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0.98(46), min 0.49(1), ave 0.959
Test execution time: sum 436355 ms, max 99482 ms, min 157 ms
----------------------------------------------------------------

2023-10-23 14:51:28 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-10-23 15:00:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 32 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 25, syntax-invalid 16, redundant 10
Fitness: max 0.98(42), min 0.588(1), ave 0.96
Test execution time: sum 478836 ms, max 99051 ms, min 220 ms
----------------------------------------------------------------

2023-10-23 15:00:06 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-10-23 15:13:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 45 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 11, redundant 1
Fitness: max 0.98(53), min 0.157(1), ave 0.955
Test execution time: sum 734621 ms, max 100224 ms, min 93 ms
----------------------------------------------------------------

2023-10-23 15:13:08 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-10-23 15:21:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 54 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 13, redundant 3
Fitness: max 0.98(45), min 0.275(1), ave 0.954
Test execution time: sum 472557 ms, max 99121 ms, min 160 ms
----------------------------------------------------------------

2023-10-23 15:21:43 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-10-23 15:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 4 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0.98(52), min 0.255(1), ave 0.95
Test execution time: sum 600932 ms, max 99016 ms, min 334 ms
----------------------------------------------------------------

2023-10-23 15:32:31 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-10-23 15:46:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 19 minutes 14 seconds
Variants: generated 100, build-succeeded 59, build-failed 22, syntax-invalid 12, redundant 7
Fitness: max 0.98(51), min 0.49(1), ave 0.963
Test execution time: sum 805873 ms, max 205057 ms, min 128 ms
----------------------------------------------------------------

2023-10-23 15:46:50 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-10-23 16:03:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 36 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 7, redundant 8
Fitness: max 0.98(55), min 0.275(1), ave 0.96
Test execution time: sum 957833 ms, max 198973 ms, min 296 ms
----------------------------------------------------------------

2023-10-23 16:03:46 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-10-23 16:24:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 57 minutes 18 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 5, redundant 5
Fitness: max 0.98(53), min 0.235(1), ave 0.951
Test execution time: sum 1215723 ms, max 195370 ms, min 107 ms
----------------------------------------------------------------

2023-10-23 16:24:54 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-10-23 16:37:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 9 minutes 48 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 12, redundant 6
Fitness: max 0.98(44), min 0.706(1), ave 0.96
Test execution time: sum 702045 ms, max 99474 ms, min 436 ms
----------------------------------------------------------------

2023-10-23 16:37:24 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-10-23 16:51:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 11, redundant 7
Fitness: max 0.98(48), min 0.588(1), ave 0.958
Test execution time: sum 782472 ms, max 100301 ms, min 176 ms
----------------------------------------------------------------

2023-10-23 16:51:16 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-10-23 17:06:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 38 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 3, redundant 5
Fitness: max 1(1), min 0.235(1), ave 0.938
Test execution time: sum 858013 ms, max 211747 ms, min 110 ms
----------------------------------------------------------------

2023-10-23 17:06:29 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-10-23 17:24:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 56 minutes 37 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 5, redundant 7
Fitness: max 0.98(54), min 0.275(1), ave 0.956
Test execution time: sum 1004137 ms, max 206230 ms, min 693 ms
----------------------------------------------------------------

2023-10-23 17:24:14 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-10-23 17:42:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 14 minutes 41 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 14, redundant 5
Fitness: max 0.98(46), min 0.275(2), ave 0.942
Test execution time: sum 1026675 ms, max 206879 ms, min 1113 ms
----------------------------------------------------------------

2023-10-23 17:42:17 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-10-23 17:56:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 28 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 38, syntax-invalid 8, redundant 3
Fitness: max 0.98(46), min 0.275(1), ave 0.957
Test execution time: sum 794048 ms, max 104905 ms, min 1136 ms
----------------------------------------------------------------

2023-10-23 17:56:24 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-10-23 18:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 50 minutes 47 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 4, redundant 5
Fitness: max 0.98(50), min 0.255(1), ave 0.943
Test execution time: sum 1260413 ms, max 198599 ms, min 539 ms
----------------------------------------------------------------

2023-10-23 18:18:23 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-10-23 18:37:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 10 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 8, redundant 3
Fitness: max 0.98(50), min 0.275(3), ave 0.935
Test execution time: sum 1115123 ms, max 195164 ms, min 708 ms
----------------------------------------------------------------

2023-10-23 18:37:55 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-10-23 19:04:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 36 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 5, redundant 5
Fitness: max 0.98(51), min 0.863(1), ave 0.975
Test execution time: sum 1517055 ms, max 196402 ms, min 315 ms
----------------------------------------------------------------

2023-10-23 19:04:06 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-10-23 19:16:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 48 minutes 33 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 9, redundant 3
Fitness: max 0.98(55), min 0.529(1), ave 0.966
Test execution time: sum 671646 ms, max 99579 ms, min 372 ms
----------------------------------------------------------------

2023-10-23 19:16:09 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-10-23 19:28:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 47 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 18, redundant 2
Fitness: max 0.98(46), min 0.549(1), ave 0.958
Test execution time: sum 686697 ms, max 196160 ms, min 161 ms
----------------------------------------------------------------

2023-10-23 19:28:23 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-10-23 19:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 11 minutes 21 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 11, redundant 3
Fitness: max 0.98(53), min 0.765(1), ave 0.968
Test execution time: sum 580962 ms, max 51300 ms, min 234 ms
----------------------------------------------------------------

2023-10-23 19:38:57 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-10-23 19:48:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 21 minutes 19 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 20, redundant 4
Fitness: max 0.98(44), min 0.667(1), ave 0.964
Test execution time: sum 552710 ms, max 102073 ms, min 220 ms
----------------------------------------------------------------

2023-10-23 19:48:55 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-10-23 20:07:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 39 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 12, redundant 6
Fitness: max 0.98(45), min 0.275(1), ave 0.955
Test execution time: sum 1061533 ms, max 195396 ms, min 319 ms
----------------------------------------------------------------

2023-10-23 20:07:26 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-10-23 20:18:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 50 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 14, redundant 2
Fitness: max 0.98(48), min 0.255(1), ave 0.945
Test execution time: sum 597176 ms, max 99811 ms, min 489 ms
----------------------------------------------------------------

2023-10-23 20:18:16 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-10-23 20:35:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 7 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 21, syntax-invalid 14, redundant 10
Fitness: max 0.98(43), min 0.765(2), ave 0.955
Test execution time: sum 976655 ms, max 196136 ms, min 309 ms
----------------------------------------------------------------

2023-10-23 20:35:23 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-10-23 20:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 15 minutes 18 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 19, redundant 7
Fitness: max 0.98(44), min 0.902(4), ave 0.974
Test execution time: sum 405817 ms, max 51739 ms, min 441 ms
----------------------------------------------------------------

2023-10-23 20:42:54 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-10-23 21:03:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 35 minutes 31 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 20, redundant 1
Fitness: max 0.98(40), min 0.275(1), ave 0.947
Test execution time: sum 1158093 ms, max 198098 ms, min 360 ms
----------------------------------------------------------------

2023-10-23 21:03:07 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-10-23 21:23:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 55 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 14, redundant 2
Fitness: max 0.98(48), min 0.275(1), ave 0.956
Test execution time: sum 1155551 ms, max 102336 ms, min 148 ms
----------------------------------------------------------------

2023-10-23 21:23:16 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-10-23 21:43:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 16 minutes 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 1(1), min 0.49(1), ave 0.956
Test execution time: sum 1182671 ms, max 101666 ms, min 421 ms
----------------------------------------------------------------

2023-10-23 21:43:50 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-10-23 22:04:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 36 minutes 45 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 9, redundant 3
Fitness: max 0.98(52), min 0.275(1), ave 0.946
Test execution time: sum 1175223 ms, max 194757 ms, min 431 ms
----------------------------------------------------------------

2023-10-23 22:04:21 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-10-23 22:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 51 minutes 52 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 16, redundant 4
Fitness: max 0.98(47), min 0.353(1), ave 0.954
Test execution time: sum 859762 ms, max 196186 ms, min 389 ms
----------------------------------------------------------------

2023-10-23 22:19:29 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-10-23 22:35:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 8 minutes 11 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 10, redundant 4
Fitness: max 0.98(52), min 0.275(1), ave 0.954
Test execution time: sum 925185 ms, max 195036 ms, min 307 ms
----------------------------------------------------------------

2023-10-23 22:35:47 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-10-23 22:48:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 20 minutes 46 seconds
Variants: generated 100, build-succeeded 49, build-failed 40, syntax-invalid 9, redundant 2
Fitness: max 0.98(44), min 0.765(1), ave 0.969
Test execution time: sum 710436 ms, max 103900 ms, min 418 ms
----------------------------------------------------------------

2023-10-23 22:48:22 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-10-23 23:00:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 33 minutes 8 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 8, redundant 8
Fitness: max 0.98(55), min 0.843(2), ave 0.972
Test execution time: sum 686969 ms, max 101456 ms, min 245 ms
----------------------------------------------------------------

2023-10-23 23:00:44 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-10-23 23:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 42 minutes 13 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 14, redundant 6
Fitness: max 0.98(51), min 0.765(2), ave 0.964
Test execution time: sum 496204 ms, max 100124 ms, min 148 ms
----------------------------------------------------------------

2023-10-23 23:09:49 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-10-23 23:22:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 55 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 15, redundant 7
Fitness: max 0.98(47), min 0.255(2), ave 0.947
Test execution time: sum 722252 ms, max 104840 ms, min 160 ms
----------------------------------------------------------------

2023-10-23 23:22:39 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-10-23 23:37:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 9 minutes 25 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 12, redundant 2
Fitness: max 1(1), min 0.471(1), ave 0.958
Test execution time: sum 815667 ms, max 100437 ms, min 96 ms
----------------------------------------------------------------

2023-10-23 23:37:01 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-10-23 23:45:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 17 minutes 56 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 12, redundant 4
Fitness: max 0.98(51), min 0.255(2), ave 0.943
Test execution time: sum 463466 ms, max 99238 ms, min 231 ms
----------------------------------------------------------------

2023-10-23 23:45:32 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-10-23 23:56:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 29 minutes 4 seconds
Variants: generated 100, build-succeeded 62, build-failed 22, syntax-invalid 10, redundant 6
Fitness: max 0.98(48), min 0.275(1), ave 0.932
Test execution time: sum 617469 ms, max 99294 ms, min 304 ms
----------------------------------------------------------------

2023-10-23 23:56:40 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-10-24 00:03:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 36 minutes 4 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 6, redundant 2
Fitness: max 0.98(51), min 0.255(1), ave 0.944
Test execution time: sum 372886 ms, max 99863 ms, min 153 ms
----------------------------------------------------------------

2023-10-24 00:03:41 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-10-24 00:07:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 40 minutes 5 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 3, redundant 7
Fitness: max 1(1), min 0.804(1), ave 0.976
Test execution time: sum 193209 ms, max 25206 ms, min 301 ms
----------------------------------------------------------------

2023-10-24 00:07:42 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-10-24 00:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 43 minutes 37 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 11, redundant 6
Fitness: max 0.98(49), min 0.608(1), ave 0.962
Test execution time: sum 166108 ms, max 12855 ms, min 319 ms
----------------------------------------------------------------

2023-10-24 00:11:13 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-10-24 00:18:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 50 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 12, redundant 6
Fitness: max 0.98(48), min 0.569(1), ave 0.967
Test execution time: sum 364783 ms, max 195797 ms, min 161 ms
----------------------------------------------------------------

2023-10-24 00:18:01 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-10-24 00:22:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 54 minutes 47 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 13, redundant 7
Fitness: max 0.98(46), min 0.784(1), ave 0.972
Test execution time: sum 222873 ms, max 25243 ms, min 201 ms
----------------------------------------------------------------

2023-10-24 00:22:23 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-10-24 00:26:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 58 minutes 31 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 9, redundant 7
Fitness: max 0.98(50), min 0.549(1), ave 0.966
Test execution time: sum 182033 ms, max 25238 ms, min 271 ms
----------------------------------------------------------------

2023-10-24 00:26:07 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-10-24 00:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 1 minutes 35 seconds
Variants: generated 100, build-succeeded 62, build-failed 22, syntax-invalid 10, redundant 6
Fitness: max 0.98(55), min 0.725(1), ave 0.965
Test execution time: sum 138272 ms, max 12866 ms, min 219 ms
----------------------------------------------------------------

2023-10-24 00:29:11 [main] [INFO]  KGenProgMain - GA stopped
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -979,7 +979,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -951,6 +951,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +980,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v151)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -951,6 +950,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v268)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -973,7 +972,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -951,6 +951,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v296)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -951,6 +951,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v356)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,6 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -973,13 +972,11 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v379)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,6 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -973,7 +972,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v384)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,7 +493,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v474)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -973,13 +973,11 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v496)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -493,7 +492,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v577)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -973,7 +972,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1050,7 +1048,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v656)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -492,6 +492,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -979,7 +978,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v678)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,6 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -979,7 +978,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v687)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,6 +493,7 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						x = x >> 6;
                         currentLinePos = 0;
                     }
                 }
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -493,6 +492,7 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						x = x >> 6;
                         currentLinePos = 0;
                     }
                 }
@@ -979,7 +979,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -951,6 +951,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,13 +975,11 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -493,7 +494,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,7 +493,9 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+						x = x >> 6;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,6 +493,7 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						x = x >> 6;
                         currentLinePos = 0;
                     }
                 }
@@ -979,7 +980,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1050,7 +1050,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v897)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -471,6 +471,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v952)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -492,8 +491,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v953)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -493,6 +492,7 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						x = x >> 6;
                         currentLinePos = 0;
                     }
                 }
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1050,7 +1049,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v968)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,7 +406,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -973,7 +972,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v969)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,6 +493,7 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						x = x >> 6;
                         currentLinePos = 0;
                     }
                 }
@@ -979,7 +980,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v974)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -493,7 +494,9 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+						x = x >> 6;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v975)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -951,6 +950,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +979,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -492,6 +491,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +979,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1050,7 +1049,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v981)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v984)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,7 +493,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -967,13 +968,9 @@
      *         a long since a max-len array will require Integer.MAX_VALUE + 33%.
      */
     private static long getEncodeLength(byte[] pArray, int chunkSize, byte[] chunkSeparator) {
-        // base64 always encodes to multiples of 4.
-        chunkSize = (chunkSize / 4) * 4;
-
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1050,7 +1047,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1053)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -471,6 +471,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1050,7 +1051,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -407,7 +408,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1065)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -493,6 +494,7 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
+						x = x >> 6;
                         currentLinePos = 0;
                     }
                 }
@@ -973,13 +975,11 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -471,6 +471,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1081)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -492,6 +491,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -492,6 +492,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +981,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1175)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -471,6 +470,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -951,6 +951,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +980,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1264)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -493,7 +493,9 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -967,13 +969,9 @@
      *         a long since a max-len array will require Integer.MAX_VALUE + 33%.
      */
     private static long getEncodeLength(byte[] pArray, int chunkSize, byte[] chunkSeparator) {
-        // base64 always encodes to multiples of 4.
-        chunkSize = (chunkSize / 4) * 4;
-
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1272)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -492,6 +492,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -951,6 +952,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -407,7 +408,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -979,7 +979,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1362)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -493,7 +494,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +981,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1375)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +981,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1050,7 +1051,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1377)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -492,6 +491,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -951,6 +951,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1389)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+			resizeBuffer();
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -493,7 +493,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +980,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1395)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,8 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -951,6 +953,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1482)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -471,6 +471,8 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -951,6 +953,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1552)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -951,6 +952,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1554)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,8 +493,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1558)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,6 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -471,6 +470,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1050,7 +1049,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,6 +406,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -979,7 +979,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1050,7 +1049,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1580)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,7 +406,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+			resizeBuffer();
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -979,7 +978,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1583)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -493,7 +494,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -951,6 +953,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +977,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1654)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -492,8 +492,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -951,6 +953,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -492,6 +491,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -951,6 +951,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -471,6 +471,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -493,7 +494,8 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -951,6 +953,7 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1693)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -471,6 +472,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +494,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +982,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1699)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,7 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,6 +493,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +982,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1762)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -951,6 +951,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +981,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1050,7 +1051,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -441,7 +442,6 @@
         // inAvail < 0 is how we're informed of EOF in the underlying data we're
         // encoding.
         if (inAvail < 0) {
-            eof = true;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -951,6 +951,10 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
+		readPos = 0;
+		readPos = 0;
+		readPos = 0;
+		readPos = 0;
         readResults(buf, 0, buf.length);
         return buf;
     }
@@ -979,7 +983,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -407,7 +408,8 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+			resizeBuffer();
+			resizeBuffer();
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -441,7 +443,6 @@
         // inAvail < 0 is how we're informed of EOF in the underlying data we're
         // encoding.
         if (inAvail < 0) {
-            eof = true;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -492,6 +493,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,11 +975,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,7 +407,13 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -973,7 +979,7 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
+            return len;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4206)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -382,7 +383,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,6 +407,9 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -493,7 +496,10 @@
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +985,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4737)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,6 +406,11 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,6 +496,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,11 +979,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
@@ -1054,7 +1058,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        modulus = (++modulus) % 3;
+		modulus = 0;
         eof = false;
     }
 
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -339,6 +339,7 @@
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
+			resizeBuffer();
         } else {
             this.encodeSize = 4;
         }
@@ -407,6 +408,12 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,8 +499,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +982,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5327)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,11 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,6 +497,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +987,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1054,7 +1061,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        modulus = (++modulus) % 3;
+		modulus = 0;
         eof = false;
     }
 
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,16 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -441,7 +451,6 @@
         // inAvail < 0 is how we're informed of EOF in the underlying data we're
         // encoding.
         if (inAvail < 0) {
-            eof = true;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -492,6 +501,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +984,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v7934)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,13 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,8 +499,16 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +994,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8428)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,12 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,6 +498,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -951,7 +962,8 @@
         encode(pArray, 0, pArray.length);
         encode(pArray, 0, -1); // Notify encoder of EOF.
         byte[] buf = new byte[pos - readPos];
-        readResults(buf, 0, buf.length);
+        buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+		readResults(buf, 0, buf.length);
         return buf;
     }
 
@@ -973,11 +985,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v8646)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,7 +406,11 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -492,6 +495,13 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,11 +983,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
@@ -1053,7 +1061,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,15 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,8 +501,15 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +989,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v9519)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -407,6 +406,11 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +476,8 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -492,6 +498,13 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -977,9 +990,7 @@
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v10401)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,14 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -492,6 +500,15 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +996,7 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
+                int startSrc = 0;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v11027)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,20 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +486,7 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -492,8 +507,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +990,7 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
+            chunkSize = (chunkSize / 4) * 4;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v12302)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,17 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +483,9 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -492,8 +506,17 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +996,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v15630)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            byte b = lineSeparator[lineSeparator.length - 1];
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -407,6 +407,17 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +483,7 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -492,8 +504,22 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +1005,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v17215)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -383,7 +383,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            byte b = lineSeparator[lineSeparator.length - 1];
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -407,6 +407,18 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -491,9 +503,55 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +1037,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18106)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,18 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +484,7 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +504,52 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						String sep = StringUtils.newStringUtf8(lineSeparator);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +1029,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v18444)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,17 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -491,9 +502,59 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +1034,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v19945)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,15 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +481,9 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +503,93 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						String sep = StringUtils.newStringUtf8(lineSeparator);
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +1075,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,17 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +483,7 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +503,90 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        String sep = StringUtils.newStringUtf8(lineSeparator);
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +1066,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23047)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,15 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +481,8 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +502,189 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +1164,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v23117)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,13 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +479,9 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +501,266 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						switch (modulus) {
+						case 1:
+							buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+								buffer[pos++] = PAD;
+							}
+							break;
+						case 2:
+							buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+							}
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +1246,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v24346)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,22 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +488,9 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +510,186 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						switch (modulus) {
+						case 1:
+							buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+								buffer[pos++] = PAD;
+							}
+							break;
+						case 2:
+							buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+							}
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						switch (modulus) {
+						case 1:
+							buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+								buffer[pos++] = PAD;
+							}
+							break;
+						case 2:
+							buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+							}
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -973,7 +1169,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26035)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,15 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +481,10 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +504,144 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						switch (modulus) {
+						case 1:
+							buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+								buffer[pos++] = PAD;
+							}
+							break;
+						case 2:
+							buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
+							buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
+							if (encodeTable == STANDARD_ENCODE_TABLE) {
+								buffer[pos++] = PAD;
+							}
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +1127,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v26831)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -407,6 +407,17 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
             readPos += len;
             if (readPos >= pos) {
                 buffer = null;
@@ -472,6 +483,12 @@
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 pos += lineSeparator.length;
+				eof = true;
+				eof = true;
+				eof = true;
+				eof = true;
+				eof = true;
+				eof = true;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
@@ -491,9 +508,124 @@
                     buffer[pos++] = encodeTable[x & MASK_6BITS];
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
-                        System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+                        switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						switch (modulus) {
+						case 2:
+							buffer[pos++] = (byte) ((x >> 2) & MASK_8BITS);
+							break;
+						case 3:
+							buffer[pos++] = (byte) ((x >> 7) & MASK_8BITS);
+							break;
+						case 4:
+							x = x >> 4;
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 5:
+							x = x >> 1;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 6:
+							x = x >> 6;
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						case 7:
+							x = x >> 3;
+							buffer[pos++] = (byte) ((x >> 24) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+							buffer[pos++] = (byte) ((x) & MASK_8BITS);
+							break;
+						}
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
-                        currentLinePos = 0;
+                        x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						x = x >> 6;
+						currentLinePos = 0;
                     }
                 }
             }
@@ -979,7 +1111,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  PatchLogExporter - patch (v27203)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-24 00:29:12 [main] [INFO]  KGenProgMain - Summary
Reached generation = 279
Generated variants = 27800
Syntax valid variants = 24967
Build succeeded variants = 14261
Time elapsed = 24 hours 1 minutes 36 seconds
Exit status = FAILURE (time limit)
