2023-10-22 12:39:21 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-10-22 12:39:21 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-10-22 12:39:21 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-10-22 12:39:21 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9/kgenprog-9.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9/src/java] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/codec9/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64Test] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 1 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Downloads/research
version = 1.8.2
================================================================
2023-10-22 12:39:28 [main] [INFO]  KGenProgMain - initial failed tests (1/51)
org.apache.commons.codec.binary.Base64Test.testCodec112: null

2023-10-22 12:39:29 [main] [INFO]  KGenProgMain - GA started
2023-10-22 12:39:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-10-22 12:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 50, build-succeeded 4, build-failed 35, syntax-invalid 1, redundant 10
Fitness: max 0.98(1), min 0.784(2), ave 0.848
Test execution time: sum 1048 ms, max 366 ms, min 181 ms
----------------------------------------------------------------

2023-10-22 12:39:34 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-10-22 12:39:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 50, build-succeeded 14, build-failed 24, syntax-invalid 4, redundant 8
Fitness: max 0.922(1), min 0.235(1), ave 0.776
Test execution time: sum 4050 ms, max 2683 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 12:39:41 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-10-22 12:39:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 100, build-succeeded 31, build-failed 27, syntax-invalid 4, redundant 38
Fitness: max 1(1), min 0.235(2), ave 0.758
Test execution time: sum 7389 ms, max 2221 ms, min 59 ms
----------------------------------------------------------------

2023-10-22 12:39:53 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-10-22 12:40:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 100, build-succeeded 36, build-failed 29, syntax-invalid 7, redundant 28
Fitness: max 0.98(4), min 0.49(1), ave 0.818
Test execution time: sum 6942 ms, max 2131 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:40:05 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-10-22 12:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 100, build-succeeded 28, build-failed 29, syntax-invalid 6, redundant 37
Fitness: max 1(1), min 0.314(1), ave 0.815
Test execution time: sum 4893 ms, max 2780 ms, min 58 ms
----------------------------------------------------------------

2023-10-22 12:40:13 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-10-22 12:40:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 seconds
Variants: generated 100, build-succeeded 26, build-failed 30, syntax-invalid 8, redundant 36
Fitness: max 0.98(2), min 0.353(1), ave 0.816
Test execution time: sum 2970 ms, max 972 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:40:19 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-10-22 12:40:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 0 seconds
Variants: generated 100, build-succeeded 34, build-failed 25, syntax-invalid 7, redundant 34
Fitness: max 1(2), min 0.49(1), ave 0.866
Test execution time: sum 5723 ms, max 847 ms, min 57 ms
----------------------------------------------------------------

2023-10-22 12:40:29 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-10-22 12:40:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 5 seconds
Variants: generated 100, build-succeeded 32, build-failed 32, syntax-invalid 7, redundant 29
Fitness: max 0.98(9), min 0.549(1), ave 0.887
Test execution time: sum 2399 ms, max 110 ms, min 61 ms
----------------------------------------------------------------

2023-10-22 12:40:34 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-10-22 12:40:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 10 seconds
Variants: generated 100, build-succeeded 23, build-failed 32, syntax-invalid 7, redundant 38
Fitness: max 1(1), min 0.902(7), ave 0.957
Test execution time: sum 1940 ms, max 179 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 12:40:39 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-10-22 12:40:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 15 seconds
Variants: generated 100, build-succeeded 29, build-failed 34, syntax-invalid 9, redundant 28
Fitness: max 1(4), min 0.667(2), ave 0.943
Test execution time: sum 2374 ms, max 208 ms, min 63 ms
----------------------------------------------------------------

2023-10-22 12:40:44 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-10-22 12:40:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 19 seconds
Variants: generated 100, build-succeeded 25, build-failed 33, syntax-invalid 7, redundant 35
Fitness: max 1(1), min 0.49(1), ave 0.922
Test execution time: sum 1969 ms, max 146 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:40:49 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-10-22 12:40:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 24 seconds
Variants: generated 100, build-succeeded 21, build-failed 31, syntax-invalid 4, redundant 44
Fitness: max 0.98(13), min 0.843(2), ave 0.941
Test execution time: sum 1702 ms, max 156 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 12:40:53 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-10-22 12:40:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 28 seconds
Variants: generated 100, build-succeeded 28, build-failed 32, syntax-invalid 5, redundant 35
Fitness: max 1(1), min 0.49(1), ave 0.921
Test execution time: sum 2135 ms, max 103 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 12:40:57 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-10-22 12:41:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 34 seconds
Variants: generated 100, build-succeeded 33, build-failed 33, syntax-invalid 4, redundant 30
Fitness: max 1(1), min 0.667(1), ave 0.945
Test execution time: sum 2675 ms, max 162 ms, min 65 ms
----------------------------------------------------------------

2023-10-22 12:41:03 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-10-22 12:41:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 40 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 5, redundant 33
Fitness: max 1(1), min 0.49(1), ave 0.942
Test execution time: sum 2379 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:41:09 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-10-22 12:41:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 44 seconds
Variants: generated 100, build-succeeded 25, build-failed 34, syntax-invalid 1, redundant 40
Fitness: max 0.98(24), min 0.471(1), ave 0.96
Test execution time: sum 1986 ms, max 109 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:41:13 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-10-22 12:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 49 seconds
Variants: generated 100, build-succeeded 28, build-failed 30, syntax-invalid 10, redundant 32
Fitness: max 1(1), min 0.824(1), ave 0.971
Test execution time: sum 2248 ms, max 127 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:41:19 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-10-22 12:41:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 56 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 10, redundant 20
Fitness: max 1(1), min 0.314(1), ave 0.942
Test execution time: sum 3181 ms, max 133 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:41:25 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-10-22 12:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 3 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 3, redundant 28
Fitness: max 0.98(31), min 0.157(1), ave 0.952
Test execution time: sum 2755 ms, max 146 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:41:32 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-10-22 12:41:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 10, redundant 16
Fitness: max 0.98(40), min 0.235(1), ave 0.946
Test execution time: sum 3969 ms, max 202 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:41:39 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-10-22 12:41:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 17 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 5, redundant 19
Fitness: max 0.98(39), min 0.765(1), ave 0.972
Test execution time: sum 3346 ms, max 138 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:41:46 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-10-22 12:41:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 24 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 4, redundant 23
Fitness: max 0.98(33), min 0.49(1), ave 0.928
Test execution time: sum 3200 ms, max 138 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:41:53 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-10-22 12:42:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 32 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 6, redundant 11
Fitness: max 0.98(45), min 0.353(1), ave 0.942
Test execution time: sum 3980 ms, max 149 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:42:01 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-10-22 12:42:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 40 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 3, redundant 18
Fitness: max 0.98(45), min 0.235(1), ave 0.937
Test execution time: sum 4104 ms, max 160 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 12:42:09 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-10-22 12:42:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 49 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 11, redundant 17
Fitness: max 0.98(34), min 0.667(1), ave 0.951
Test execution time: sum 3978 ms, max 605 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 12:42:18 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-10-22 12:42:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 56 seconds
Variants: generated 100, build-succeeded 44, build-failed 24, syntax-invalid 14, redundant 18
Fitness: max 0.98(36), min 0.49(1), ave 0.949
Test execution time: sum 3569 ms, max 128 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:42:25 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-10-22 12:42:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 5 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 8, redundant 14
Fitness: max 1(3), min 0.765(1), ave 0.966
Test execution time: sum 4018 ms, max 125 ms, min 63 ms
----------------------------------------------------------------

2023-10-22 12:42:34 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-10-22 12:42:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 11 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 9, redundant 15
Fitness: max 1(1), min 0.49(1), ave 0.939
Test execution time: sum 3500 ms, max 170 ms, min 48 ms
----------------------------------------------------------------

2023-10-22 12:42:40 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-10-22 12:42:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 19 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 9, redundant 14
Fitness: max 1(2), min 0.353(1), ave 0.926
Test execution time: sum 4149 ms, max 175 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:42:48 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-10-22 12:42:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 5, redundant 8
Fitness: max 0.98(44), min 0.49(1), ave 0.949
Test execution time: sum 4418 ms, max 143 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:42:57 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-10-22 12:43:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 11, redundant 9
Fitness: max 0.98(42), min 0.235(1), ave 0.927
Test execution time: sum 6235 ms, max 2398 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:43:07 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-10-22 12:43:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 46 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 9, redundant 10
Fitness: max 0.98(37), min 0.49(2), ave 0.948
Test execution time: sum 3665 ms, max 162 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:43:15 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-10-22 12:43:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 54 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 6, redundant 13
Fitness: max 0.98(49), min 0.49(2), ave 0.955
Test execution time: sum 4444 ms, max 140 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:43:23 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-10-22 12:43:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 2 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 6, redundant 13
Fitness: max 0.98(39), min 0.49(1), ave 0.947
Test execution time: sum 4051 ms, max 162 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:43:31 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-10-22 12:43:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 12 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 8, redundant 13
Fitness: max 0.98(41), min 0.549(2), ave 0.953
Test execution time: sum 4143 ms, max 133 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 12:43:41 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-10-22 12:43:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 20 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 5, redundant 10
Fitness: max 0.98(44), min 0.314(1), ave 0.935
Test execution time: sum 4290 ms, max 166 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 12:43:49 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-10-22 12:43:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 30 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 6, redundant 13
Fitness: max 0.98(46), min 0.549(2), ave 0.954
Test execution time: sum 5046 ms, max 181 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:43:59 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-10-22 12:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 39 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 2, redundant 19
Fitness: max 0.98(41), min 0.431(1), ave 0.953
Test execution time: sum 4510 ms, max 179 ms, min 65 ms
----------------------------------------------------------------

2023-10-22 12:44:08 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-10-22 12:44:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 4, redundant 10
Fitness: max 0.98(51), min 0.765(1), ave 0.965
Test execution time: sum 5163 ms, max 232 ms, min 64 ms
----------------------------------------------------------------

2023-10-22 12:44:18 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-10-22 12:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 58 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 2, redundant 15
Fitness: max 0.98(42), min 0.49(1), ave 0.955
Test execution time: sum 4046 ms, max 147 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 12:44:27 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-10-22 12:44:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 5, redundant 12
Fitness: max 0.98(48), min 0.569(1), ave 0.965
Test execution time: sum 4341 ms, max 141 ms, min 57 ms
----------------------------------------------------------------

2023-10-22 12:44:36 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-10-22 12:44:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 4, redundant 10
Fitness: max 0.98(47), min 0.549(1), ave 0.956
Test execution time: sum 4691 ms, max 136 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 12:44:45 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-10-22 12:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 26 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 2, redundant 15
Fitness: max 0.98(39), min 0.471(1), ave 0.941
Test execution time: sum 4989 ms, max 1011 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:44:56 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-10-22 12:45:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 34 seconds
Variants: generated 100, build-succeeded 43, build-failed 35, syntax-invalid 9, redundant 13
Fitness: max 0.98(34), min 0.235(1), ave 0.948
Test execution time: sum 3430 ms, max 142 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:45:03 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-10-22 12:45:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 42 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 9, redundant 14
Fitness: max 1(1), min 0.216(1), ave 0.944
Test execution time: sum 3939 ms, max 189 ms, min 49 ms
----------------------------------------------------------------

2023-10-22 12:45:12 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-10-22 12:45:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 50 seconds
Variants: generated 100, build-succeeded 48, build-failed 25, syntax-invalid 9, redundant 18
Fitness: max 0.98(39), min 0.549(1), ave 0.956
Test execution time: sum 4034 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 12:45:19 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-10-22 12:45:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 2, redundant 13
Fitness: max 0.98(44), min 0.49(2), ave 0.943
Test execution time: sum 4279 ms, max 138 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:45:29 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-10-22 12:45:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 7 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 11, redundant 15
Fitness: max 0.98(40), min 0.49(1), ave 0.967
Test execution time: sum 3454 ms, max 143 ms, min 61 ms
----------------------------------------------------------------

2023-10-22 12:45:37 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-10-22 12:45:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 17 seconds
Variants: generated 100, build-succeeded 46, build-failed 23, syntax-invalid 6, redundant 25
Fitness: max 0.98(38), min 0.49(1), ave 0.957
Test execution time: sum 5387 ms, max 1789 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 12:45:46 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-10-22 12:45:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 5, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.967
Test execution time: sum 3857 ms, max 122 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:45:54 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-10-22 12:46:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 7, redundant 13
Fitness: max 0.98(45), min 0.569(1), ave 0.945
Test execution time: sum 4504 ms, max 192 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:46:03 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-10-22 12:46:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 43 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 8, redundant 15
Fitness: max 0.98(42), min 0.49(1), ave 0.949
Test execution time: sum 4164 ms, max 191 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:46:12 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-10-22 12:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 9, redundant 12
Fitness: max 0.98(42), min 0.588(1), ave 0.954
Test execution time: sum 4440 ms, max 166 ms, min 49 ms
----------------------------------------------------------------

2023-10-22 12:46:21 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-10-22 12:46:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 2 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 2, redundant 8
Fitness: max 0.98(50), min 0.49(1), ave 0.952
Test execution time: sum 4840 ms, max 132 ms, min 64 ms
----------------------------------------------------------------

2023-10-22 12:46:31 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-10-22 12:46:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 11 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 7, redundant 15
Fitness: max 0.98(41), min 0.667(1), ave 0.962
Test execution time: sum 4091 ms, max 191 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 12:46:40 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-10-22 12:46:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 4, redundant 14
Fitness: max 1(1), min 0.275(1), ave 0.952
Test execution time: sum 4892 ms, max 178 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:46:49 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-10-22 12:46:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 5, redundant 13
Fitness: max 0.98(43), min 0.667(1), ave 0.965
Test execution time: sum 4210 ms, max 152 ms, min 64 ms
----------------------------------------------------------------

2023-10-22 12:46:59 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-10-22 12:47:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 39 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 6, redundant 16
Fitness: max 0.98(37), min 0.49(1), ave 0.944
Test execution time: sum 4217 ms, max 210 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:47:08 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-10-22 12:47:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 47 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 5, redundant 14
Fitness: max 0.98(39), min 0.863(2), ave 0.968
Test execution time: sum 3824 ms, max 133 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 12:47:16 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-10-22 12:47:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 57 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 4, redundant 10
Fitness: max 0.98(48), min 0.784(1), ave 0.966
Test execution time: sum 4928 ms, max 136 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:47:26 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-10-22 12:47:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 7 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 10, redundant 8
Fitness: max 0.98(43), min 0.353(1), ave 0.955
Test execution time: sum 4330 ms, max 174 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:47:36 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-10-22 12:47:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 16 seconds
Variants: generated 100, build-succeeded 49, build-failed 37, syntax-invalid 6, redundant 8
Fitness: max 0.98(41), min 0.549(1), ave 0.956
Test execution time: sum 4213 ms, max 134 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 12:47:45 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-10-22 12:47:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 26 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 3, redundant 10
Fitness: max 0.98(44), min 0.49(1), ave 0.928
Test execution time: sum 4761 ms, max 160 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:47:55 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-10-22 12:48:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 36 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 11, redundant 11
Fitness: max 1(1), min 0.49(2), ave 0.936
Test execution time: sum 4501 ms, max 141 ms, min 60 ms
----------------------------------------------------------------

2023-10-22 12:48:05 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-10-22 12:48:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 45 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 3, redundant 15
Fitness: max 0.98(45), min 0.275(1), ave 0.954
Test execution time: sum 4481 ms, max 138 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 12:48:14 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-10-22 12:48:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 54 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 9, redundant 13
Fitness: max 0.98(39), min 0.686(1), ave 0.967
Test execution time: sum 3844 ms, max 207 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 12:48:23 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-10-22 12:48:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 2 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 6, redundant 20
Fitness: max 0.98(41), min 0.902(2), ave 0.973
Test execution time: sum 4013 ms, max 128 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 12:48:31 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-10-22 12:48:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 11 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 5, redundant 18
Fitness: max 0.98(42), min 0.49(1), ave 0.963
Test execution time: sum 3854 ms, max 132 ms, min 48 ms
----------------------------------------------------------------

2023-10-22 12:48:40 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-10-22 12:48:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 21 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 2, redundant 6
Fitness: max 0.98(51), min 0.49(1), ave 0.961
Test execution time: sum 4701 ms, max 141 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:48:50 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-10-22 12:49:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 31 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 3, redundant 20
Fitness: max 0.98(45), min 0.824(1), ave 0.969
Test execution time: sum 4259 ms, max 136 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 12:49:00 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-10-22 12:49:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 40 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 3, redundant 15
Fitness: max 0.98(43), min 0.49(1), ave 0.952
Test execution time: sum 4466 ms, max 210 ms, min 65 ms
----------------------------------------------------------------

2023-10-22 12:49:09 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-10-22 12:49:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 49 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 5, redundant 20
Fitness: max 0.98(39), min 0.588(1), ave 0.96
Test execution time: sum 4029 ms, max 207 ms, min 57 ms
----------------------------------------------------------------

2023-10-22 12:49:18 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-10-22 12:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 3, redundant 15
Fitness: max 0.98(45), min 0.49(2), ave 0.95
Test execution time: sum 4476 ms, max 116 ms, min 57 ms
----------------------------------------------------------------

2023-10-22 12:49:27 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-10-22 12:49:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 6, redundant 12
Fitness: max 0.98(44), min 0.549(1), ave 0.956
Test execution time: sum 5264 ms, max 753 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 12:49:38 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-10-22 12:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 17 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 8, redundant 13
Fitness: max 0.98(43), min 0.824(1), ave 0.969
Test execution time: sum 4093 ms, max 124 ms, min 65 ms
----------------------------------------------------------------

2023-10-22 12:49:46 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-10-22 12:49:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 21, syntax-invalid 4, redundant 16
Fitness: max 0.98(44), min 0.49(3), ave 0.928
Test execution time: sum 5510 ms, max 766 ms, min 50 ms
----------------------------------------------------------------

2023-10-22 12:49:58 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-10-22 12:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.98(50), min 0.765(1), ave 0.967
Test execution time: sum 4731 ms, max 137 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 12:50:08 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-10-22 12:50:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 48 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 5, redundant 11
Fitness: max 0.98(40), min 0.549(1), ave 0.953
Test execution time: sum 4018 ms, max 137 ms, min 57 ms
----------------------------------------------------------------

2023-10-22 12:50:17 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-10-22 12:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 7, redundant 11
Fitness: max 1(1), min 0.49(1), ave 0.957
Test execution time: sum 4484 ms, max 143 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:50:27 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-10-22 12:50:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 8 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 5, redundant 15
Fitness: max 0.98(44), min 0.49(1), ave 0.958
Test execution time: sum 4191 ms, max 131 ms, min 58 ms
----------------------------------------------------------------

2023-10-22 12:50:37 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-10-22 12:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 18 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 4, redundant 14
Fitness: max 0.98(51), min 0.157(1), ave 0.957
Test execution time: sum 5386 ms, max 763 ms, min 63 ms
----------------------------------------------------------------

2023-10-22 12:50:47 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-10-22 12:50:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 28 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 2, redundant 14
Fitness: max 0.98(45), min 0.353(1), ave 0.958
Test execution time: sum 4148 ms, max 136 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:50:57 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-10-22 12:51:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 38 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 3, redundant 18
Fitness: max 0.98(43), min 0.49(2), ave 0.941
Test execution time: sum 3974 ms, max 135 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:51:07 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-10-22 12:51:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 48 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 4, redundant 6
Fitness: max 0.98(47), min 0.549(1), ave 0.954
Test execution time: sum 4735 ms, max 177 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 12:51:17 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-10-22 12:51:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 58 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 7, redundant 10
Fitness: max 0.98(45), min 0.49(2), ave 0.956
Test execution time: sum 4191 ms, max 179 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:51:27 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-10-22 12:51:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 6, redundant 4
Fitness: max 0.98(47), min 0.902(8), ave 0.969
Test execution time: sum 4686 ms, max 134 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 12:51:38 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-10-22 12:51:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 19 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 4, redundant 7
Fitness: max 0.98(49), min 0.49(1), ave 0.951
Test execution time: sum 4634 ms, max 138 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:51:48 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-10-22 12:51:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 11, redundant 7
Fitness: max 0.98(49), min 0.471(1), ave 0.958
Test execution time: sum 4706 ms, max 150 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 12:51:59 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-10-22 12:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 41 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0.98(49), min 0.49(1), ave 0.949
Test execution time: sum 4753 ms, max 144 ms, min 60 ms
----------------------------------------------------------------

2023-10-22 12:52:10 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-10-22 12:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 37, syntax-invalid 5, redundant 5
Fitness: max 0.98(47), min 0.353(1), ave 0.953
Test execution time: sum 4531 ms, max 137 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 12:52:21 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-10-22 12:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 2 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 8, redundant 6
Fitness: max 0.98(46), min 0.49(1), ave 0.949
Test execution time: sum 4536 ms, max 140 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:52:31 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-10-22 12:52:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 13 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 6, redundant 7
Fitness: max 0.98(48), min 0.549(1), ave 0.953
Test execution time: sum 4917 ms, max 142 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:52:42 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-10-22 12:52:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 24 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 7, redundant 8
Fitness: max 0.98(50), min 0.765(1), ave 0.968
Test execution time: sum 4884 ms, max 176 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 12:52:53 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-10-22 12:53:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 35, syntax-invalid 2, redundant 4
Fitness: max 0.98(51), min 0.667(1), ave 0.961
Test execution time: sum 5706 ms, max 626 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 12:53:06 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-10-22 12:53:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 48 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 1, redundant 7
Fitness: max 1(1), min 0.725(1), ave 0.975
Test execution time: sum 5248 ms, max 139 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 12:53:17 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-10-22 12:53:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 0 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 4, redundant 5
Fitness: max 1(1), min 0.863(2), ave 0.974
Test execution time: sum 5294 ms, max 136 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 12:53:29 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-10-22 12:53:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 13 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 7, redundant 9
Fitness: max 0.98(57), min 0.549(1), ave 0.968
Test execution time: sum 6022 ms, max 691 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 12:53:42 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-10-22 12:53:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 24 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 11, redundant 8
Fitness: max 0.98(42), min 0.549(1), ave 0.961
Test execution time: sum 4054 ms, max 141 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 12:53:53 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-10-22 12:54:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 36 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0.49(1), ave 0.954
Test execution time: sum 5374 ms, max 208 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:54:05 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-10-22 12:54:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 47 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 4, redundant 7
Fitness: max 0.98(51), min 0.49(1), ave 0.955
Test execution time: sum 5059 ms, max 138 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:54:17 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-10-22 12:54:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 0 seconds
Variants: generated 100, build-succeeded 63, build-failed 24, syntax-invalid 2, redundant 11
Fitness: max 0.98(53), min 0.765(1), ave 0.964
Test execution time: sum 5347 ms, max 141 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 12:54:29 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-10-22 12:54:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 11 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 3, redundant 6
Fitness: max 0.98(51), min 0.471(1), ave 0.958
Test execution time: sum 4966 ms, max 136 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:54:41 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-10-22 12:54:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 24 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 4, redundant 4
Fitness: max 1(1), min 0.49(1), ave 0.954
Test execution time: sum 5411 ms, max 135 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:54:53 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-10-22 12:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 36 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 4, redundant 3
Fitness: max 0.98(52), min 0.49(1), ave 0.946
Test execution time: sum 5421 ms, max 179 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:55:05 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-10-22 12:55:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 48 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.98(50), min 0.49(1), ave 0.954
Test execution time: sum 5018 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:55:17 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-10-22 12:55:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 59 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 8, redundant 6
Fitness: max 0.98(49), min 0.765(1), ave 0.966
Test execution time: sum 4722 ms, max 180 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:55:28 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-10-22 12:55:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 11 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 6, redundant 3
Fitness: max 0.98(54), min 0.765(1), ave 0.97
Test execution time: sum 5023 ms, max 161 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 12:55:40 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-10-22 12:55:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 8, redundant 6
Fitness: max 1(1), min 0.549(1), ave 0.962
Test execution time: sum 4780 ms, max 142 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 12:55:52 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-10-22 12:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 35 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 7, redundant 1
Fitness: max 0.98(53), min 0.765(1), ave 0.969
Test execution time: sum 4952 ms, max 136 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 12:56:04 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-10-22 12:56:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 47 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0.98(50), min 0.569(1), ave 0.961
Test execution time: sum 4958 ms, max 144 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:56:16 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-10-22 12:56:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 59 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 3, redundant 6
Fitness: max 0.98(54), min 0.549(1), ave 0.96
Test execution time: sum 5333 ms, max 138 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 12:56:28 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-10-22 12:56:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 7, redundant 7
Fitness: max 0.98(52), min 0.569(1), ave 0.964
Test execution time: sum 4696 ms, max 188 ms, min 57 ms
----------------------------------------------------------------

2023-10-22 12:56:39 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-10-22 12:56:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 22 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 4, redundant 4
Fitness: max 0.98(54), min 0.765(1), ave 0.967
Test execution time: sum 5319 ms, max 143 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 12:56:51 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-10-22 12:57:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 36, syntax-invalid 9, redundant 5
Fitness: max 0.98(45), min 0.49(2), ave 0.953
Test execution time: sum 4322 ms, max 176 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:57:01 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-10-22 12:57:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 43 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 13, redundant 4
Fitness: max 0.98(50), min 0.49(1), ave 0.957
Test execution time: sum 5084 ms, max 135 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 12:57:12 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-10-22 12:57:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 54 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 13, redundant 6
Fitness: max 0.98(42), min 0.471(1), ave 0.943
Test execution time: sum 4516 ms, max 150 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 12:57:23 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-10-22 12:57:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 11, redundant 6
Fitness: max 0.98(46), min 0.49(1), ave 0.952
Test execution time: sum 4760 ms, max 155 ms, min 53 ms
----------------------------------------------------------------

2023-10-22 12:57:33 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-10-22 12:57:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 16 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 5, redundant 6
Fitness: max 0.98(52), min 0.353(1), ave 0.945
Test execution time: sum 5327 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:57:45 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-10-22 12:57:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 28 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 9, redundant 5
Fitness: max 0.98(53), min 0.49(1), ave 0.941
Test execution time: sum 5517 ms, max 174 ms, min 56 ms
----------------------------------------------------------------

2023-10-22 12:57:57 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-10-22 12:58:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 12, redundant 2
Fitness: max 0.98(48), min 0.765(1), ave 0.968
Test execution time: sum 4636 ms, max 187 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 12:58:08 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-10-22 12:58:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 10, redundant 8
Fitness: max 0.98(46), min 0.549(1), ave 0.96
Test execution time: sum 4594 ms, max 143 ms, min 60 ms
----------------------------------------------------------------

2023-10-22 12:58:19 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-10-22 12:58:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 1 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 9, redundant 3
Fitness: max 0.98(46), min 0.667(1), ave 0.965
Test execution time: sum 4447 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 12:58:30 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-10-22 12:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 6, redundant 5
Fitness: max 0.98(50), min 0.667(1), ave 0.964
Test execution time: sum 4959 ms, max 139 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 12:58:41 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-10-22 12:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 25 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 9, redundant 1
Fitness: max 0.98(45), min 0.235(1), ave 0.941
Test execution time: sum 5395 ms, max 721 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:58:54 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-10-22 12:59:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 38 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 4, redundant 3
Fitness: max 0.98(58), min 0.863(1), ave 0.978
Test execution time: sum 5144 ms, max 176 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 12:59:07 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-10-22 12:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 11, redundant 6
Fitness: max 0.98(47), min 0.549(1), ave 0.964
Test execution time: sum 4696 ms, max 133 ms, min 78 ms
----------------------------------------------------------------

2023-10-22 12:59:19 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-10-22 12:59:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 2 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 10, redundant 7
Fitness: max 0.98(50), min 0.49(1), ave 0.966
Test execution time: sum 4755 ms, max 137 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 12:59:31 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-10-22 12:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 13 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 16, redundant 6
Fitness: max 0.98(40), min 0.353(1), ave 0.953
Test execution time: sum 3992 ms, max 188 ms, min 52 ms
----------------------------------------------------------------

2023-10-22 12:59:42 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-10-22 12:59:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 25 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 12, redundant 7
Fitness: max 0.98(43), min 0.765(1), ave 0.963
Test execution time: sum 4674 ms, max 164 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 12:59:54 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-10-22 13:00:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 37 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 8, redundant 5
Fitness: max 0.98(49), min 0.667(1), ave 0.965
Test execution time: sum 4839 ms, max 162 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:00:06 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-10-22 13:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 49 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 5, redundant 8
Fitness: max 0.98(50), min 0.863(4), ave 0.97
Test execution time: sum 4835 ms, max 163 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:00:19 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-10-22 13:00:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0.98(52), min 0.765(1), ave 0.966
Test execution time: sum 5414 ms, max 173 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 13:00:32 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-10-22 13:00:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 15 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 6, redundant 6
Fitness: max 0.98(57), min 0.549(1), ave 0.968
Test execution time: sum 5404 ms, max 146 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 13:00:44 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-10-22 13:00:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 29 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 6, redundant 8
Fitness: max 0.98(55), min 0.804(1), ave 0.97
Test execution time: sum 6203 ms, max 658 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:00:58 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-10-22 13:01:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 44 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 4, redundant 5
Fitness: max 0.98(58), min 0.667(1), ave 0.968
Test execution time: sum 6000 ms, max 197 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:01:13 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-10-22 13:01:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 58 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 3, redundant 5
Fitness: max 0.98(54), min 0.471(1), ave 0.958
Test execution time: sum 5790 ms, max 181 ms, min 63 ms
----------------------------------------------------------------

2023-10-22 13:01:27 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-10-22 13:01:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 13, redundant 10
Fitness: max 0.98(43), min 0.49(1), ave 0.956
Test execution time: sum 4617 ms, max 160 ms, min 51 ms
----------------------------------------------------------------

2023-10-22 13:01:39 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-10-22 13:01:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 7, redundant 10
Fitness: max 0.98(49), min 0.49(1), ave 0.961
Test execution time: sum 5240 ms, max 193 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 13:01:52 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-10-22 13:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 35 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 8, redundant 5
Fitness: max 1(1), min 0.902(5), ave 0.974
Test execution time: sum 5041 ms, max 142 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 13:02:04 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-10-22 13:02:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 47 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 9, redundant 3
Fitness: max 0.98(53), min 0.843(1), ave 0.973
Test execution time: sum 5234 ms, max 138 ms, min 81 ms
----------------------------------------------------------------

2023-10-22 13:02:16 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-10-22 13:02:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 7, redundant 9
Fitness: max 0.98(50), min 0.549(1), ave 0.963
Test execution time: sum 5148 ms, max 150 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 13:02:29 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-10-22 13:02:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 12 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 7, redundant 8
Fitness: max 0.98(45), min 0.843(1), ave 0.966
Test execution time: sum 4961 ms, max 149 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 13:02:41 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-10-22 13:02:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 6, redundant 11
Fitness: max 0.98(49), min 0.49(1), ave 0.961
Test execution time: sum 4857 ms, max 144 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 13:02:52 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-10-22 13:03:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 36 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 5, redundant 8
Fitness: max 0.98(53), min 0.471(1), ave 0.957
Test execution time: sum 5183 ms, max 146 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:03:05 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-10-22 13:03:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 48 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 5, redundant 9
Fitness: max 0.98(52), min 0.549(2), ave 0.951
Test execution time: sum 5530 ms, max 159 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:03:17 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-10-22 13:03:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 0 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 3, redundant 14
Fitness: max 0.98(54), min 0.275(1), ave 0.962
Test execution time: sum 5452 ms, max 180 ms, min 54 ms
----------------------------------------------------------------

2023-10-22 13:03:30 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-10-22 13:03:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 5, redundant 8
Fitness: max 1(1), min 0.49(1), ave 0.94
Test execution time: sum 5384 ms, max 169 ms, min 55 ms
----------------------------------------------------------------

2023-10-22 13:03:43 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-10-22 13:03:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 5, redundant 12
Fitness: max 0.98(47), min 0.765(3), ave 0.959
Test execution time: sum 6127 ms, max 173 ms, min 84 ms
----------------------------------------------------------------

2023-10-22 13:03:58 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-10-22 13:04:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 43 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 1, redundant 20
Fitness: max 0.98(43), min 0.549(2), ave 0.949
Test execution time: sum 5472 ms, max 183 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:04:12 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-10-22 13:04:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 0 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 3, redundant 13
Fitness: max 0.98(47), min 0.843(1), ave 0.977
Test execution time: sum 6307 ms, max 786 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:04:29 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-10-22 13:04:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 15 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 8, redundant 14
Fitness: max 0.98(46), min 0.49(1), ave 0.962
Test execution time: sum 5902 ms, max 171 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:04:44 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-10-22 13:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 31 seconds
Variants: generated 100, build-succeeded 46, build-failed 36, syntax-invalid 9, redundant 9
Fitness: max 1(1), min 0.784(1), ave 0.971
Test execution time: sum 5299 ms, max 278 ms, min 91 ms
----------------------------------------------------------------

2023-10-22 13:05:00 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-10-22 13:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 10, redundant 11
Fitness: max 1(1), min 0.549(1), ave 0.954
Test execution time: sum 5937 ms, max 182 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:05:16 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-10-22 13:05:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 17, redundant 5
Fitness: max 0.98(42), min 0.765(1), ave 0.968
Test execution time: sum 5257 ms, max 167 ms, min 87 ms
----------------------------------------------------------------

2023-10-22 13:05:30 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-10-22 13:05:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 15 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 9, redundant 10
Fitness: max 0.98(43), min 0.157(1), ave 0.957
Test execution time: sum 5474 ms, max 208 ms, min 65 ms
----------------------------------------------------------------

2023-10-22 13:05:45 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-10-22 13:05:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 29 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 8, redundant 10
Fitness: max 0.98(44), min 0.157(1), ave 0.958
Test execution time: sum 5319 ms, max 248 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 13:05:58 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-10-22 13:06:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 3, redundant 4
Fitness: max 0.98(57), min 0.863(1), ave 0.978
Test execution time: sum 6565 ms, max 180 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:06:14 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-10-22 13:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 1 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 4, redundant 12
Fitness: max 0.98(48), min 0.353(1), ave 0.953
Test execution time: sum 6262 ms, max 198 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 13:06:30 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-10-22 13:06:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 1, redundant 12
Fitness: max 0.98(54), min 0.569(1), ave 0.967
Test execution time: sum 6413 ms, max 183 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 13:06:46 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-10-22 13:07:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 33 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0.902(1), ave 0.979
Test execution time: sum 6370 ms, max 177 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 13:07:02 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-10-22 13:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 47 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 6, redundant 13
Fitness: max 0.98(47), min 0.98(47), ave 0.98
Test execution time: sum 5311 ms, max 169 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 13:07:16 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-10-22 13:07:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 1, redundant 8
Fitness: max 0.98(55), min 0.765(2), ave 0.968
Test execution time: sum 6696 ms, max 211 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 13:07:33 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-10-22 13:07:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 36, syntax-invalid 4, redundant 7
Fitness: max 0.98(50), min 0.824(1), ave 0.974
Test execution time: sum 5908 ms, max 177 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:07:48 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-10-22 13:08:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 36 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 5, redundant 10
Fitness: max 0.98(53), min 0.49(1), ave 0.959
Test execution time: sum 6739 ms, max 178 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:08:05 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-10-22 13:08:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 54 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 8, redundant 12
Fitness: max 0.98(46), min 0.49(2), ave 0.937
Test execution time: sum 7793 ms, max 1586 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:08:23 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-10-22 13:08:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 11 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 10, redundant 10
Fitness: max 0.98(42), min 0.765(1), ave 0.967
Test execution time: sum 5879 ms, max 260 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:08:40 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-10-22 13:08:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 28 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 10, redundant 5
Fitness: max 0.98(46), min 0.49(1), ave 0.959
Test execution time: sum 6208 ms, max 170 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:08:57 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-10-22 13:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 46 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 5, redundant 6
Fitness: max 1(1), min 0.49(1), ave 0.953
Test execution time: sum 6565 ms, max 171 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:09:15 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-10-22 13:09:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 1 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 9, redundant 12
Fitness: max 0.98(40), min 0.843(1), ave 0.97
Test execution time: sum 5179 ms, max 173 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:09:30 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-10-22 13:09:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 17 seconds
Variants: generated 100, build-succeeded 50, build-failed 36, syntax-invalid 6, redundant 8
Fitness: max 0.98(46), min 0.216(1), ave 0.942
Test execution time: sum 5585 ms, max 174 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:09:46 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-10-22 13:10:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 34 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 9, redundant 13
Fitness: max 0.98(47), min 0.49(1), ave 0.963
Test execution time: sum 6006 ms, max 168 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:10:03 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-10-22 13:10:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 50 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 12, redundant 7
Fitness: max 0.98(41), min 0.49(1), ave 0.931
Test execution time: sum 5750 ms, max 170 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 13:10:19 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-10-22 13:10:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 6 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 13, redundant 9
Fitness: max 0.98(42), min 0.784(1), ave 0.969
Test execution time: sum 5462 ms, max 179 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:10:35 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-10-22 13:10:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 24 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 7, redundant 10
Fitness: max 0.98(49), min 0.549(1), ave 0.957
Test execution time: sum 6387 ms, max 195 ms, min 82 ms
----------------------------------------------------------------

2023-10-22 13:10:53 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-10-22 13:11:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 41 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 6, redundant 7
Fitness: max 0.98(53), min 0.353(1), ave 0.96
Test execution time: sum 6556 ms, max 173 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:11:10 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-10-22 13:11:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 58 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 7, redundant 10
Fitness: max 0.98(45), min 0.588(1), ave 0.96
Test execution time: sum 5762 ms, max 209 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 13:11:27 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-10-22 13:11:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 9, redundant 12
Fitness: max 0.98(44), min 0.549(1), ave 0.963
Test execution time: sum 5664 ms, max 186 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:11:42 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-10-22 13:11:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 29 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 12, redundant 4
Fitness: max 0.98(45), min 0.765(1), ave 0.967
Test execution time: sum 5684 ms, max 170 ms, min 91 ms
----------------------------------------------------------------

2023-10-22 13:11:58 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-10-22 13:12:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 46 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 3, redundant 6
Fitness: max 1(1), min 0.667(2), ave 0.96
Test execution time: sum 6677 ms, max 175 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 13:12:15 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-10-22 13:12:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 2 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 5, redundant 10
Fitness: max 0.98(47), min 0.549(1), ave 0.95
Test execution time: sum 6511 ms, max 184 ms, min 84 ms
----------------------------------------------------------------

2023-10-22 13:12:31 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-10-22 13:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 7, redundant 7
Fitness: max 0.98(50), min 0.843(1), ave 0.97
Test execution time: sum 6268 ms, max 197 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:12:48 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-10-22 13:13:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 34 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 5, redundant 10
Fitness: max 0.98(45), min 0.725(1), ave 0.959
Test execution time: sum 5857 ms, max 188 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 13:13:03 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-10-22 13:13:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 7, redundant 12
Fitness: max 0.98(49), min 0.549(2), ave 0.953
Test execution time: sum 6493 ms, max 177 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 13:13:20 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-10-22 13:13:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 6 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 9, redundant 13
Fitness: max 0.98(39), min 0.549(2), ave 0.943
Test execution time: sum 5330 ms, max 177 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 13:13:35 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-10-22 13:13:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 22 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 4, redundant 9
Fitness: max 0.98(51), min 0.667(1), ave 0.962
Test execution time: sum 6728 ms, max 179 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:13:51 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-10-22 13:14:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 8, redundant 10
Fitness: max 1(1), min 0.157(1), ave 0.958
Test execution time: sum 6157 ms, max 204 ms, min 64 ms
----------------------------------------------------------------

2023-10-22 13:14:08 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-10-22 13:14:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 53 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 11, redundant 7
Fitness: max 0.98(41), min 0.667(1), ave 0.961
Test execution time: sum 5286 ms, max 179 ms, min 89 ms
----------------------------------------------------------------

2023-10-22 13:14:22 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-10-22 13:14:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 12, redundant 6
Fitness: max 0.98(41), min 0.353(1), ave 0.928
Test execution time: sum 5907 ms, max 182 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:14:38 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-10-22 13:14:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 25 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 9, redundant 9
Fitness: max 0.98(42), min 0.667(1), ave 0.962
Test execution time: sum 5721 ms, max 171 ms, min 93 ms
----------------------------------------------------------------

2023-10-22 13:14:55 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-10-22 13:15:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 41 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 5, redundant 17
Fitness: max 0.98(42), min 0.843(1), ave 0.968
Test execution time: sum 5547 ms, max 185 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 13:15:10 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-10-22 13:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 5, redundant 15
Fitness: max 0.98(48), min 0.49(1), ave 0.961
Test execution time: sum 7215 ms, max 859 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:15:29 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-10-22 13:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 18 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 6, redundant 15
Fitness: max 0.98(44), min 0.549(1), ave 0.966
Test execution time: sum 5906 ms, max 207 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 13:15:47 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-10-22 13:16:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 3, redundant 14
Fitness: max 1(1), min 0.725(1), ave 0.961
Test execution time: sum 7000 ms, max 196 ms, min 91 ms
----------------------------------------------------------------

2023-10-22 13:16:06 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-10-22 13:16:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 53 seconds
Variants: generated 100, build-succeeded 45, build-failed 26, syntax-invalid 8, redundant 21
Fitness: max 0.98(36), min 0.49(2), ave 0.939
Test execution time: sum 5277 ms, max 206 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 13:16:22 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-10-22 13:16:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 10 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 2, redundant 9
Fitness: max 0.98(47), min 0.49(2), ave 0.944
Test execution time: sum 6256 ms, max 193 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 13:16:39 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-10-22 13:17:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 32 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 3, redundant 8
Fitness: max 0.98(53), min 0.49(2), ave 0.947
Test execution time: sum 8822 ms, max 1760 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:17:01 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-10-22 13:17:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 49 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 5, redundant 13
Fitness: max 0.98(42), min 0.49(1), ave 0.959
Test execution time: sum 5752 ms, max 191 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 13:17:18 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-10-22 13:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 9 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 5, redundant 4
Fitness: max 0.98(54), min 0.49(1), ave 0.949
Test execution time: sum 7234 ms, max 183 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:17:38 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-10-22 13:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 8, redundant 14
Fitness: max 0.98(43), min 0.353(1), ave 0.954
Test execution time: sum 5693 ms, max 189 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:17:55 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-10-22 13:18:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 44 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 6, redundant 11
Fitness: max 1(1), min 0.569(1), ave 0.968
Test execution time: sum 5719 ms, max 177 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:18:13 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-10-22 13:18:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 4 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 4, redundant 11
Fitness: max 0.98(48), min 0.549(1), ave 0.949
Test execution time: sum 7059 ms, max 182 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:18:33 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-10-22 13:18:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 22 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 7, redundant 7
Fitness: max 0.98(47), min 0.765(1), ave 0.968
Test execution time: sum 6229 ms, max 191 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 13:18:52 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-10-22 13:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 40 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 11, redundant 11
Fitness: max 0.98(40), min 0.235(1), ave 0.944
Test execution time: sum 5816 ms, max 186 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:19:09 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-10-22 13:19:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 58 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 11, redundant 6
Fitness: max 0.98(45), min 0.549(1), ave 0.96
Test execution time: sum 6031 ms, max 189 ms, min 91 ms
----------------------------------------------------------------

2023-10-22 13:19:27 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-10-22 13:19:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 18 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 5, redundant 10
Fitness: max 0.98(54), min 0.667(1), ave 0.96
Test execution time: sum 7306 ms, max 227 ms, min 86 ms
----------------------------------------------------------------

2023-10-22 13:19:47 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-10-22 13:20:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 40 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 4, redundant 7
Fitness: max 0.98(54), min 0.294(1), ave 0.95
Test execution time: sum 8015 ms, max 761 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:20:09 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-10-22 13:20:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 59 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 6, redundant 9
Fitness: max 0.98(47), min 0.49(1), ave 0.955
Test execution time: sum 6408 ms, max 183 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:20:28 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-10-22 13:20:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 18 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 0.98(48), min 0.667(1), ave 0.961
Test execution time: sum 6497 ms, max 173 ms, min 87 ms
----------------------------------------------------------------

2023-10-22 13:20:47 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-10-22 13:21:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 8, redundant 8
Fitness: max 1(1), min 0.49(1), ave 0.953
Test execution time: sum 6908 ms, max 174 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 13:21:06 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-10-22 13:21:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 58 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 8, redundant 5
Fitness: max 0.98(50), min 0.49(1), ave 0.956
Test execution time: sum 6805 ms, max 176 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:21:27 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-10-22 13:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 16 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 11, redundant 7
Fitness: max 0.98(45), min 0.549(1), ave 0.956
Test execution time: sum 6403 ms, max 194 ms, min 90 ms
----------------------------------------------------------------

2023-10-22 13:21:45 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-10-22 13:22:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 34 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 6, redundant 8
Fitness: max 0.98(50), min 0.353(1), ave 0.958
Test execution time: sum 6842 ms, max 192 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:22:03 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-10-22 13:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 53 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 10, redundant 8
Fitness: max 0.98(50), min 0.549(2), ave 0.945
Test execution time: sum 7158 ms, max 183 ms, min 95 ms
----------------------------------------------------------------

2023-10-22 13:22:22 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-10-22 13:22:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 11 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 10, redundant 7
Fitness: max 0.98(47), min 0.49(3), ave 0.945
Test execution time: sum 6610 ms, max 178 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:22:40 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-10-22 13:22:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 9, redundant 6
Fitness: max 0.98(46), min 0.49(1), ave 0.962
Test execution time: sum 6368 ms, max 170 ms, min 105 ms
----------------------------------------------------------------

2023-10-22 13:22:58 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-10-22 13:23:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 49 seconds
Variants: generated 100, build-succeeded 63, build-failed 22, syntax-invalid 7, redundant 8
Fitness: max 1(1), min 0.569(1), ave 0.959
Test execution time: sum 7696 ms, max 220 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:23:18 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-10-22 13:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 2, redundant 7
Fitness: max 0.98(54), min 0.49(1), ave 0.966
Test execution time: sum 7177 ms, max 197 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 13:23:37 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-10-22 13:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 7, redundant 12
Fitness: max 0.98(45), min 0.902(6), ave 0.97
Test execution time: sum 6539 ms, max 195 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 13:23:55 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-10-22 13:24:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 46 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 7, redundant 3
Fitness: max 0.98(53), min 0.137(1), ave 0.947
Test execution time: sum 7675 ms, max 202 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:24:15 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-10-22 13:24:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 6 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 3, redundant 6
Fitness: max 0.98(55), min 0.588(1), ave 0.968
Test execution time: sum 7587 ms, max 230 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 13:24:35 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-10-22 13:24:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 25 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 2, redundant 8
Fitness: max 0.98(57), min 0.667(1), ave 0.967
Test execution time: sum 7733 ms, max 188 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 13:24:54 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-10-22 13:25:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 6, redundant 4
Fitness: max 0.98(55), min 0.549(1), ave 0.97
Test execution time: sum 7416 ms, max 170 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 13:25:12 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-10-22 13:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 59 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 12, redundant 8
Fitness: max 0.98(42), min 0.353(1), ave 0.933
Test execution time: sum 6439 ms, max 170 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:25:28 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-10-22 13:25:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 16 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 10, redundant 8
Fitness: max 0.98(49), min 0.49(1), ave 0.965
Test execution time: sum 6548 ms, max 164 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:25:45 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-10-22 13:26:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 33 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 0.98(47), min 0.549(2), ave 0.949
Test execution time: sum 7046 ms, max 182 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 13:26:02 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-10-22 13:26:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 51 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 7, redundant 7
Fitness: max 0.98(50), min 0.157(1), ave 0.951
Test execution time: sum 7083 ms, max 162 ms, min 64 ms
----------------------------------------------------------------

2023-10-22 13:26:20 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-10-22 13:26:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 9 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 5, redundant 6
Fitness: max 0.98(55), min 0.765(2), ave 0.967
Test execution time: sum 7638 ms, max 166 ms, min 93 ms
----------------------------------------------------------------

2023-10-22 13:26:38 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-10-22 13:26:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 26 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 6, redundant 7
Fitness: max 0.98(55), min 0.157(1), ave 0.953
Test execution time: sum 7296 ms, max 167 ms, min 66 ms
----------------------------------------------------------------

2023-10-22 13:26:55 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-10-22 13:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 4, redundant 7
Fitness: max 0.98(53), min 0.569(1), ave 0.961
Test execution time: sum 7374 ms, max 189 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 13:27:14 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-10-22 13:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 7, redundant 8
Fitness: max 0.98(53), min 0.765(1), ave 0.968
Test execution time: sum 7327 ms, max 168 ms, min 92 ms
----------------------------------------------------------------

2023-10-22 13:27:32 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-10-22 13:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 5, redundant 7
Fitness: max 0.98(54), min 0.353(1), ave 0.958
Test execution time: sum 7572 ms, max 165 ms, min 106 ms
----------------------------------------------------------------

2023-10-22 13:27:50 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-10-22 13:28:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 10, redundant 2
Fitness: max 0.98(48), min 0.471(1), ave 0.948
Test execution time: sum 6918 ms, max 192 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:28:08 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-10-22 13:28:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 56 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 11, redundant 6
Fitness: max 0.98(48), min 0.549(1), ave 0.955
Test execution time: sum 7260 ms, max 184 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 13:28:25 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-10-22 13:28:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 12 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 11, redundant 9
Fitness: max 0.98(43), min 0.49(1), ave 0.949
Test execution time: sum 5935 ms, max 164 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:28:41 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-10-22 13:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 8, redundant 9
Fitness: max 0.98(50), min 0.667(1), ave 0.964
Test execution time: sum 7054 ms, max 167 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 13:28:58 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-10-22 13:29:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 6, redundant 7
Fitness: max 0.98(51), min 0.784(2), ave 0.97
Test execution time: sum 7180 ms, max 166 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 13:29:16 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-10-22 13:29:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 4 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 12, redundant 6
Fitness: max 0.98(52), min 0.471(1), ave 0.955
Test execution time: sum 7376 ms, max 177 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:29:33 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-10-22 13:29:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 24 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 4, redundant 3
Fitness: max 1(1), min 0.49(1), ave 0.959
Test execution time: sum 8423 ms, max 192 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:29:54 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-10-22 13:30:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 42 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 6, redundant 12
Fitness: max 0.98(48), min 0.471(1), ave 0.95
Test execution time: sum 7267 ms, max 169 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:30:11 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-10-22 13:30:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 0 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 0.98(50), min 0.49(1), ave 0.958
Test execution time: sum 7298 ms, max 168 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:30:29 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-10-22 13:30:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 7, redundant 6
Fitness: max 0.98(45), min 0.49(1), ave 0.949
Test execution time: sum 6852 ms, max 173 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 13:30:47 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-10-22 13:31:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 37 seconds
Variants: generated 100, build-succeeded 70, build-failed 24, syntax-invalid 3, redundant 3
Fitness: max 0.98(63), min 0.765(1), ave 0.97
Test execution time: sum 8963 ms, max 184 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:31:07 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-10-22 13:31:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 55 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.745(1), ave 0.957
Test execution time: sum 6755 ms, max 161 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 13:31:24 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-10-22 13:31:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.98(51), min 0.49(1), ave 0.965
Test execution time: sum 7953 ms, max 779 ms, min 67 ms
----------------------------------------------------------------

2023-10-22 13:31:47 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-10-22 13:32:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 41 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 6, redundant 7
Fitness: max 0.98(49), min 0.49(2), ave 0.944
Test execution time: sum 8009 ms, max 199 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:32:10 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-10-22 13:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 9, redundant 7
Fitness: max 0.98(48), min 0.549(1), ave 0.963
Test execution time: sum 6945 ms, max 192 ms, min 102 ms
----------------------------------------------------------------

2023-10-22 13:32:32 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-10-22 13:32:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 24 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 10, redundant 4
Fitness: max 0.98(47), min 0.49(2), ave 0.941
Test execution time: sum 7046 ms, max 220 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:32:53 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-10-22 13:33:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 49 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 5, redundant 3
Fitness: max 0.98(54), min 0.784(1), ave 0.969
Test execution time: sum 8609 ms, max 732 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 13:33:18 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-10-22 13:33:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 10 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 7, redundant 6
Fitness: max 0.98(53), min 0.49(1), ave 0.967
Test execution time: sum 7322 ms, max 201 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:33:39 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-10-22 13:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 10, redundant 6
Fitness: max 0.98(51), min 0.725(1), ave 0.96
Test execution time: sum 7706 ms, max 197 ms, min 95 ms
----------------------------------------------------------------

2023-10-22 13:34:01 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-10-22 13:34:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 12, redundant 5
Fitness: max 0.98(49), min 0.549(1), ave 0.96
Test execution time: sum 7342 ms, max 198 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 13:34:23 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-10-22 13:34:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 13 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 12, redundant 6
Fitness: max 1(1), min 0.549(2), ave 0.955
Test execution time: sum 6348 ms, max 194 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 13:34:43 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-10-22 13:35:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 35 seconds
Variants: generated 100, build-succeeded 60, build-failed 34, syntax-invalid 5, redundant 1
Fitness: max 1(1), min 0.549(1), ave 0.967
Test execution time: sum 7683 ms, max 213 ms, min 106 ms
----------------------------------------------------------------

2023-10-22 13:35:04 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-10-22 13:35:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 55 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 11, redundant 6
Fitness: max 1(2), min 0.686(1), ave 0.971
Test execution time: sum 6713 ms, max 181 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 13:35:24 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-10-22 13:35:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 14 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 7, redundant 3
Fitness: max 1(2), min 0.667(1), ave 0.968
Test execution time: sum 6806 ms, max 204 ms, min 92 ms
----------------------------------------------------------------

2023-10-22 13:35:43 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-10-22 13:36:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 35 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 5, redundant 7
Fitness: max 1(1), min 0.353(1), ave 0.952
Test execution time: sum 7207 ms, max 228 ms, min 96 ms
----------------------------------------------------------------

2023-10-22 13:36:04 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-10-22 13:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 56 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 6, redundant 5
Fitness: max 1(1), min 0.216(1), ave 0.95
Test execution time: sum 8227 ms, max 216 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:36:25 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-10-22 13:36:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 18 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 5, redundant 6
Fitness: max 1(2), min 0.549(1), ave 0.953
Test execution time: sum 8116 ms, max 220 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:36:47 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-10-22 13:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 38 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 1(1), min 0.49(1), ave 0.951
Test execution time: sum 7122 ms, max 180 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:37:07 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-10-22 13:37:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 58 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 1(2), min 0.549(3), ave 0.947
Test execution time: sum 7429 ms, max 187 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 13:37:27 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-10-22 13:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 24 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 11, redundant 1
Fitness: max 1(1), min 0.353(1), ave 0.941
Test execution time: sum 9877 ms, max 2138 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:37:53 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-10-22 13:38:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 47 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 6, redundant 4
Fitness: max 0.98(56), min 0.549(1), ave 0.956
Test execution time: sum 8226 ms, max 204 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 13:38:16 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-10-22 13:38:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 11, redundant 3
Fitness: max 0.98(49), min 0.235(1), ave 0.949
Test execution time: sum 7527 ms, max 213 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:38:39 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-10-22 13:39:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 33 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 8, redundant 8
Fitness: max 0.98(49), min 0.569(1), ave 0.958
Test execution time: sum 7857 ms, max 215 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 13:39:02 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-10-22 13:39:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 55 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 11, redundant 5
Fitness: max 0.98(46), min 0.549(1), ave 0.955
Test execution time: sum 7053 ms, max 219 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:39:24 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-10-22 13:39:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 13, redundant 5
Fitness: max 0.98(49), min 0.765(2), ave 0.968
Test execution time: sum 7347 ms, max 191 ms, min 95 ms
----------------------------------------------------------------

2023-10-22 13:39:46 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-10-22 13:40:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 8, redundant 2
Fitness: max 0.98(54), min 0.353(1), ave 0.952
Test execution time: sum 7903 ms, max 235 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:40:09 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-10-22 13:40:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 3 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 6, redundant 2
Fitness: max 1(1), min 0.588(1), ave 0.965
Test execution time: sum 7676 ms, max 191 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 13:40:32 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-10-22 13:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 27 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 6, redundant 6
Fitness: max 0.98(56), min 0.569(1), ave 0.969
Test execution time: sum 8201 ms, max 229 ms, min 81 ms
----------------------------------------------------------------

2023-10-22 13:40:56 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-10-22 13:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 48 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.98(54), min 0.549(1), ave 0.966
Test execution time: sum 8121 ms, max 240 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:41:17 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-10-22 13:41:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 9, redundant 6
Fitness: max 0.98(53), min 0.549(1), ave 0.964
Test execution time: sum 8067 ms, max 217 ms, min 112 ms
----------------------------------------------------------------

2023-10-22 13:41:39 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-10-22 13:42:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 5, redundant 2
Fitness: max 0.98(52), min 0.765(2), ave 0.966
Test execution time: sum 8001 ms, max 201 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:42:01 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-10-22 13:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 55 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 4, redundant 5
Fitness: max 0.98(57), min 0.549(1), ave 0.965
Test execution time: sum 8649 ms, max 206 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 13:42:24 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-10-22 13:42:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 6, redundant 3
Fitness: max 0.98(50), min 0.667(1), ave 0.965
Test execution time: sum 7253 ms, max 191 ms, min 93 ms
----------------------------------------------------------------

2023-10-22 13:42:45 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-10-22 13:43:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.98(54), min 0.549(1), ave 0.969
Test execution time: sum 7852 ms, max 188 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 13:43:07 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-10-22 13:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 1 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 7, redundant 2
Fitness: max 0.98(55), min 0.569(1), ave 0.96
Test execution time: sum 8509 ms, max 199 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 13:43:30 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-10-22 13:43:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 24 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 6, redundant 1
Fitness: max 0.98(61), min 0.765(1), ave 0.975
Test execution time: sum 8676 ms, max 204 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 13:43:53 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-10-22 13:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 43 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 8, redundant 3
Fitness: max 0.98(49), min 0.471(1), ave 0.956
Test execution time: sum 7446 ms, max 187 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 13:44:12 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-10-22 13:44:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 3 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 3, redundant 7
Fitness: max 1(1), min 0.902(2), ave 0.978
Test execution time: sum 8343 ms, max 177 ms, min 113 ms
----------------------------------------------------------------

2023-10-22 13:44:32 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-10-22 13:44:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 23 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 6, redundant 3
Fitness: max 1(1), min 0.569(1), ave 0.961
Test execution time: sum 8109 ms, max 540 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 13:44:52 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-10-22 13:45:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 45 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 7, redundant 2
Fitness: max 0.98(53), min 0.471(1), ave 0.954
Test execution time: sum 8149 ms, max 209 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:45:14 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-10-22 13:45:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 13 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 9, redundant 2
Fitness: max 0.98(52), min 0.549(2), ave 0.948
Test execution time: sum 10702 ms, max 1402 ms, min 105 ms
----------------------------------------------------------------

2023-10-22 13:45:43 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-10-22 13:46:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 40 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 10, redundant 6
Fitness: max 1(1), min 0.863(2), ave 0.973
Test execution time: sum 10759 ms, max 2303 ms, min 115 ms
----------------------------------------------------------------

2023-10-22 13:46:09 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-10-22 13:46:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 5 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 8, redundant 3
Fitness: max 0.98(52), min 0.706(1), ave 0.972
Test execution time: sum 8618 ms, max 520 ms, min 91 ms
----------------------------------------------------------------

2023-10-22 13:46:34 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-10-22 13:46:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 9, redundant 7
Fitness: max 0.98(46), min 0.49(1), ave 0.947
Test execution time: sum 8079 ms, max 197 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 13:46:59 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-10-22 13:47:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 55 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0.98(52), min 0.49(1), ave 0.95
Test execution time: sum 8092 ms, max 197 ms, min 78 ms
----------------------------------------------------------------

2023-10-22 13:47:25 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-10-22 13:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0.98(55), min 0.353(1), ave 0.966
Test execution time: sum 7724 ms, max 217 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 13:47:49 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-10-22 13:48:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 0.98(50), min 0.49(1), ave 0.965
Test execution time: sum 7250 ms, max 254 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:48:13 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-10-22 13:48:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 7 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 9, redundant 3
Fitness: max 0.98(49), min 0.765(1), ave 0.971
Test execution time: sum 7218 ms, max 252 ms, min 112 ms
----------------------------------------------------------------

2023-10-22 13:48:37 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-10-22 13:49:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 31 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.49(1), ave 0.956
Test execution time: sum 8346 ms, max 246 ms, min 81 ms
----------------------------------------------------------------

2023-10-22 13:49:00 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-10-22 13:49:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 5, redundant 4
Fitness: max 0.98(56), min 0.667(1), ave 0.968
Test execution time: sum 8198 ms, max 225 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:49:23 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-10-22 13:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 17 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 7, redundant 8
Fitness: max 0.98(49), min 0.686(1), ave 0.964
Test execution time: sum 7419 ms, max 195 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 13:49:46 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-10-22 13:50:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 40 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 3, redundant 8
Fitness: max 0.98(56), min 0.353(1), ave 0.948
Test execution time: sum 8387 ms, max 200 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:50:10 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-10-22 13:50:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 2 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 3, redundant 4
Fitness: max 0.98(58), min 0.353(1), ave 0.956
Test execution time: sum 8809 ms, max 176 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 13:50:31 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-10-22 13:50:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 24 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 13, redundant 1
Fitness: max 0.98(49), min 0.471(2), ave 0.945
Test execution time: sum 8136 ms, max 201 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:50:53 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-10-22 13:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 44 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 0.98(47), min 0.863(1), ave 0.969
Test execution time: sum 7699 ms, max 221 ms, min 119 ms
----------------------------------------------------------------

2023-10-22 13:51:13 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-10-22 13:51:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 7 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 11, redundant 4
Fitness: max 0.98(51), min 0.725(2), ave 0.965
Test execution time: sum 8859 ms, max 1837 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 13:51:36 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-10-22 13:52:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 32 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 11, redundant 4
Fitness: max 0.98(52), min 0.49(1), ave 0.951
Test execution time: sum 8347 ms, max 210 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 13:52:02 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-10-22 13:52:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 58 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 11, redundant 4
Fitness: max 0.98(49), min 0.235(1), ave 0.937
Test execution time: sum 7846 ms, max 229 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 13:52:27 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-10-22 13:52:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 21 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.157(1), ave 0.951
Test execution time: sum 6673 ms, max 217 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:52:51 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-10-22 13:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 45 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 11, redundant 3
Fitness: max 0.98(50), min 0.216(1), ave 0.947
Test execution time: sum 7409 ms, max 234 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:53:14 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-10-22 13:53:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 8 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 8, redundant 2
Fitness: max 0.98(53), min 0.549(1), ave 0.96
Test execution time: sum 7750 ms, max 221 ms, min 104 ms
----------------------------------------------------------------

2023-10-22 13:53:37 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-10-22 13:53:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 12, redundant 5
Fitness: max 0.98(48), min 0.667(1), ave 0.968
Test execution time: sum 6676 ms, max 260 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 13:53:59 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-10-22 13:54:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 53 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0.157(1), ave 0.951
Test execution time: sum 7905 ms, max 206 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 13:54:22 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-10-22 13:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 14 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 14, redundant 3
Fitness: max 0.98(44), min 0.765(1), ave 0.963
Test execution time: sum 6648 ms, max 206 ms, min 92 ms
----------------------------------------------------------------

2023-10-22 13:54:43 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-10-22 13:55:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 35 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.471(1), ave 0.953
Test execution time: sum 6776 ms, max 183 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:55:04 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-10-22 13:55:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 11, redundant 4
Fitness: max 0.98(47), min 0.157(1), ave 0.942
Test execution time: sum 9097 ms, max 1631 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:55:30 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-10-22 13:55:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 26 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 12, redundant 2
Fitness: max 1(2), min 0.588(1), ave 0.963
Test execution time: sum 7886 ms, max 222 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 13:55:56 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-10-22 13:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 10, redundant 6
Fitness: max 0.98(48), min 0.49(2), ave 0.948
Test execution time: sum 7494 ms, max 192 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 13:56:20 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-10-22 13:56:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 13 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 13, redundant 5
Fitness: max 0.98(44), min 0.549(3), ave 0.941
Test execution time: sum 6762 ms, max 205 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:56:42 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-10-22 13:57:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 36 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 13, redundant 3
Fitness: max 0.98(47), min 0.549(1), ave 0.951
Test execution time: sum 7464 ms, max 223 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 13:57:05 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-10-22 13:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 58 seconds
Variants: generated 100, build-succeeded 52, build-failed 38, syntax-invalid 9, redundant 1
Fitness: max 0.98(47), min 0.49(1), ave 0.953
Test execution time: sum 6684 ms, max 203 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 13:57:27 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-10-22 13:57:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 21 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 11, redundant 2
Fitness: max 0.98(47), min 0.765(2), ave 0.959
Test execution time: sum 7757 ms, max 350 ms, min 90 ms
----------------------------------------------------------------

2023-10-22 13:57:51 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-10-22 13:58:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 45 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 9, redundant 3
Fitness: max 0.98(48), min 0.569(1), ave 0.964
Test execution time: sum 7475 ms, max 289 ms, min 84 ms
----------------------------------------------------------------

2023-10-22 13:58:14 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-10-22 13:58:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 9 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 9, redundant 5
Fitness: max 0.98(54), min 0.804(1), ave 0.966
Test execution time: sum 8709 ms, max 272 ms, min 114 ms
----------------------------------------------------------------

2023-10-22 13:58:39 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-10-22 13:59:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 35 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.98(55), min 0.804(1), ave 0.975
Test execution time: sum 8299 ms, max 262 ms, min 114 ms
----------------------------------------------------------------

2023-10-22 13:59:04 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-10-22 13:59:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 1 seconds
Variants: generated 100, build-succeeded 68, build-failed 23, syntax-invalid 4, redundant 5
Fitness: max 0.98(59), min 0.49(2), ave 0.954
Test execution time: sum 8936 ms, max 193 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 13:59:30 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-10-22 13:59:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 24 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.529(1), ave 0.959
Test execution time: sum 7118 ms, max 211 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 13:59:53 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-10-22 14:00:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 46 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 19, redundant 2
Fitness: max 0.98(41), min 0.588(1), ave 0.957
Test execution time: sum 6732 ms, max 376 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 14:00:15 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-10-22 14:00:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 7, redundant 5
Fitness: max 0.98(55), min 0.549(1), ave 0.967
Test execution time: sum 8088 ms, max 174 ms, min 117 ms
----------------------------------------------------------------

2023-10-22 14:00:37 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-10-22 14:00:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 8, redundant 6
Fitness: max 0.98(47), min 0.863(2), ave 0.97
Test execution time: sum 7315 ms, max 238 ms, min 112 ms
----------------------------------------------------------------

2023-10-22 14:00:59 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-10-22 14:01:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 10, redundant 4
Fitness: max 0.98(48), min 0.667(1), ave 0.964
Test execution time: sum 6628 ms, max 175 ms, min 96 ms
----------------------------------------------------------------

2023-10-22 14:01:19 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-10-22 14:01:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 14, redundant 8
Fitness: max 0.98(41), min 0.49(1), ave 0.929
Test execution time: sum 6886 ms, max 159 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:01:39 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-10-22 14:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 11, redundant 4
Fitness: max 0.98(48), min 0.49(1), ave 0.961
Test execution time: sum 6976 ms, max 167 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 14:01:59 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-10-22 14:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 51 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 12, redundant 5
Fitness: max 0.98(44), min 0.49(1), ave 0.938
Test execution time: sum 7458 ms, max 234 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 14:02:20 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-10-22 14:02:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 13 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 5, redundant 8
Fitness: max 0.98(57), min 0.843(1), ave 0.973
Test execution time: sum 8033 ms, max 175 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 14:02:43 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-10-22 14:03:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 37 seconds
Variants: generated 100, build-succeeded 61, build-failed 33, syntax-invalid 3, redundant 3
Fitness: max 1(1), min 0.49(1), ave 0.954
Test execution time: sum 8115 ms, max 321 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:03:06 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-10-22 14:03:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 59 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 10, redundant 1
Fitness: max 0.98(49), min 0.667(1), ave 0.959
Test execution time: sum 8107 ms, max 204 ms, min 102 ms
----------------------------------------------------------------

2023-10-22 14:03:28 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-10-22 14:03:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 19 seconds
Variants: generated 100, build-succeeded 46, build-failed 37, syntax-invalid 15, redundant 2
Fitness: max 0.98(46), min 0.98(46), ave 0.98
Test execution time: sum 6049 ms, max 197 ms, min 112 ms
----------------------------------------------------------------

2023-10-22 14:03:48 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-10-22 14:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 0.98(51), min 0.843(1), ave 0.974
Test execution time: sum 6974 ms, max 169 ms, min 108 ms
----------------------------------------------------------------

2023-10-22 14:04:08 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-10-22 14:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 1 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 0.98(57), min 0.549(1), ave 0.97
Test execution time: sum 7851 ms, max 174 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 14:04:30 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-10-22 14:04:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 22 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 7, redundant 3
Fitness: max 0.98(57), min 0.49(1), ave 0.97
Test execution time: sum 7506 ms, max 171 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 14:04:52 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-10-22 14:05:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 45 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 4, redundant 4
Fitness: max 0.98(61), min 0.549(2), ave 0.963
Test execution time: sum 8503 ms, max 173 ms, min 102 ms
----------------------------------------------------------------

2023-10-22 14:05:14 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-10-22 14:05:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 7, redundant 6
Fitness: max 0.98(50), min 0.843(2), ave 0.967
Test execution time: sum 7572 ms, max 173 ms, min 105 ms
----------------------------------------------------------------

2023-10-22 14:05:36 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-10-22 14:05:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 13, redundant 2
Fitness: max 0.98(47), min 0.569(1), ave 0.965
Test execution time: sum 6843 ms, max 182 ms, min 84 ms
----------------------------------------------------------------

2023-10-22 14:05:56 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-10-22 14:06:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 50 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 3, redundant 6
Fitness: max 1(1), min 0.863(2), ave 0.974
Test execution time: sum 8176 ms, max 265 ms, min 113 ms
----------------------------------------------------------------

2023-10-22 14:06:20 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-10-22 14:06:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 13 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 5, redundant 5
Fitness: max 0.98(54), min 0.49(1), ave 0.951
Test execution time: sum 7773 ms, max 179 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:06:42 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-10-22 14:07:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 35 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 3, redundant 5
Fitness: max 1(2), min 0.137(1), ave 0.943
Test execution time: sum 7673 ms, max 166 ms, min 68 ms
----------------------------------------------------------------

2023-10-22 14:07:05 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-10-22 14:07:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 58 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 9, redundant 4
Fitness: max 0.98(50), min 0.549(1), ave 0.967
Test execution time: sum 7972 ms, max 363 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 14:07:27 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-10-22 14:07:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 22 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 5, redundant 2
Fitness: max 1(1), min 0.569(1), ave 0.954
Test execution time: sum 9034 ms, max 232 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 14:07:51 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-10-22 14:08:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 48 seconds
Variants: generated 100, build-succeeded 68, build-failed 27, syntax-invalid 3, redundant 2
Fitness: max 1(1), min 0.51(1), ave 0.96
Test execution time: sum 10348 ms, max 243 ms, min 89 ms
----------------------------------------------------------------

2023-10-22 14:08:18 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-10-22 14:08:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 6, redundant 6
Fitness: max 0.98(51), min 0.569(1), ave 0.963
Test execution time: sum 9660 ms, max 370 ms, min 96 ms
----------------------------------------------------------------

2023-10-22 14:08:44 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-10-22 14:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 46 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 6, redundant 1
Fitness: max 0.98(56), min 0.49(1), ave 0.96
Test execution time: sum 12674 ms, max 465 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 14:09:15 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-10-22 14:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 19 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 9, redundant 3
Fitness: max 0.98(53), min 0.49(1), ave 0.967
Test execution time: sum 13499 ms, max 3363 ms, min 85 ms
----------------------------------------------------------------

2023-10-22 14:09:49 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-10-22 14:10:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 8, redundant 3
Fitness: max 0.98(52), min 0.863(2), ave 0.974
Test execution time: sum 10865 ms, max 441 ms, min 127 ms
----------------------------------------------------------------

2023-10-22 14:10:19 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-10-22 14:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0.98(51), min 0.49(1), ave 0.961
Test execution time: sum 9161 ms, max 313 ms, min 81 ms
----------------------------------------------------------------

2023-10-22 14:10:48 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-10-22 14:11:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 47 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 8, redundant 2
Fitness: max 0.98(54), min 0.353(1), ave 0.934
Test execution time: sum 10131 ms, max 279 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 14:11:16 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-10-22 14:11:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 13 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 21, redundant 4
Fitness: max 0.98(42), min 0.275(1), ave 0.942
Test execution time: sum 8586 ms, max 318 ms, min 108 ms
----------------------------------------------------------------

2023-10-22 14:11:43 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-10-22 14:12:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 42 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 9, redundant 3
Fitness: max 0.98(55), min 0.765(1), ave 0.975
Test execution time: sum 9773 ms, max 388 ms, min 116 ms
----------------------------------------------------------------

2023-10-22 14:12:11 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-10-22 14:12:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 8 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 9, redundant 7
Fitness: max 0.98(50), min 0.49(1), ave 0.964
Test execution time: sum 7931 ms, max 291 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 14:12:37 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-10-22 14:13:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 41 seconds
Variants: generated 100, build-succeeded 65, build-failed 23, syntax-invalid 8, redundant 4
Fitness: max 0.98(55), min 0.549(2), ave 0.954
Test execution time: sum 13762 ms, max 2295 ms, min 104 ms
----------------------------------------------------------------

2023-10-22 14:13:10 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-10-22 14:13:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 11 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 12, redundant 6
Fitness: max 0.98(50), min 0.157(1), ave 0.933
Test execution time: sum 9903 ms, max 270 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:13:40 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-10-22 14:14:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 42 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 0.98(52), min 0.49(1), ave 0.965
Test execution time: sum 9266 ms, max 286 ms, min 115 ms
----------------------------------------------------------------

2023-10-22 14:14:11 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-10-22 14:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0.98(46), min 0.49(1), ave 0.946
Test execution time: sum 8098 ms, max 272 ms, min 81 ms
----------------------------------------------------------------

2023-10-22 14:14:36 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-10-22 14:15:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 33 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.549(1), ave 0.962
Test execution time: sum 7927 ms, max 218 ms, min 108 ms
----------------------------------------------------------------

2023-10-22 14:15:02 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-10-22 14:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 59 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 10, redundant 2
Fitness: max 1(1), min 0.549(1), ave 0.968
Test execution time: sum 8845 ms, max 258 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 14:15:29 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-10-22 14:15:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 25 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0.98(49), min 0.353(1), ave 0.948
Test execution time: sum 7978 ms, max 287 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 14:15:54 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-10-22 14:16:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 50 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 7, redundant 6
Fitness: max 0.98(52), min 0.49(1), ave 0.96
Test execution time: sum 7459 ms, max 192 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 14:16:19 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-10-22 14:16:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 9, redundant 3
Fitness: max 0.98(55), min 0.863(1), ave 0.976
Test execution time: sum 8824 ms, max 266 ms, min 113 ms
----------------------------------------------------------------

2023-10-22 14:16:46 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-10-22 14:17:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 22, syntax-invalid 14, redundant 5
Fitness: max 0.98(51), min 0.549(2), ave 0.956
Test execution time: sum 7704 ms, max 191 ms, min 96 ms
----------------------------------------------------------------

2023-10-22 14:17:10 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-10-22 14:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 6 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 8, redundant 6
Fitness: max 0.98(52), min 0.353(1), ave 0.94
Test execution time: sum 7732 ms, max 190 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 14:17:35 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-10-22 14:17:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 28 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 18, redundant 6
Fitness: max 0.98(45), min 0.49(1), ave 0.966
Test execution time: sum 6250 ms, max 192 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 14:17:57 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-10-22 14:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 53 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 7, redundant 4
Fitness: max 0.98(51), min 0.275(1), ave 0.954
Test execution time: sum 7942 ms, max 200 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:18:23 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-10-22 14:18:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 25 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 11, redundant 3
Fitness: max 0.98(49), min 0.667(1), ave 0.952
Test execution time: sum 11442 ms, max 3581 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 14:18:54 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-10-22 14:19:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 16, redundant 3
Fitness: max 0.98(46), min 0.667(1), ave 0.961
Test execution time: sum 7502 ms, max 232 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 14:19:21 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-10-22 14:19:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 19 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 11, redundant 3
Fitness: max 0.98(52), min 0.725(1), ave 0.953
Test execution time: sum 8406 ms, max 209 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 14:19:48 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-10-22 14:20:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 15, redundant 6
Fitness: max 0.98(48), min 0.294(1), ave 0.943
Test execution time: sum 7501 ms, max 201 ms, min 78 ms
----------------------------------------------------------------

2023-10-22 14:20:15 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-10-22 14:20:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 13 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 8, redundant 6
Fitness: max 0.98(56), min 0.49(1), ave 0.964
Test execution time: sum 7819 ms, max 205 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 14:20:42 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-10-22 14:21:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 14, redundant 5
Fitness: max 0.98(45), min 0.157(1), ave 0.953
Test execution time: sum 7835 ms, max 1423 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 14:21:09 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-10-22 14:21:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 3 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 15, redundant 6
Fitness: max 0.98(40), min 0.549(1), ave 0.95
Test execution time: sum 6231 ms, max 190 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 14:21:32 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-10-22 14:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 28 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 13, redundant 4
Fitness: max 0.98(46), min 0.549(1), ave 0.965
Test execution time: sum 6480 ms, max 195 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 14:21:57 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-10-22 14:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 15, redundant 3
Fitness: max 0.98(44), min 0.49(1), ave 0.947
Test execution time: sum 6853 ms, max 191 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 14:22:22 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-10-22 14:22:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 15 seconds
Variants: generated 100, build-succeeded 46, build-failed 28, syntax-invalid 20, redundant 6
Fitness: max 0.98(43), min 0.49(1), ave 0.968
Test execution time: sum 5759 ms, max 204 ms, min 105 ms
----------------------------------------------------------------

2023-10-22 14:22:44 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-10-22 14:23:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 40 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 18, redundant 3
Fitness: max 0.98(43), min 0.843(1), ave 0.969
Test execution time: sum 6615 ms, max 193 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 14:23:10 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-10-22 14:23:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 13, redundant 4
Fitness: max 0.98(45), min 0.294(1), ave 0.948
Test execution time: sum 6802 ms, max 241 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 14:23:34 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-10-22 14:23:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 27 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 17, redundant 3
Fitness: max 0.98(42), min 0.549(1), ave 0.965
Test execution time: sum 5707 ms, max 206 ms, min 104 ms
----------------------------------------------------------------

2023-10-22 14:23:56 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-10-22 14:24:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 17, redundant 1
Fitness: max 0.98(48), min 0.588(1), ave 0.962
Test execution time: sum 6623 ms, max 181 ms, min 84 ms
----------------------------------------------------------------

2023-10-22 14:24:19 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-10-22 14:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 11 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 20, redundant 2
Fitness: max 0.98(42), min 0.353(1), ave 0.963
Test execution time: sum 5832 ms, max 214 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:24:41 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-10-22 14:25:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 20, redundant 2
Fitness: max 0.98(41), min 0.216(1), ave 0.953
Test execution time: sum 6065 ms, max 185 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 14:25:03 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-10-22 14:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 54 seconds
Variants: generated 100, build-succeeded 42, build-failed 29, syntax-invalid 26, redundant 3
Fitness: max 0.98(34), min 0.843(1), ave 0.961
Test execution time: sum 5179 ms, max 189 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 14:25:23 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-10-22 14:25:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 21 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 20, redundant 4
Fitness: max 0.98(41), min 0.824(1), ave 0.961
Test execution time: sum 9384 ms, max 2901 ms, min 104 ms
----------------------------------------------------------------

2023-10-22 14:25:50 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-10-22 14:26:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 18, redundant 2
Fitness: max 0.98(41), min 0.49(1), ave 0.935
Test execution time: sum 7619 ms, max 1261 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:26:15 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-10-22 14:26:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 13 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 13, redundant 3
Fitness: max 0.98(49), min 0.353(1), ave 0.958
Test execution time: sum 7221 ms, max 191 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 14:26:42 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-10-22 14:27:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 37 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 18, redundant 3
Fitness: max 0.98(44), min 0.549(1), ave 0.953
Test execution time: sum 6478 ms, max 191 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 14:27:06 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-10-22 14:27:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 0 seconds
Variants: generated 100, build-succeeded 46, build-failed 26, syntax-invalid 25, redundant 3
Fitness: max 0.98(39), min 0.353(1), ave 0.952
Test execution time: sum 5735 ms, max 213 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:27:29 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-10-22 14:27:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 24 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 18, redundant 4
Fitness: max 0.98(39), min 0.255(1), ave 0.922
Test execution time: sum 5806 ms, max 181 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 14:27:53 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-10-22 14:28:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 17, redundant 3
Fitness: max 0.98(46), min 0.49(1), ave 0.956
Test execution time: sum 6724 ms, max 190 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 14:28:19 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-10-22 14:28:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 12 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 22, redundant 2
Fitness: max 1(1), min 0.49(1), ave 0.961
Test execution time: sum 5516 ms, max 191 ms, min 106 ms
----------------------------------------------------------------

2023-10-22 14:28:41 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-10-22 14:29:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 36 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 17, redundant 3
Fitness: max 0.98(44), min 0.725(1), ave 0.968
Test execution time: sum 6018 ms, max 203 ms, min 95 ms
----------------------------------------------------------------

2023-10-22 14:29:05 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-10-22 14:29:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 1 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 19, redundant 5
Fitness: max 1(1), min 0.765(1), ave 0.963
Test execution time: sum 6592 ms, max 228 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 14:29:30 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-10-22 14:29:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 18, redundant 4
Fitness: max 0.98(44), min 0.588(2), ave 0.955
Test execution time: sum 6368 ms, max 197 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 14:29:54 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-10-22 14:30:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 53 seconds
Variants: generated 100, build-succeeded 60, build-failed 21, syntax-invalid 11, redundant 8
Fitness: max 0.98(56), min 0.49(2), ave 0.959
Test execution time: sum 7989 ms, max 254 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:30:22 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-10-22 14:30:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 17 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 16, redundant 5
Fitness: max 0.98(46), min 0.569(1), ave 0.962
Test execution time: sum 6830 ms, max 231 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 14:30:47 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-10-22 14:31:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 41 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 17, redundant 1
Fitness: max 0.98(42), min 0.353(1), ave 0.938
Test execution time: sum 5995 ms, max 204 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 14:31:10 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-10-22 14:31:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 11, redundant 6
Fitness: max 0.98(52), min 0.902(1), ave 0.979
Test execution time: sum 6769 ms, max 227 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 14:31:36 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-10-22 14:32:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 32 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 11, redundant 2
Fitness: max 0.98(48), min 0.216(1), ave 0.955
Test execution time: sum 6829 ms, max 205 ms, min 78 ms
----------------------------------------------------------------

2023-10-22 14:32:01 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-10-22 14:32:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 5, redundant 9
Fitness: max 0.98(54), min 0.549(1), ave 0.968
Test execution time: sum 7253 ms, max 185 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 14:32:27 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-10-22 14:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 22 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 16, redundant 5
Fitness: max 0.98(45), min 0.843(1), ave 0.973
Test execution time: sum 6195 ms, max 192 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 14:32:51 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-10-22 14:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 48 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 12, redundant 2
Fitness: max 0.98(53), min 0.157(1), ave 0.959
Test execution time: sum 7233 ms, max 256 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 14:33:17 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-10-22 14:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 12 seconds
Variants: generated 100, build-succeeded 49, build-failed 25, syntax-invalid 20, redundant 6
Fitness: max 0.98(43), min 0.49(1), ave 0.954
Test execution time: sum 6121 ms, max 194 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:33:41 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-10-22 14:34:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 38 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 7, redundant 5
Fitness: max 0.98(53), min 0.765(1), ave 0.975
Test execution time: sum 7217 ms, max 219 ms, min 98 ms
----------------------------------------------------------------

2023-10-22 14:34:07 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-10-22 14:34:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 7 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 10, redundant 0
Fitness: max 0.98(59), min 0.549(1), ave 0.964
Test execution time: sum 8749 ms, max 213 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 14:34:36 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-10-22 14:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 33 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 8, redundant 11
Fitness: max 0.98(54), min 0.549(1), ave 0.97
Test execution time: sum 7682 ms, max 199 ms, min 103 ms
----------------------------------------------------------------

2023-10-22 14:35:03 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-10-22 14:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0.98(52), min 0.157(2), ave 0.94
Test execution time: sum 7818 ms, max 202 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 14:35:30 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-10-22 14:35:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 14, redundant 3
Fitness: max 0.98(52), min 0.569(1), ave 0.966
Test execution time: sum 7726 ms, max 178 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 14:35:55 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-10-22 14:36:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 15, redundant 5
Fitness: max 0.98(50), min 0.784(1), ave 0.973
Test execution time: sum 7081 ms, max 203 ms, min 103 ms
----------------------------------------------------------------

2023-10-22 14:36:19 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-10-22 14:36:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 19 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 15, redundant 0
Fitness: max 0.98(47), min 0.549(1), ave 0.962
Test execution time: sum 8434 ms, max 1294 ms, min 96 ms
----------------------------------------------------------------

2023-10-22 14:36:48 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-10-22 14:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 47 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 11, redundant 5
Fitness: max 0.98(48), min 0.863(1), ave 0.978
Test execution time: sum 7082 ms, max 232 ms, min 114 ms
----------------------------------------------------------------

2023-10-22 14:37:17 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-10-22 14:37:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 18 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 14, redundant 6
Fitness: max 0.98(44), min 0.824(1), ave 0.969
Test execution time: sum 8412 ms, max 952 ms, min 111 ms
----------------------------------------------------------------

2023-10-22 14:37:47 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-10-22 14:38:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 45 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 15, redundant 3
Fitness: max 0.98(42), min 0.49(2), ave 0.934
Test execution time: sum 7134 ms, max 221 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 14:38:14 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-10-22 14:38:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 14 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 13, redundant 3
Fitness: max 0.98(45), min 0.49(1), ave 0.963
Test execution time: sum 7003 ms, max 218 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 14:38:43 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-10-22 14:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 12, redundant 3
Fitness: max 0.98(49), min 0.49(1), ave 0.946
Test execution time: sum 8084 ms, max 213 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 14:39:13 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-10-22 14:39:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 14, redundant 4
Fitness: max 0.98(47), min 0.49(1), ave 0.967
Test execution time: sum 7212 ms, max 225 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 14:39:41 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-10-22 14:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 17, redundant 5
Fitness: max 0.98(46), min 0.863(4), ave 0.968
Test execution time: sum 7141 ms, max 187 ms, min 113 ms
----------------------------------------------------------------

2023-10-22 14:40:08 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-10-22 14:40:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 9, redundant 1
Fitness: max 0.98(51), min 0.784(1), ave 0.967
Test execution time: sum 8039 ms, max 196 ms, min 113 ms
----------------------------------------------------------------

2023-10-22 14:40:37 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-10-22 14:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 34 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 10, redundant 7
Fitness: max 0.98(52), min 0.49(1), ave 0.96
Test execution time: sum 7693 ms, max 215 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:41:04 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-10-22 14:41:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.98(52), min 0.569(1), ave 0.963
Test execution time: sum 7725 ms, max 193 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 14:41:31 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-10-22 14:41:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 27 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 19, redundant 4
Fitness: max 0.98(42), min 0.765(1), ave 0.967
Test execution time: sum 6426 ms, max 233 ms, min 103 ms
----------------------------------------------------------------

2023-10-22 14:41:56 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-10-22 14:42:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.98(49), min 0.765(1), ave 0.968
Test execution time: sum 7283 ms, max 201 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 14:42:22 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-10-22 14:42:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 18 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 15, redundant 1
Fitness: max 1(1), min 0.137(1), ave 0.94
Test execution time: sum 6527 ms, max 234 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 14:42:47 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-10-22 14:43:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 46 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 8, redundant 8
Fitness: max 0.98(53), min 0.294(1), ave 0.961
Test execution time: sum 8007 ms, max 214 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 14:43:15 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-10-22 14:43:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 12 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 0.98(51), min 0.49(1), ave 0.964
Test execution time: sum 7729 ms, max 201 ms, min 93 ms
----------------------------------------------------------------

2023-10-22 14:43:41 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-10-22 14:44:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 38 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 14, redundant 1
Fitness: max 0.98(46), min 0.843(1), ave 0.967
Test execution time: sum 6911 ms, max 192 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 14:44:07 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-10-22 14:44:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 5 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 7, redundant 4
Fitness: max 0.98(52), min 0.51(1), ave 0.947
Test execution time: sum 7953 ms, max 195 ms, min 87 ms
----------------------------------------------------------------

2023-10-22 14:44:34 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-10-22 14:44:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 29 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 12, redundant 4
Fitness: max 0.98(46), min 0.353(1), ave 0.942
Test execution time: sum 6968 ms, max 171 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 14:44:58 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-10-22 14:45:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 58 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 12, redundant 6
Fitness: max 0.98(48), min 0.49(1), ave 0.952
Test execution time: sum 8559 ms, max 1291 ms, min 72 ms
----------------------------------------------------------------

2023-10-22 14:45:27 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-10-22 14:45:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 8, redundant 4
Fitness: max 0.98(54), min 0.49(1), ave 0.954
Test execution time: sum 8267 ms, max 200 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:45:58 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-10-22 14:46:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 0 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 8, redundant 3
Fitness: max 0.98(54), min 0.549(1), ave 0.962
Test execution time: sum 8377 ms, max 234 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 14:46:29 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-10-22 14:46:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 13, redundant 2
Fitness: max 0.98(52), min 0.549(1), ave 0.959
Test execution time: sum 7692 ms, max 199 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 14:46:58 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-10-22 14:47:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 57 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.98(56), min 0.902(1), ave 0.979
Test execution time: sum 7526 ms, max 187 ms, min 116 ms
----------------------------------------------------------------

2023-10-22 14:47:26 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-10-22 14:47:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 7, redundant 4
Fitness: max 0.98(49), min 0.765(1), ave 0.967
Test execution time: sum 6885 ms, max 235 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 14:47:53 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-10-22 14:48:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.98(54), min 0.49(1), ave 0.964
Test execution time: sum 7747 ms, max 224 ms, min 82 ms
----------------------------------------------------------------

2023-10-22 14:48:21 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-10-22 14:48:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 20 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 5, redundant 5
Fitness: max 0.98(53), min 0.49(2), ave 0.954
Test execution time: sum 7737 ms, max 205 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:48:49 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-10-22 14:49:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 51 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 1, redundant 10
Fitness: max 0.98(59), min 0.765(1), ave 0.969
Test execution time: sum 8556 ms, max 197 ms, min 96 ms
----------------------------------------------------------------

2023-10-22 14:49:20 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-10-22 14:49:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 10, redundant 5
Fitness: max 0.98(51), min 0.49(1), ave 0.951
Test execution time: sum 7497 ms, max 220 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:49:47 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-10-22 14:50:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 46 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 5, redundant 3
Fitness: max 0.98(56), min 0.549(1), ave 0.964
Test execution time: sum 8113 ms, max 232 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 14:50:15 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-10-22 14:50:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 17 seconds
Variants: generated 100, build-succeeded 66, build-failed 28, syntax-invalid 4, redundant 2
Fitness: max 0.98(61), min 0.549(1), ave 0.962
Test execution time: sum 8907 ms, max 198 ms, min 90 ms
----------------------------------------------------------------

2023-10-22 14:50:46 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-10-22 14:51:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 50 seconds
Variants: generated 100, build-succeeded 67, build-failed 29, syntax-invalid 1, redundant 3
Fitness: max 0.98(60), min 0.529(1), ave 0.96
Test execution time: sum 9669 ms, max 799 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 14:51:20 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-10-22 14:51:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 22 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 2, redundant 6
Fitness: max 0.98(57), min 0.863(2), ave 0.975
Test execution time: sum 8142 ms, max 221 ms, min 110 ms
----------------------------------------------------------------

2023-10-22 14:51:52 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-10-22 14:52:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 55 seconds
Variants: generated 100, build-succeeded 73, build-failed 18, syntax-invalid 6, redundant 3
Fitness: max 0.98(57), min 0.137(1), ave 0.93
Test execution time: sum 9257 ms, max 197 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 14:52:25 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-10-22 14:52:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 5, redundant 4
Fitness: max 1(1), min 0.863(4), ave 0.967
Test execution time: sum 8553 ms, max 216 ms, min 103 ms
----------------------------------------------------------------

2023-10-22 14:52:58 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-10-22 14:53:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 59 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0.98(51), min 0.765(1), ave 0.967
Test execution time: sum 7640 ms, max 194 ms, min 95 ms
----------------------------------------------------------------

2023-10-22 14:53:29 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-10-22 14:53:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 30 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 12, redundant 8
Fitness: max 0.98(50), min 0.49(1), ave 0.965
Test execution time: sum 7374 ms, max 208 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:53:59 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-10-22 14:54:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 58 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 9, redundant 6
Fitness: max 0.98(53), min 0.588(1), ave 0.961
Test execution time: sum 7563 ms, max 213 ms, min 91 ms
----------------------------------------------------------------

2023-10-22 14:54:27 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-10-22 14:54:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 27 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 6, redundant 2
Fitness: max 0.98(53), min 0.216(1), ave 0.958
Test execution time: sum 7597 ms, max 191 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 14:54:56 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-10-22 14:55:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 57 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 7, redundant 8
Fitness: max 0.98(52), min 0.235(1), ave 0.938
Test execution time: sum 7532 ms, max 223 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 14:55:26 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-10-22 14:55:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 27 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 5, redundant 4
Fitness: max 0.98(53), min 0.275(1), ave 0.956
Test execution time: sum 8111 ms, max 291 ms, min 86 ms
----------------------------------------------------------------

2023-10-22 14:55:56 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-10-22 14:56:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 59 seconds
Variants: generated 100, build-succeeded 68, build-failed 26, syntax-invalid 5, redundant 1
Fitness: max 0.98(57), min 0.784(1), ave 0.964
Test execution time: sum 9134 ms, max 227 ms, min 112 ms
----------------------------------------------------------------

2023-10-22 14:56:28 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-10-22 14:56:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 1(1), min 0.549(1), ave 0.96
Test execution time: sum 7950 ms, max 379 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 14:56:58 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-10-22 14:57:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 59 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 9, redundant 2
Fitness: max 0.98(53), min 0.431(1), ave 0.948
Test execution time: sum 7639 ms, max 204 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 14:57:28 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-10-22 14:57:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 27 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0.98(49), min 0.157(1), ave 0.95
Test execution time: sum 6926 ms, max 200 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 14:57:57 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-10-22 14:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 57 seconds
Variants: generated 100, build-succeeded 63, build-failed 21, syntax-invalid 13, redundant 3
Fitness: max 0.98(52), min 0.549(1), ave 0.956
Test execution time: sum 8099 ms, max 220 ms, min 104 ms
----------------------------------------------------------------

2023-10-22 14:58:26 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-10-22 14:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 26 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 14, redundant 2
Fitness: max 0.98(41), min 0.529(1), ave 0.945
Test execution time: sum 8308 ms, max 1939 ms, min 106 ms
----------------------------------------------------------------

2023-10-22 14:58:55 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-10-22 14:59:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 15, redundant 4
Fitness: max 0.98(44), min 0.49(1), ave 0.954
Test execution time: sum 6635 ms, max 196 ms, min 74 ms
----------------------------------------------------------------

2023-10-22 14:59:22 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-10-22 14:59:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 27 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 8, redundant 4
Fitness: max 0.98(52), min 0.49(1), ave 0.954
Test execution time: sum 8398 ms, max 226 ms, min 85 ms
----------------------------------------------------------------

2023-10-22 14:59:56 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-10-22 15:00:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 56 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 11, redundant 10
Fitness: max 0.98(42), min 0.49(1), ave 0.96
Test execution time: sum 6213 ms, max 191 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 15:00:25 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-10-22 15:00:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 11, redundant 5
Fitness: max 0.98(50), min 0.765(1), ave 0.974
Test execution time: sum 6753 ms, max 198 ms, min 100 ms
----------------------------------------------------------------

2023-10-22 15:00:55 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-10-22 15:01:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 9, redundant 3
Fitness: max 0.98(50), min 0.549(1), ave 0.965
Test execution time: sum 7329 ms, max 212 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 15:01:26 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-10-22 15:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 10, redundant 5
Fitness: max 0.98(53), min 0.706(1), ave 0.967
Test execution time: sum 7743 ms, max 204 ms, min 92 ms
----------------------------------------------------------------

2023-10-22 15:01:59 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-10-22 15:02:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 1 seconds
Variants: generated 100, build-succeeded 70, build-failed 20, syntax-invalid 7, redundant 3
Fitness: max 0.98(62), min 0.49(1), ave 0.961
Test execution time: sum 8939 ms, max 267 ms, min 83 ms
----------------------------------------------------------------

2023-10-22 15:02:30 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-10-22 15:02:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 38, syntax-invalid 8, redundant 1
Fitness: max 0.98(50), min 0.824(1), ave 0.976
Test execution time: sum 6354 ms, max 198 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 15:02:59 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-10-22 15:03:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 10, redundant 7
Fitness: max 0.98(51), min 0.765(1), ave 0.969
Test execution time: sum 6908 ms, max 238 ms, min 108 ms
----------------------------------------------------------------

2023-10-22 15:03:28 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-10-22 15:03:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 0.98(55), min 0.137(1), ave 0.949
Test execution time: sum 7822 ms, max 193 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 15:03:58 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-10-22 15:04:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0.98(50), min 0.49(1), ave 0.963
Test execution time: sum 7419 ms, max 287 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 15:04:29 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-10-22 15:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 31 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 9, redundant 3
Fitness: max 0.98(50), min 0.667(1), ave 0.957
Test execution time: sum 7683 ms, max 180 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 15:05:00 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-10-22 15:05:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.98(50), min 0.294(1), ave 0.945
Test execution time: sum 7550 ms, max 251 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 15:05:31 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-10-22 15:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 33 seconds
Variants: generated 100, build-succeeded 67, build-failed 22, syntax-invalid 5, redundant 6
Fitness: max 0.98(60), min 0.784(1), ave 0.968
Test execution time: sum 8395 ms, max 218 ms, min 106 ms
----------------------------------------------------------------

2023-10-22 15:06:02 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-10-22 15:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 11, redundant 4
Fitness: max 0.98(47), min 0.902(2), ave 0.977
Test execution time: sum 6148 ms, max 176 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 15:06:30 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-10-22 15:06:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 28 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0.98(47), min 0.255(1), ave 0.943
Test execution time: sum 6956 ms, max 215 ms, min 78 ms
----------------------------------------------------------------

2023-10-22 15:06:57 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-10-22 15:07:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 56 seconds
Variants: generated 100, build-succeeded 64, build-failed 31, syntax-invalid 4, redundant 1
Fitness: max 0.98(55), min 0.471(1), ave 0.935
Test execution time: sum 7492 ms, max 174 ms, min 73 ms
----------------------------------------------------------------

2023-10-22 15:07:25 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-10-22 15:07:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 24 seconds
Variants: generated 100, build-succeeded 66, build-failed 25, syntax-invalid 5, redundant 4
Fitness: max 0.98(59), min 0.157(1), ave 0.958
Test execution time: sum 7988 ms, max 164 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 15:07:53 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-10-22 15:08:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 1 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 3, redundant 7
Fitness: max 0.98(58), min 0.588(1), ave 0.968
Test execution time: sum 11182 ms, max 3163 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 15:08:30 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-10-22 15:09:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 32 seconds
Variants: generated 100, build-succeeded 67, build-failed 29, syntax-invalid 2, redundant 2
Fitness: max 0.98(61), min 0.549(1), ave 0.962
Test execution time: sum 8172 ms, max 181 ms, min 102 ms
----------------------------------------------------------------

2023-10-22 15:09:01 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-10-22 15:09:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 2 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 3, redundant 9
Fitness: max 0.98(54), min 0.863(3), ave 0.973
Test execution time: sum 7715 ms, max 281 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 15:09:31 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-10-22 15:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 35 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 5, redundant 6
Fitness: max 0.98(57), min 0.765(1), ave 0.969
Test execution time: sum 8315 ms, max 249 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 15:10:05 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-10-22 15:10:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 11 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 6, redundant 0
Fitness: max 1(1), min 0.49(1), ave 0.957
Test execution time: sum 8897 ms, max 237 ms, min 103 ms
----------------------------------------------------------------

2023-10-22 15:10:40 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-10-22 15:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 44 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 6, redundant 5
Fitness: max 0.98(52), min 0.49(1), ave 0.966
Test execution time: sum 7543 ms, max 226 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 15:11:13 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-10-22 15:11:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 17 seconds
Variants: generated 100, build-succeeded 65, build-failed 30, syntax-invalid 0, redundant 5
Fitness: max 0.98(60), min 0.49(1), ave 0.962
Test execution time: sum 8241 ms, max 221 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 15:11:46 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-10-22 15:12:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0.98(54), min 0.51(1), ave 0.967
Test execution time: sum 7735 ms, max 209 ms, min 87 ms
----------------------------------------------------------------

2023-10-22 15:12:19 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-10-22 15:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 19 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 10, redundant 3
Fitness: max 0.98(51), min 0.235(1), ave 0.949
Test execution time: sum 6795 ms, max 181 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 15:12:48 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-10-22 15:13:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 47 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.98(49), min 0.824(1), ave 0.97
Test execution time: sum 6822 ms, max 215 ms, min 101 ms
----------------------------------------------------------------

2023-10-22 15:13:17 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-10-22 15:13:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 17 seconds
Variants: generated 100, build-succeeded 60, build-failed 21, syntax-invalid 10, redundant 9
Fitness: max 1(1), min 0.49(1), ave 0.964
Test execution time: sum 7360 ms, max 217 ms, min 71 ms
----------------------------------------------------------------

2023-10-22 15:13:46 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-10-22 15:14:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 48 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 9, redundant 5
Fitness: max 0.98(55), min 0.725(1), ave 0.969
Test execution time: sum 7659 ms, max 221 ms, min 102 ms
----------------------------------------------------------------

2023-10-22 15:14:17 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-10-22 15:14:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 17 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 7, redundant 3
Fitness: max 0.98(51), min 0.725(1), ave 0.963
Test execution time: sum 6737 ms, max 182 ms, min 99 ms
----------------------------------------------------------------

2023-10-22 15:14:46 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-10-22 15:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 46 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 0.98(51), min 0.49(1), ave 0.954
Test execution time: sum 7071 ms, max 216 ms, min 80 ms
----------------------------------------------------------------

2023-10-22 15:15:15 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-10-22 15:15:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 15 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 10, redundant 4
Fitness: max 0.98(50), min 0.137(1), ave 0.963
Test execution time: sum 6227 ms, max 177 ms, min 69 ms
----------------------------------------------------------------

2023-10-22 15:15:44 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-10-22 15:16:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 44 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 11, redundant 5
Fitness: max 0.98(53), min 0.804(1), ave 0.968
Test execution time: sum 7273 ms, max 226 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 15:16:13 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-10-22 15:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 14 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 5, redundant 3
Fitness: max 0.98(56), min 0.765(1), ave 0.971
Test execution time: sum 7183 ms, max 190 ms, min 97 ms
----------------------------------------------------------------

2023-10-22 15:16:43 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-10-22 15:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 44 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0.98(55), min 0.353(1), ave 0.946
Test execution time: sum 7228 ms, max 184 ms, min 75 ms
----------------------------------------------------------------

2023-10-22 15:17:13 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-10-22 15:17:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 14, redundant 4
Fitness: max 0.98(47), min 0.137(1), ave 0.938
Test execution time: sum 6343 ms, max 187 ms, min 76 ms
----------------------------------------------------------------

2023-10-22 15:17:40 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-10-22 15:18:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 42 seconds
Variants: generated 100, build-succeeded 65, build-failed 18, syntax-invalid 9, redundant 8
Fitness: max 0.98(49), min 0.137(1), ave 0.944
Test execution time: sum 8054 ms, max 205 ms, min 70 ms
----------------------------------------------------------------

2023-10-22 15:18:11 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-10-22 15:18:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 12 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 12, redundant 4
Fitness: max 0.98(52), min 0.588(1), ave 0.966
Test execution time: sum 7625 ms, max 227 ms, min 78 ms
----------------------------------------------------------------

2023-10-22 15:18:41 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-10-22 15:19:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 42 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 11, redundant 4
Fitness: max 0.98(47), min 0.863(1), ave 0.974
Test execution time: sum 8112 ms, max 1635 ms, min 110 ms
----------------------------------------------------------------

2023-10-22 15:19:12 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-10-22 15:19:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 17 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 4, redundant 3
Fitness: max 0.98(59), min 0.49(1), ave 0.964
Test execution time: sum 10242 ms, max 1860 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 15:19:46 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-10-22 15:20:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 6, redundant 6
Fitness: max 0.98(49), min 0.549(1), ave 0.963
Test execution time: sum 7868 ms, max 190 ms, min 94 ms
----------------------------------------------------------------

2023-10-22 15:20:18 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-10-22 15:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 21 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 8, redundant 3
Fitness: max 0.98(48), min 0.431(1), ave 0.949
Test execution time: sum 7383 ms, max 205 ms, min 79 ms
----------------------------------------------------------------

2023-10-22 15:20:50 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-10-22 15:21:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 54 seconds
Variants: generated 100, build-succeeded 55, build-failed 37, syntax-invalid 7, redundant 1
Fitness: max 0.98(53), min 0.765(1), ave 0.974
Test execution time: sum 7324 ms, max 215 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 15:21:23 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-10-22 15:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 28 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 6, redundant 4
Fitness: max 0.98(52), min 0.49(1), ave 0.96
Test execution time: sum 7876 ms, max 196 ms, min 77 ms
----------------------------------------------------------------

2023-10-22 15:21:58 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-10-22 15:22:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 1 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 0.98(55), min 0.549(1), ave 0.967
Test execution time: sum 7709 ms, max 218 ms, min 107 ms
----------------------------------------------------------------

2023-10-22 15:22:30 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-10-22 15:23:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.843(1), ave 0.971
Test execution time: sum 7817 ms, max 192 ms, min 109 ms
----------------------------------------------------------------

2023-10-22 15:23:03 [main] [INFO]  KGenProgMain - GA stopped
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -449,6 +449,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -973,11 +973,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v392)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v517)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -973,7 +972,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v572)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -449,6 +448,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,7 +973,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v778)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -973,11 +973,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
@@ -1054,7 +1052,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v851)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +384,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -973,7 +980,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -973,7 +977,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v866)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,6 +382,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -973,11 +978,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v885)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,7 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -973,11 +974,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,7 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1054,7 +1054,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -449,6 +449,8 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,7 +975,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1276)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:04 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -973,9 +973,8 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
-        if (chunkSize > 0) {
+        if (mod != 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1392)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,7 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,7 +383,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -449,6 +454,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -979,7 +985,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,7 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,7 +383,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -449,6 +454,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,7 +979,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v1649)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -342,7 +342,18 @@
         } else {
             this.encodeSize = 4;
         }
-        this.decodeSize = this.encodeSize - 1;
+        switch (modulus) {
+		case 2:
+			x = x >> 4;
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		case 3:
+			x = x >> 2;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		}
+		this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
             String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
@@ -382,7 +393,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -452,6 +462,7 @@
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						x = x >> 1;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -973,7 +984,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1054,7 +1064,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2555)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -342,7 +342,18 @@
         } else {
             this.encodeSize = 4;
         }
-        this.decodeSize = this.encodeSize - 1;
+        switch (modulus) {
+		case 2:
+			x = x >> 4;
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		case 3:
+			x = x >> 2;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		}
+		this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
             String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
@@ -382,7 +393,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -411,7 +421,6 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
         }
         return eof ? -1 : 0;
     }
@@ -973,7 +982,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1061,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2562)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -342,7 +342,29 @@
         } else {
             this.encodeSize = 4;
         }
-        this.decodeSize = this.encodeSize - 1;
+        switch (modulus) {
+		case 2:
+			x = x >> 4;
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		case 3:
+			x = x >> 2;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		}
+		switch (modulus) {
+		case 2:
+			x = x >> 4;
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		case 3:
+			x = x >> 2;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x) & MASK_8BITS);
+			break;
+		}
+		this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
             String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
@@ -382,7 +404,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -411,7 +432,6 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
         }
         return eof ? -1 : 0;
     }
@@ -973,7 +993,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1054,7 +1073,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2588)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -411,7 +410,6 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
         }
         return eof ? -1 : 0;
     }
@@ -973,7 +971,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1054,7 +1051,9 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2687)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -411,7 +413,6 @@
             if (readPos >= pos) {
                 buffer = null;
             }
-            return len;
         }
         return eof ? -1 : 0;
     }
@@ -973,7 +974,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1053,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2788)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -382,7 +382,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -449,6 +448,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,11 +973,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
@@ -1053,8 +1051,10 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v2793)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,7 +385,6 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -452,6 +454,7 @@
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						x = x >> 1;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -973,7 +976,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,8 +1055,10 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4343)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,7 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +383,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -973,11 +979,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
@@ -1053,8 +1057,12 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +385,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -449,6 +462,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -973,7 +987,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1054,7 +1067,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +384,21 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -452,6 +469,7 @@
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						x = x >> 1;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -979,7 +997,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1054,7 +1071,8 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
+        resizeBuffer();
+		modulus = 0;
         eof = false;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v6206)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +385,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -449,9 +462,11 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						x = x >> 1;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -471,6 +486,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,9 +989,8 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
-        if (chunkSize > 0) {
+        if (len > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
@@ -1053,6 +1068,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v7721)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -449,9 +459,11 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						x = x >> 1;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -471,6 +483,8 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -975,11 +989,10 @@
         if (mod != 0) {
             len += 4 - mod;
         }
-        if (chunkSize > 0) {
+        if (len > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1053,6 +1066,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9315)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +385,36 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -447,7 +480,12 @@
             }
             switch (modulus) {
                 case 1 :
-                    buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+				{
+					byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+					System.arraycopy(buffer, 0, b, 0, buffer.length);
+					buffer = b;
+				}
+				buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
@@ -973,7 +1011,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1090,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9407)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +384,21 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -447,11 +464,20 @@
             }
             switch (modulus) {
                 case 1 :
-                    buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
+				{
+					byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+					System.arraycopy(buffer, 0, b, 0, buffer.length);
+					buffer = b;
+				}
+				buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
+				eof = true;
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
+						x = x >> 1;
                         buffer[pos++] = PAD;
                     }
                     break;
@@ -471,6 +497,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,7 +1000,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1079,8 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v9709)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +385,21 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -449,6 +467,10 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
+				eof = true;
+				eof = true;
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -979,7 +1001,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1053,6 +1074,8 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10139)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +384,21 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -449,6 +466,8 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -471,6 +490,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,7 +993,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1072,9 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
+		readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v10651)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +384,46 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +513,11 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -967,13 +1014,9 @@
      *         a long since a max-len array will require Integer.MAX_VALUE + 33%.
      */
     private static long getEncodeLength(byte[] pArray, int chunkSize, byte[] chunkSeparator) {
-        // base64 always encodes to multiples of 4.
-        chunkSize = (chunkSize / 4) * 4;
-
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v13745)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,10 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +386,41 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +510,9 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,7 +1015,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1094,8 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v14537)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,41 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -449,6 +490,7 @@
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+				eof = true;
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
@@ -471,6 +513,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -494,6 +537,7 @@
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         pos += lineSeparator.length;
                         currentLinePos = 0;
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                     }
                 }
             }
@@ -973,7 +1017,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1053,6 +1096,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15009)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +385,61 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -826,7 +884,8 @@
 
         long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
         if (len > maxResultSize) {
-            throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
+            int readLen = 0;
+			throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
                 len +
                 ") than the specified maxium size of " +
                 maxResultSize);
@@ -979,7 +1038,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
@@ -1053,6 +1111,8 @@
         buffer = null;
         pos = 0;
         readPos = 0;
+		readPos = 0;
+		readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15136)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,46 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +520,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +542,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -975,13 +1026,8 @@
         if (mod != 0) {
             len += 4 - mod;
         }
-        if (chunkSize > 0) {
-            boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
-            if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
-            }
-        }
+        if (chunkSize > 0)
+			return len;
         return len;
     }
 
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,16 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +392,26 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -409,7 +439,6 @@
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
-                buffer = null;
             }
             return len;
         }
@@ -471,6 +500,8 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +523,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1011,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v16616)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +530,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -973,7 +1033,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v17710)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,17 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +393,46 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -409,7 +460,6 @@
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
-                buffer = null;
             }
             return len;
         }
@@ -979,7 +1029,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v18435)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,16 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +392,46 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -477,6 +527,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,7 +543,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
+						System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                         currentLinePos = 0;
                     }
                 }
@@ -979,7 +1032,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19124)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,13 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +389,66 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +538,7 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +560,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1043,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,16 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +392,50 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -409,7 +463,6 @@
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
-                buffer = null;
             }
             return len;
         }
@@ -477,6 +530,9 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -973,7 +1029,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v20731)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,13 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +389,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +528,16 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +553,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1043,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v21407)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,10 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +386,81 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +550,14 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +573,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -977,9 +1062,7 @@
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v23639)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,17 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +393,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +532,8 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +555,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1040,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v24119)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,61 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -409,7 +470,6 @@
             System.arraycopy(buffer, readPos, b, bPos, len);
             readPos += len;
             if (readPos >= pos) {
-                buffer = null;
             }
             return len;
         }
@@ -471,6 +531,9 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +555,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -759,7 +827,9 @@
      * @return a byte array containing binary data
      */
     public byte[] decode(byte[] pArray) {
-        reset();
+        x = x >> 3;
+		x = x >> 3;
+		reset();
         if (pArray == null || pArray.length == 0) {
             return pArray;
         }
@@ -973,7 +1043,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25053)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,66 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +536,18 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +563,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1047,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
@@ -1051,7 +1124,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25165)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,14 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +390,66 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +539,14 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +562,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1048,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25282)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,61 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +535,16 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +560,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1045,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25298)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,14 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +390,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +529,12 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +556,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1040,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25376)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +527,16 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +552,13 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1040,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25378)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,76 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +546,17 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +572,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,11 +1056,9 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
-            len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
                 len += chunkSeparator.length;
             }
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25458)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,71 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -477,6 +551,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +568,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1053,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25598)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,61 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +532,16 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +557,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1043,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25684)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,66 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +537,16 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +562,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1048,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25686)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,13 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +389,76 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -477,6 +554,9 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +572,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1056,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25760)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,51 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +522,18 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +549,12 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1036,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25875)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +530,15 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +554,12 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1041,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25893)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,8 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +384,101 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +568,18 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +595,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1078,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v25911)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,83 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +553,18 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +580,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1069,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v26610)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,50 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +520,26 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +555,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1037,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27749)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,9 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +385,111 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +579,18 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -979,7 +1093,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v27815)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,102 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +572,18 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -979,7 +1086,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28148)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,66 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +540,21 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +570,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1058,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v28807)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,14 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +390,87 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +560,20 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +589,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1077,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v29846)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,11 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +387,67 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +537,25 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +571,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1053,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30237)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,12 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +388,71 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +542,22 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +573,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1063,7 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
+                return -1;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30431)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,13 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +389,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +528,28 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +565,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1053,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30607)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,15 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +391,73 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				int bytesCopied = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +547,21 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +577,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1065,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v30611)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,18 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +394,59 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +536,23 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +568,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -972,7 +1049,7 @@
 
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
-        if (mod != 0) {
+        if (pArray == null || pArray.length == 0) {
             len += 4 - mod;
         }
         if (chunkSize > 0) {
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v31636)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,20 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +396,41 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +520,25 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +554,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1043,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v32542)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,22 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +398,55 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +536,22 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -973,7 +1048,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33422)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,17 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,7 +393,81 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -471,12 +556,22 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +587,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -975,7 +1071,7 @@
         if (mod != 0) {
             len += 4 - mod;
         }
-        if (chunkSize > 0) {
+        if (pArray == null || pArray.length == 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33664)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,16 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +392,86 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +561,22 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +592,8 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -975,7 +1077,7 @@
         if (mod != 0) {
             len += 4 - mod;
         }
-        if (chunkSize > 0) {
+        if (pArray == null || pArray.length == 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33679)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,16 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +392,55 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +530,27 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +566,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1048,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33825)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,19 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,7 +395,71 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -471,12 +548,23 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -973,7 +1061,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v33933)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,18 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +394,74 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +551,22 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +582,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1070,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35320)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,19 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +395,61 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +539,27 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -979,7 +1062,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v35435)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,14 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +390,69 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +542,33 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				modulus = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +584,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1066,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38618)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,13 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +389,58 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +530,33 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				modulus = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +572,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1062,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v38849)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,16 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +392,101 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +576,31 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -973,7 +1097,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v41830)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,36 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +412,36 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +531,26 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
+					currentLinePos = 0;
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +566,7 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1054,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v43903)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,23 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +399,41 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +523,30 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +568,9 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1052,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v44748)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,30 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +406,51 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +540,25 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +580,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -973,7 +1065,6 @@
         long len = (pArray.length * 4) / 3;
         long mod = len % 4;
         if (mod != 0) {
-            len += 4 - mod;
         }
         if (chunkSize > 0) {
             boolean lenChunksPerfectly = len % chunkSize == 0;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v47401)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,30 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +406,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,12 +505,39 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					currentLinePos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -492,6 +553,11 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1045,7 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
+                chunkSize = (chunkSize / 4) * 4;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v48048)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -337,6 +337,31 @@
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
+		x = x >> 4;
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
@@ -382,6 +407,56 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             pos = 0;
             readPos = 0;
         } else {
@@ -471,6 +546,27 @@
             byte b = lineSeparator[lineSeparator.length - 1];
             if (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
                 System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
+				readPos = 0;
                 pos += lineSeparator.length;
             }
         } else {
@@ -492,6 +588,10 @@
                     currentLinePos += 4;
                     if (lineLength > 0 && lineLength <= currentLinePos) {
                         System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
+						readPos = 0;
                         pos += lineSeparator.length;
                         currentLinePos = 0;
                     }
@@ -979,7 +1079,6 @@
             boolean lenChunksPerfectly = len % chunkSize == 0;
             len += (len / chunkSize) * chunkSeparator.length;
             if (!lenChunksPerfectly) {
-                len += chunkSeparator.length;
             }
         }
         return len;
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  PatchLogExporter - patch (v49808)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-22 15:23:05 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 45752
Build succeeded variants = 27397
Time elapsed = 2 hours 43 minutes 36 seconds
Exit status = FAILURE (maximum generation)
